<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>上海之行（一）</title>
    <link href="/2023/05/20/%E4%B8%8A%E6%B5%B7%E4%B9%8B%E8%A1%8C%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2023/05/20/%E4%B8%8A%E6%B5%B7%E4%B9%8B%E8%A1%8C%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>2023年3月24日早上6点启程去上海，那天从宿舍很早得就出去了,走到2号楼的时候, 发现教学楼里已经有教室亮着灯了, 那时才6点半不到,天还不是很亮, 每个学校都会有努力的学生, 好的学校只是更多, 更优秀.</p><center class="half"><img src="https://raw.githubusercontent.com/handong991201/picture/main/img/IMG_20230324_062751.jpg" width="300"/><img src="https://raw.githubusercontent.com/handong991201/picture/main/img/IMG_20230324_062855.jpg" width="300"/></center><p>走到北门坐公交车, 等了几分钟, 车来了, 大清早的车上坐的满满当当,周五还是工作日, 很多人为了工作需要每天通勤好长时间, 先是坐公交去地铁站,再乘地铁, 地铁上的早高峰也是人挤人的, 乘坐的站多, 站着也难受的.我就在想这样子到底值不值呢, 找一个离家近一点的地方, 方便一点,可是现实往往事与愿违. 之前在网上看到坐高铁去另一个城市上班的,从早上6点半从家出发, 晚上8点多回到家, 周一到周五都这么干,真的是很辛苦的. 现在想想以后要是有一份稳定的工作,离家近的就是一件幸福的事.</p><p>从学校坐了一个多小时的交通工具赶到了西安北站，到那已经8点多了。8点50分左右坐上了高铁，坐得靠窗的位置，那一趟列车我那个车厢几乎都坐满了人，我旁边的人出差的路上也是在工作，在那忙着看ppt，坐在我前面的两排的四个人应该是一伙的，应该是去上海出差，从他们的谈话中看得出来是生意人。也许等到自己都工作了，也会因工作所迫而在出差的路上也工作。早上没有吃饭，在车上吃的零食，等到中午的时候，本来打算去泡方便面的，但想想还是算了，吃那个好吃点的饼干吧。沿途的风景就是北方这边很荒凉，山都是秃秃的，到了徐州那边过去，沿着南京过去，就很美丽，能看到两边绿绿的，城市似乎也很美，这应该说的是苏州，经过苏州北站的时候，这个站两边好像是一个半圆。很快到了，三点，就进入了上海虹桥站。</p><p>走出高铁就觉得很冷，当时下雨了，而且也有点风，站在出站口那边等两位老师，从那个风口能感受到阵阵凉意。等了将近一个小时，与两位老师碰面了。于是我们找出去的路。在之前我看地图上有什么闵虹2线，我刚开始以为是地铁，没想到那是公交，而且还不便宜，得12块钱。我们最终是坐得这趟车，我们在车站的一层找了许久的路，一直没有找到，后来我去问了一个店老板，得知先乘斜梯上地面，再出去乘坐。出了车站找到了乘公交车的地方，其实这不是公交车，他的车是大巴车，那里等的人还是挺多的。4点40多的时候车终于来了，但是这其实是4点20分的那班人，因为那天刚好是周五下班晚高峰一堆人涌上前去，院长先上去了，并为我们占了座，为了能够上去，我就往前挤。坐上车，出发，走的都是高架桥，上海的高架桥很多，路两旁的绿化也做得很好。车刚开始行驶地很缓慢，路上很拥堵。在路上看到远处在修高架，水泥搅拌车停在那里，很好奇这个高架是怎么修的，是跟铁路上的那个桥一样吗，感觉是不一样的。我们差不多坐了一个小时左右，才到了那个东川路。剩下的我们就是步行过去。走在路边上，感觉很悠闲，南方的环境是比北方要好很多的。从路两边的植物就可以看出来。</p><p>到了酒店，首先领到了组委会给我们准备的小礼物，一个华东师范大学数学科学学院的袋子，里面装了一些东西，一个本子，会议手册等等。然后拿到饭票去吃饭，那时候菜已经不是很多了，夹了两块鱼和一些其他蔬菜。没有吃多少，吃完了，院长让我们把那点纸巾分了，就这么点感觉真没有必要啊。接下去就是去拿房卡上房间去。</p><p>开了门，对一个陌生的房间还是比较感兴趣的，先摸索了屋里的灯，找床上面的大灯找了一点时间，那个中央空调怎么开我在那住了两天仍是没有搞懂。窗帘是自动的。把会议手册等东西拿出来翻了一番，就准备复习了。复习着复习着，总是想来要不要来一发，后来来了一发，终于可以全身脱光来一发了，在那对着镜子打，没多久就射了，不过射得还挺多的，射到了镜子上了，赶快拿纸巾擦了擦。接着就是洗阴茎，还拍了几张裸照。接着复习，到了11点半多吧，去洗漱，准备睡了。那个床很软，从来没有睡过那么软的床，坐上去就凹下去好多。</p><p>第二天，周六早上大概5点左右被外面街上什么东西吵醒了，6点20的时候起床了，当时天已经比较亮了。洗完漱下去吃饭，院长已经在那里坐着吃了。早上吃的不多，夹了一两块鸭肉吧，然后一根火腿肠，一点炒粉干，早上有蛋炒饭，这个挺不错的，最重要的是有白米粥。吃完坐在那里休息了一下，7点20多准备出发坐大巴车过去了。在路上经过了交通大学，其中有一个门看上去很漂亮，这是个小门，过了一会儿，见到的是大门，很宽敞，很气派，觉得上海交通大学很长，很大。不久就到了华东师范大学，从一个门进去刚好就是停车场，从那下车走到考场去。到那就看见了很多人在那里拍照，我们也去拍照了，老师先给我自己一个人拍了一张，后来三人一起拍了一张，接下去就进考场了。考场在2楼213教室，那里教室很新，课桌椅也很好，卫生间也很不错，全自动的。</p><p>接下去就是考试了。</p>]]></content>
    
    
    <categories>
      
      <category>随记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Lagrange恒等式</title>
    <link href="/2022/04/12/Lagrange%E6%81%92%E7%AD%89%E5%BC%8F/"/>
    <url>/2022/04/12/Lagrange%E6%81%92%E7%AD%89%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>​今天在学习微分几何的第一章时，看见了书上提到lagrange恒等式，回忆起去年在复习高等代数的时候，在教材上看到过lagrange恒等式，于是就在想这两者之间是否有着联系，果不其然，两者只是描述的方式不一样，其本质上是一样的。</p><h2 id="高等代数中的lagrange恒等式">高等代数中的Lagrange恒等式</h2><ol type="1"><li><p>Cauchy恒等式：当<spanclass="math inline">\(n\geqslant2\)</span>​时，有 <spanclass="math display">\[(\sum_{i=1}^{n}a_ic_i)(\sum_{i=1}^{n}b_id_i)-(\sum_{i=1}^{n}a_id_i)(\sum_{i=1}^{n}b_ic_i)=\sum_{1\leqslantj&lt;k\leqslant n}(a_jb_k-a_kb_j)(c_jd_k-c_kd_j)\]</span></p><blockquote><p>证明时先将左边化为一个2阶行列式，再将此行列式化为两个矩阵相乘的行列式，最后用Cauchy-Binet公式求得。</p></blockquote></li><li><p>Lagrange恒等式：当<spanclass="math inline">\(n\geqslant2\)</span>时，有 <spanclass="math display">\[(\sum_{i=1}^{n}a_i^2)(\sum_{i=1}^{n}b_i^2)-(\sum_{i=1}^{n}a_ib_i)^2=\sum_{1\leqslantj&lt;k\leqslant n}(a_jb_k-a_kb_j)^2\]</span></p><blockquote><p>Lagrange恒等式是Cauchy恒等式的特例。</p></blockquote></li></ol><h2 id="微分几何中的largange恒等式">微分几何中的Largange恒等式</h2><ol type="1"><li><p>利用内积和外积叙述的Largrange恒等式：设<spanclass="math inline">\(a,b,c,d\)</span>是<spanclass="math inline">\(\mathrm{R}^3\)</span>中的四个向量，则有 <spanclass="math display">\[(a\times b,c\times d)=(a,c)(b,d)-(a,d)(b,c)\]</span></p><blockquote><p>可以采用代数的方法证明此等式。</p></blockquote></li><li><p>上式的一个特例： <span class="math display">\[(a\times b)^2+(a,b)^2=a^2b^2\]</span></p><blockquote><p>利用内积和外积的定义，模长的定义即得。</p></blockquote></li></ol>]]></content>
    
    
    <categories>
      
      <category>微分几何</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多项式</title>
    <link href="/2021/10/04/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    <url>/2021/10/04/%E5%A4%9A%E9%A1%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>在阅读《高等代数考研——高频真题分类精解300例》，记录多项式的相关练习。</p><h2 id="带余除法">带余除法</h2><ol type="1"><li>设多项式<span class="math inline">\(f(x)\)</span>除以<spanclass="math inline">\(x^2-1,x^2+3\)</span>的余式分别为<spanclass="math inline">\(2x+7,2x-1\)</span>求多项式<spanclass="math inline">\(f(x)\)</span>除以<spanclass="math inline">\((x^2-1)(x^2+3)\)</span>的余式.<ul><li><spanclass="math inline">\(\frac{1}{2}x^3+2x^2+\frac{7}{2}x+5\)</span>.</li></ul></li><li>求次数最低的首项系数为<spanclass="math inline">\(1\)</span>的实多项式<spanclass="math inline">\(f(x)\)</span>使得<spanclass="math inline">\(f(0)=7,f(1)=14,f(2)=35,f(3)=76\)</span>.<ul><li><span class="math inline">\(f(x)=x^3+4x^2+2x+7\)</span>.</li><li>拉格朗日插值</li></ul></li><li>求次数最低的首项系数为<spanclass="math inline">\(1\)</span>的实多项式<spanclass="math inline">\(f(x)\)</span>使得<spanclass="math inline">\(x^2+1|f(x)\)</span>,且<spanclass="math inline">\(x^3+x^2+1|f(x)+1\)</span>.<ul><li><span class="math inline">\(f(x)=x^3+x\)</span>.</li><li>中国剩余定理</li></ul></li></ol><h2 id="整除">整除</h2><ol type="1"><li><p>设<spanclass="math inline">\(f(x),g(x),h(x)\)</span>是实系数多项式,且 <spanclass="math display">\[(x^2+1)h(x)+(x-1)f(x)+(x-2)g(x)=0,\\(x^2+1)h(x)+(x+1)f(x)+(x+2)g(x)=0\]</span> 证明:<span class="math inline">\(f(x),g(x)\)</span>能被<spanclass="math inline">\(x^2+1\)</span>整除(<spanclass="math inline">\(x^2+1\)</span>为<spanclass="math inline">\(f(x),g(x)\)</span>的公因式).</p><ul><li>解出<span class="math inline">\(f(x),g(x)\)</span>.</li><li><span class="math inline">\(x\)</span>用<spanclass="math inline">\(i,-i\)</span>代入,证明<spanclass="math inline">\(f(i)=f(-i)=0\)</span>.</li></ul></li><li><p>设<spanclass="math inline">\((x^2+x+1)|(f(x^3)+xg(x^3))\)</span>,且<spanclass="math inline">\(n\)</span>阶方阵<spanclass="math inline">\(A\)</span>有一个特征值为<spanclass="math inline">\(1\)</span>,证明:<spanclass="math inline">\(f(A),g(A)\)</span>都不是可逆阵.</p><ul><li>先证明<span class="math inline">\(1\)</span>是<spanclass="math inline">\(f(x),g(x)\)</span>的根,用到<spanclass="math inline">\(3\)</span>次单位根,然后根据<spanclass="math inline">\(f(1)\)</span>为<spanclass="math inline">\(f(A)\)</span>的特征值得到<spanclass="math inline">\(f(A)\)</span>为不可逆.</li></ul></li><li><p>设多项式 <span class="math display">\[f(x)=x^{3m}-x^{3n+1}+x^{3p+2},g(x)=x^2-x+1,\]</span> 其中为<spanclass="math inline">\(m,n,p\)</span>非负整数.证明:<spanclass="math inline">\(g(x)|f(x)\)</span>的充要条件是<spanclass="math inline">\(m,n,p\)</span>有相同的奇偶性.</p><ul><li>设<span class="math inline">\(g(x)\)</span>的两个根为<spanclass="math inline">\(\varepsilon_1,\varepsilon_2\)</span>,<spanclass="math inline">\(g(x)|f(x)\)</span>等价于<spanclass="math inline">\(f(\varepsilon_1)=0,f(\varepsilon_2)=0\)</span>.</li></ul></li><li><p>设<span class="math inline">\(m,n,p\)</span>为非负整数,<spanclass="math inline">\(f(x)=x^{3m}+x^{3n+1}+x^{3p+2}+1\)</span>,证明:<spanclass="math inline">\((x^2+x+1,f(x))=1\)</span>.</p><ul><li>理解本质:<span class="math inline">\(x^2+x+1\not\midf(x)\)</span>.</li></ul></li><li><p>设<span class="math inline">\(a_i(1\leqslant i\leqslantn)\)</span>,是<spanclass="math inline">\(n\)</span>个非负整数,试求多项式<spanclass="math inline">\(\sum\limits_{i=1}^{n}x^{a_i}\)</span>被<spanclass="math inline">\(x^2+x+1\)</span>整除的充要条件.</p></li><li><p>(西北大学)设<spanclass="math inline">\(f_1(x),\cdots,f_n(x)(n\geqslant2)\)</span>为多项式，且满足<span class="math display">\[x^{n-1}+\cdots+x+1|f_1(x^n)+xf_2(x^n)+\cdots+x^{n-1}f_n(x^n).\]</span> 证明:存在某一常数<spanclass="math inline">\(c\)</span>使得<spanclass="math inline">\((x-1)^n|\prod\limits_{i=1}^n(f_i(x)-c)\)</span>.</p><ul><li><p>证明<spanclass="math inline">\((f_1(1),f_2(1),\cdots,f_n(1))\)</span>与<spanclass="math inline">\((1,1,\cdots,1)\)</span>平行，群里的大佬做的。</p><blockquote><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20211009203841444.png" /></p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20211009203909354.png" /></p></blockquote></li></ul></li><li><p>若<span class="math inline">\((x-1)|g(x^n)\)</span>，求证:<spanclass="math inline">\((x^n-1)|g(x^n)\)</span>.</p></li><li><p>若<span class="math inline">\((x-a)|g(x^n)\)</span>，求证:<spanclass="math inline">\((x^n-a^n)|g(x^n)\)</span>.</p></li><li><p>设<span class="math inline">\(m\)</span>为任意正整数，证明:<spanclass="math inline">\(f^m(x)|g^m(x)\)</span>的充要条件为<spanclass="math inline">\(f(x)|g(x)\)</span>.</p></li><li></li></ol>]]></content>
    
    
    <categories>
      
      <category>高等代数</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>和式的极限问题</title>
    <link href="/2021/10/02/%E5%92%8C%E5%BC%8Fand%E7%A7%AF%E5%88%86%E7%9A%84%E6%9E%81%E9%99%90%E9%97%AE%E9%A2%98/"/>
    <url>/2021/10/02/%E5%92%8C%E5%BC%8Fand%E7%A7%AF%E5%88%86%E7%9A%84%E6%9E%81%E9%99%90%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="和式的极限">和式的极限</h1><ol type="1"><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-1,1)\)</span>内有定义，在<spanclass="math inline">\(x=0\)</span>处可导，且<spanclass="math inline">\(f(0)=0\)</span>.证明： <spanclass="math display">\[\lim_{n\to\infty}\sum_{k=1}^nf(\frac{k}{n^2})=\frac{f&#39;(0)}{2}.\]</span></li></ol><h1 id="积分的极限">积分的极限</h1><ol type="1"><li><p>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([0,+\infty]\)</span>上连续，并且无穷积分<spanclass="math inline">\(\int_0^{\infty}f(x)\mathrm{d}x\)</span>收敛，求<span class="math display">\[\lim_{y\to+\infty}\frac{1}{y}\int_0^yxf(x)\mathrm{d}x.\]</span></p></li><li><p>设<span class="math inline">\(f(x)=x-[x]\)</span>，求 <spanclass="math display">\[\lim\limits_{x\to+\infty}\frac{1}{x}\int_0^xf(t)\mathrm{d}t.\]</span></p></li><li></li></ol>]]></content>
    
    
    <categories>
      
      <category>数学分析</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>常微分方程</title>
    <link href="/2021/09/29/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/"/>
    <url>/2021/09/29/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="微分方程解法">微分方程解法</h2><ol type="1"><li><p>一阶线性微分方程<spanclass="math inline">\(y&#39;+p(x)y=q(x)\)</span>的解法：</p><ul><li><p>常数变易法</p><blockquote><p>先求对应齐次方程的通解<span class="math inline">\(y=Ce^{-\intp(x)\mathrm{d}x}\)</span>，变动常数，设非齐次方程的解为<spanclass="math inline">\(y=C(x)e^{-\intp(x)\mathrm{d}x}\)</span>，代入非齐次方程解得<spanclass="math inline">\(C(x)=\int q(x)e^{\intp(x)\mathrm{d}x}\mathrm{d}x+C\)</span>，所以<spanclass="math inline">\(y=e^{-\int p(x)\mathrm{d}x}[\int q(x)e^{\intp(x)\mathrm{d}x}\mathrm{d}x+C]\)</span></p></blockquote></li></ul></li><li><p>二阶常系数齐次线性方程求解： <span class="math display">\[y&#39;&#39;+py&#39;+qy=0\]</span></p><ul><li><p>特征根法</p><blockquote><p>求出特征方程<spanclass="math inline">\(r^2+pr+q=0\)</span>的两个根<spanclass="math inline">\(r_1,r_2\)</span></p><p>若<span class="math inline">\(r_1\ner_2\)</span>为实根，则通解为<spanclass="math inline">\(y=C_1e^{r_1x}+C_2e^{r_2x}\)</span>.</p><p>若<span class="math inline">\(r_1= r_2\)</span>为实根，则通解为<spanclass="math inline">\(y=(C_1+C_2x)e^{r_1x}\)</span>.</p><p>若<span class="math inline">\(r_{1,2}=\alpha\pmi\beta\)</span>为共轭复根，则通解为<spanclass="math inline">\(y=e^{\alpha x}(C_1\cos\beta x+C_2\sin \betax)\)</span>.</p></blockquote></li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>高等代数重要结论</title>
    <link href="/2021/09/02/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0%E9%87%8D%E8%A6%81%E7%BB%93%E8%AE%BA/"/>
    <url>/2021/09/02/%E9%AB%98%E7%AD%89%E4%BB%A3%E6%95%B0%E9%87%8D%E8%A6%81%E7%BB%93%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="行列式">行列式</h2><ol type="1"><li><p><strong>若<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>是方阵，则</strong> <spanclass="math display">\[\begin{vmatrix}A &amp; O\\C &amp; B\end{vmatrix}=\begin{vmatrix}A\end{vmatrix}\begin{vmatrix}B\end{vmatrix}\]</span></p></li><li><p><strong>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>分别是<spanclass="math inline">\(s\times n\)</span>，<spanclass="math inline">\(n\times s\)</span>矩阵，则</strong> <spanclass="math display">\[\begin{vmatrix}I_n &amp; B\\A &amp; I_s\end{vmatrix}=\begin{vmatrix}I_s-AB\end{vmatrix}=\begin{vmatrix}I_n-BA\end{vmatrix}\]</span></p></li><li><p>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>，<spanclass="math inline">\(C\)</span>，<spanclass="math inline">\(D\)</span>都是数域<spanclass="math inline">\(K\)</span>上的<spanclass="math inline">\(n\)</span>阶矩阵，且<spanclass="math inline">\(AC=CA\)</span>，则 <span class="math display">\[\begin{vmatrix}A &amp; B\\C &amp; D\end{vmatrix}=\begin{vmatrix}AD-CB\end{vmatrix}\]</span></p><ul><li>摄动法</li></ul></li><li><p>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>是<spanclass="math inline">\(n\)</span>阶矩阵且<spanclass="math inline">\(AB=BA\)</span>，则 <span class="math display">\[\begin{vmatrix}A &amp; -B\\B &amp; A\end{vmatrix}=|A^2+B^2|\]</span></p><ul><li>由上一个可得，或者分块初等变换：<spanclass="math inline">\(i\)</span>.</li></ul></li><li><p>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>是<spanclass="math inline">\(n\)</span>阶矩阵，则 <span class="math display">\[\begin{vmatrix}A &amp; B\\B &amp; A\end{vmatrix}=|A+B||A-B|\]</span></p></li><li><p>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>是<spanclass="math inline">\(n\)</span>阶实矩阵，则 <spanclass="math display">\[\begin{vmatrix}A &amp; -B\\B &amp; A\end{vmatrix}\geqslant0\]</span></p></li><li><p><strong>（行列式降阶公式）<spanclass="math inline">\(A,B\)</span>为可逆矩阵，则有</strong> <spanclass="math display">\[|D||A-BD^{-1}C|=|A||D-CA^{-1}B|.\]</span></p><ul><li>求下列行列式的值： <span class="math display">\[\begin{vmatrix}a_1^2 &amp; a_1a_2+1 &amp; \cdots &amp; a_1a_n+1\\a_2a_1+1 &amp; a_2^2 &amp; \cdots &amp; a_2a_n+1\\\vdots &amp; \vdots &amp; &amp; \vdots\\a_na_1+1 &amp; a_na_2+1 &amp; \cdots &amp; a_na_n+1\end{vmatrix}\]</span></li></ul></li><li><p>行列式求值：乘以个转置 <span class="math display">\[\begin{vmatrix}x &amp; y &amp; -z &amp; w\\y &amp; -x &amp; -w &amp; -z\\z &amp; -w &amp; x &amp; y\\w &amp; z &amp; y &amp; -x\end{vmatrix}\]</span></p></li></ol><h2 id="矩阵">矩阵</h2><ol type="1"><li>上（下）三角阵的加减，数乘，乘法（幂），多项式，伴随和求逆都是上（下）三角阵，并且所得上（下）三角阵的主对角元是对应元素的加减，数乘，乘法（幂），多项式，伴随和求逆。</li><li><strong>任意一个复矩阵一定相似与一个上三角阵。</strong></li><li>任意一个复矩阵<span class="math inline">\(A\)</span>，存在<spanclass="math inline">\(n\)</span>阶复对称矩阵<spanclass="math inline">\(B,C\)</span>，使得<spanclass="math inline">\(A=BC\)</span>，并且可以指定<spanclass="math inline">\(B,C\)</span>，中任何一个为可逆矩阵。</li><li>任意一个复矩阵<spanclass="math inline">\(A\)</span>都相似于一个复对称阵。</li><li>分块对角矩阵对角线上的块打乱之后是合同的，正交相似的。</li></ol><h3 id="矩阵方程">矩阵方程</h3><ol type="1"><li>矩阵方程<span class="math inline">\(AX=B\)</span>有解等价于<spanclass="math inline">\(B\)</span>的列向量可由<spanclass="math inline">\(A\)</span>的列向量线性表示，无解等价于<spanclass="math inline">\(B\)</span>的某个列向量不能由<spanclass="math inline">\(A\)</span>的列向量线性表示。<ul><li>过度矩阵。</li></ul></li></ol><h3 id="相抵标准型">相抵标准型</h3><ol type="1"><li>设<span class="math inline">\(A\)</span>是一个<spanclass="math inline">\(m\times n\)</span>矩阵，则<ul><li>若<span class="math inline">\(A\)</span>列满秩，则存在秩为<spanclass="math inline">\(n\)</span>的<span class="math inline">\(n\timesm\)</span>矩阵<span class="math inline">\(B\)</span>，使得<spanclass="math inline">\(BA=I_n\)</span>.（列满秩存在左逆）</li><li>若<span class="math inline">\(A\)</span>行满秩，则存在秩为<spanclass="math inline">\(m\)</span>的<span class="math inline">\(n\timesm\)</span>矩阵<span class="math inline">\(C\)</span>，使得<spanclass="math inline">\(AC=I_m\)</span>.（行满秩存在右逆）</li></ul></li><li>设<span class="math inline">\(A\)</span>是一个<spanclass="math inline">\(m\times n\)</span>矩阵，则<ul><li>若<span class="math inline">\(A\)</span>列满秩，且<spanclass="math inline">\(AD=AE\)</span>，则<spanclass="math inline">\(D=E\)</span>.</li><li>若<span class="math inline">\(A\)</span>行满秩，且<spanclass="math inline">\(DA=EA\)</span>，则<spanclass="math inline">\(D=E\)</span>.</li></ul></li><li>设<span class="math inline">\(A\)</span>是一个<spanclass="math inline">\(m\times n\)</span>矩阵，秩为<spanclass="math inline">\(r\)</span>，则<spanclass="math inline">\(A\)</span>存在满秩分解：<spanclass="math inline">\(A=BC\)</span>，其中<spanclass="math inline">\(B\)</span>为<span class="math inline">\(m\timesr\)</span>列满秩矩阵，<span class="math inline">\(C\)</span>为<spanclass="math inline">\(r \times n\)</span>行满秩矩阵.<ul><li>若<span class="math inline">\(A\)</span>有两个满秩分解<spanclass="math inline">\(A=B_1C_1=B_2C_2\)</span>，则存在<spanclass="math inline">\(r\)</span>阶可逆矩阵<spanclass="math inline">\(P\)</span>使得<spanclass="math inline">\(B_2=B_1P,C_2=P^{-1}C_1\)</span>.（利用1证明）</li></ul></li></ol><h3 id="实对称矩阵">实对称矩阵</h3><ol type="1"><li><span class="math inline">\(n\)</span>阶对称矩阵<spanclass="math inline">\(A\)</span>是零矩阵的充要条件是对任意的<spanclass="math inline">\(n\)</span>维列向量<spanclass="math inline">\(\alpha\)</span>，有<spanclass="math inline">\(\alpha&#39;A\alpha=0\)</span>.</li><li>实对称矩阵属于不同特征值的特征向量是正交的。</li><li>实对称矩阵的特征值都为实数。</li><li>实对称矩阵一定正交相似对角矩阵。<ul><li>已知<span class="math inline">\(B,C\)</span>为<spanclass="math inline">\(n\)</span>阶实对称阵，<spanclass="math inline">\(|B|=0\)</span>，则存在<spanclass="math inline">\(n\)</span>阶实对称阵<spanclass="math inline">\(A\)</span>使得<spanclass="math inline">\(AB+BA&#39;=C\)</span>.</li></ul></li><li>实对称矩阵的特征值的代数重数等于几何重数。<ul><li>因为实对称矩阵一定可以对角化。</li></ul></li></ol><h3 id="反对称矩阵">反对称矩阵</h3><ol type="1"><li><span class="math inline">\(n\)</span>阶矩阵<spanclass="math inline">\(A\)</span>是反对称矩阵的充要条件是对任意的<spanclass="math inline">\(n\)</span>维列向量<spanclass="math inline">\(\alpha\)</span>，有<spanclass="math inline">\(\alpha&#39;A\alpha=0\)</span>.</li><li><span class="math inline">\(n\)</span>阶矩阵<spanclass="math inline">\(A\)</span>是反对称矩阵，则<spanclass="math inline">\(I_n-A\)</span>不可逆.</li><li><span class="math inline">\(n\)</span>阶矩阵<spanclass="math inline">\(A\)</span>是反对称矩阵，则其行列式的值总是非负实数.</li></ol><h3 id="伴随矩阵">伴随矩阵</h3><ol type="1"><li><p>设<span class="math inline">\(A\)</span>是<spanclass="math inline">\(n\)</span>阶矩阵（<spanclass="math inline">\(n\geqslant2\)</span>），则：<spanclass="math inline">\(|A^*|=|A|^{n-1}\)</span>.</p></li><li><p>设<span class="math inline">\(A\)</span>是<spanclass="math inline">\(n\)</span>阶矩阵（<spanclass="math inline">\(n\geqslant 3\)</span>），则：<spanclass="math inline">\((A^*)^*=|A|^{n-2}A\)</span>.</p></li><li><p>设<span class="math inline">\(A,B\)</span>为<spanclass="math inline">\(n\)</span>阶矩阵，求证：<spanclass="math inline">\((AB)^*=B^*A^*\)</span>.</p></li><li><p>设<span class="math inline">\(A\)</span>是<spanclass="math inline">\(n\)</span>阶矩阵（<spanclass="math inline">\(n\geqslant2\)</span>），则有 $$ (A^*)=</p><span class="math display">\[\begin{cases}n &amp; \text{rand}(A)=n,\\1 &amp; \text{rand}(A)=n-1,\\0 &amp; \text{rand}(A)&lt;n-1.\end{cases}\]</span><p>$$</p></li><li></li></ol><h3 id="矩阵的逆">矩阵的逆</h3><p><strong>证明矩阵可逆的方法：</strong></p><blockquote><ul><li>对应的齐次线性方程组只有零解，从而系数矩阵的行列式为<spanclass="math inline">\(0\)</span>.</li><li>行列式不等于0 。</li><li>满秩。</li><li>凑因子：即找到对应的逆</li><li>特征值非零<ul><li>设<span class="math inline">\(n\)</span>阶方阵<spanclass="math inline">\(A\)</span>满足<spanclass="math inline">\(A^2-A-3I_n=O\)</span>，则<spanclass="math inline">\(A-2I_n\)</span>可逆。</li></ul></li><li>互素多项式的应用</li></ul></blockquote><ol type="1"><li><p>矩阵<span class="math inline">\(A\)</span>可逆<spanclass="math inline">\(\iff |A|\ne0 \iff A\)</span>满秩。</p></li><li><p>设<span class="math inline">\(A\)</span>为<spanclass="math inline">\(m\times n\)</span>矩阵，<spanclass="math inline">\(B\)</span>为<span class="math inline">\(n\timesm\)</span>矩阵，使得<spanclass="math inline">\(I_m+AB\)</span>可逆，则<spanclass="math inline">\(I_n+BA\)</span> 也可逆。</p></li><li><p>可逆矩阵满足消去律：</p><ul><li>若<span class="math inline">\(A\)</span>可逆，且<spanclass="math inline">\(BA=0\)</span>，则<spanclass="math inline">\(B=0\)</span>.</li></ul></li><li><p>设<span class="math inline">\(A,B,A-B\)</span>都是<spanclass="math inline">\(n\)</span>阶可逆矩阵,证明 <spanclass="math display">\[B^{-1}-A^{-1}=(B+B(A-B)^{-1}B)^{-1}.\]</span></p></li><li><p>设<span class="math inline">\(A\)</span>可逆，则有<spanclass="math inline">\(A^{-1}+(A^{-1})&#39;=(A^{-1})&#39;(A+A&#39;)A^{-1}\)</span>.</p></li></ol><h3 id="幂等矩阵">幂等矩阵</h3><ol type="1"><li>若幂等矩阵<span class="math inline">\(A\)</span>的满秩分解为<spanclass="math inline">\(A=ST\)</span>，则<spanclass="math inline">\(TS=I_r\)</span>，其中<spanclass="math inline">\(r\)</span>为幂等矩阵的秩、迹.</li></ol><h3 id="特征值与特征向量">特征值与特征向量</h3><ol type="1"><li><p><strong>（特征值降阶公式）设<spanclass="math inline">\(A\)</span>是<span class="math inline">\(m\timesn\)</span>矩阵，<span class="math inline">\(B\)</span>是<spanclass="math inline">\(n\times m\)</span>矩阵，且<spanclass="math inline">\(m\geqslant n\)</span>，则有</strong> <spanclass="math display">\[|\lambda I_m-AB|=\lambda^{m-n}|\lambda I_n-BA|.\]</span></p></li><li><p>若矩阵<span class="math inline">\(A\)</span>适合多项式<spanclass="math inline">\(f(x)\)</span>，则矩阵<spanclass="math inline">\(A\)</span>的特征值也适合多项式<spanclass="math inline">\(f(x)\)</span>.</p></li><li><p>若矩阵<span class="math inline">\(A\)</span>的全体特征值为<spanclass="math inline">\(\lambda_1,\lambda_2,\cdots,\lambda_n\)</span>，<spanclass="math inline">\(f(x)\)</span>为一多项式，则<spanclass="math inline">\(f(A)\)</span>的全体特征值为<spanclass="math inline">\(f(\lambda_1),f(\lambda_2),\cdots,f(\lambda_n)\)</span>.</p></li></ol><h3 id="正定矩阵">正定矩阵</h3><ol type="1"><li><p><strong>正定矩阵判定：</strong></p><ul><li><p>（对称初等变换）合同变换不改变正定性，与单位阵合同</p><blockquote><p><span class="math inline">\(A\)</span>正定，证明<spanclass="math inline">\(\begin{pmatrix}A &amp; -I_n\\-I_n &amp; A^{-1}\end{pmatrix}\)</span>半正定.</p></blockquote></li><li><p>利用特征值来判断，特征值全大于<spanclass="math inline">\(0\)</span>.</p><blockquote><p>若<span class="math inline">\(A\)</span>为可逆实矩阵，求<spanclass="math display">\[\begin{pmatrix}O &amp; A\\A&#39; &amp;O   \end{pmatrix}\]</span>的正负惯性指数。（也可以用上面的对称初等变换）</p></blockquote></li><li></li></ul></li><li><p><strong><spanclass="math inline">\(A\)</span>是可逆实对称阵，则<spanclass="math inline">\(A&#39;A\)</span>为正定矩阵.</strong>s</p></li></ol><h2 id="二次型">二次型</h2><ol type="1"><li><p>（正负惯性指数的降阶公式）设分块实对称矩阵<spanclass="math inline">\(M=\begin{pmatrix}A &amp; C\\ C&#39;&amp;B\end{pmatrix}\)</span>，其中<spanclass="math inline">\(A,B\)</span>可逆，则 <span class="math display">\[p(A)+p(B-C&#39;A^{-1}C)=p(B)+p(A-CB^{-1}C&#39;),\\q(A)+q(B-C&#39;A^{-1}C)=q(B)+q(A-CB^{-1}C&#39;).\]</span></p><ul><li><p>其中<span class="math inline">\(p(A),q(A)\)</span>分别表示<spanclass="math inline">\(A\)</span>的正负惯性指数.</p></li><li><p>求下列矩阵的正负惯性指数: <span class="math display">\[\begin{pmatrix}a_1^2 &amp; a_1a_2+1 &amp; \cdots &amp; a_1a_n+1\\a_2a_1+1 &amp; a_2^2 &amp; \cdots &amp; a_2a_n+1\\\vdots &amp; \vdots &amp; &amp; \vdots\\a_na_1+1 &amp; a_na_2+1 &amp; \cdots &amp; a_na_n+1\end{pmatrix}\]</span></p></li></ul></li></ol><h2 id="摄动法解题">摄动法解题</h2><p>注：习题摘自高等代数习题课（复旦大学谢启鸿）</p><ol type="1"><li><p>设<span class="math inline">\(A\)</span>是一个<spanclass="math inline">\(n\)</span>阶矩阵，求证：存在一个正数<spanclass="math inline">\(a\)</span>，使得对任意的<spanclass="math inline">\(0&lt;t&lt;a\)</span>，矩阵<spanclass="math inline">\(tI_n+A\)</span>都是非异阵.</p></li><li><p>设<span class="math inline">\(A,B\)</span>为<spanclass="math inline">\(n\)</span>阶矩阵，求证：<spanclass="math inline">\((AB)^*=B^*A^*\)</span>.</p></li><li><p>设<span class="math inline">\(A\)</span>是一个<spanclass="math inline">\(n\)</span>阶矩阵，求证：<spanclass="math inline">\(|A^*|=|A|^{n-1}\)</span>.</p></li><li><p>设<span class="math inline">\(A\)</span>是一个<spanclass="math inline">\(n(n&gt;2)\)</span>阶矩阵，求证：<spanclass="math inline">\((A^*)^*=|A|^{n-2}A\)</span>.</p></li><li><p>设<span class="math inline">\(A\)</span>是一个<spanclass="math inline">\(m\)</span>阶矩阵，<spanclass="math inline">\(B\)</span>为<spanclass="math inline">\(n\)</span>阶矩阵，求分块对角矩阵<spanclass="math inline">\(C\)</span>的伴随矩阵： <spanclass="math display">\[C=\begin{pmatrix}A &amp; O\\O &amp; B\end{pmatrix}\]</span></p></li><li><p>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>，<spanclass="math inline">\(C\)</span>，<spanclass="math inline">\(D\)</span>都是数域<spanclass="math inline">\(K\)</span>上的<spanclass="math inline">\(n\)</span>阶矩阵，且<spanclass="math inline">\(AC=CA\)</span>，则 <span class="math display">\[\begin{vmatrix}A &amp; B\\C &amp; D\end{vmatrix}=\begin{vmatrix}AD-CB\end{vmatrix}\]</span></p></li><li><p>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>都是数域<spanclass="math inline">\(K\)</span>上的<spanclass="math inline">\(n\)</span>阶矩阵，且<spanclass="math inline">\(AB=BA\)</span>，则 <span class="math display">\[\begin{vmatrix}A &amp; -B\\B &amp; A\end{vmatrix}=\begin{vmatrix}A^2+B^2\end{vmatrix}\]</span></p></li><li><p>上（下）三角阵的伴随仍然是上（下）三角阵，且主对角元是对应元素的伴随.</p></li><li><p>设<span class="math inline">\(A\)</span>，<spanclass="math inline">\(B\)</span>都是数域<spanclass="math inline">\(K\)</span>上的<spanclass="math inline">\(n\)</span>阶矩阵，且<spanclass="math inline">\(AB=BA\)</span>，则<spanclass="math inline">\(A^*B^*=B^*A^*\)</span>.</p></li><li><p>设<span class="math inline">\(|A|=|a_{ij}|\)</span>是一个<spanclass="math inline">\(n\)</span>阶行列式，<spanclass="math inline">\(A_{ij}\)</span>是它的第<spanclass="math inline">\((i,j)\)</span>元素的代数余子式，求证： <spanclass="math display">\[\begin{vmatrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} &amp; x_1 \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} &amp; x_2 \\\vdots &amp; \vdots &amp;        &amp; \vdots &amp; \vdots \\a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn} &amp; x_n \\y_1    &amp; y_2    &amp; \cdots &amp; y_n    &amp; 1\end{vmatrix}=|A|-\sum_{i=1}^{n}\sum_{j=1}^n A_{ij}x_iy_j.\]</span></p></li></ol><h2 id="求代数余子式之和">求代数余子式之和</h2><h3 id="求所有代数余子式">求所有代数余子式</h3><ol type="1"><li><p>设<span class="math inline">\(|A|=|a_{ij}|\)</span>是一个<spanclass="math inline">\(n\)</span>阶行列式，<spanclass="math inline">\(A_{ij}\)</span>是它的第<spanclass="math inline">\((i,j)\)</span>元素的代数余子式，则有 <spanclass="math display">\[\begin{vmatrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} &amp; 1 \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} &amp; 1 \\\vdots &amp; \vdots &amp;         &amp; \vdots &amp; \vdots \\a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn} &amp; 1 \\1    &amp; 1    &amp; \cdots &amp; 1    &amp; 0\end{vmatrix}=-\sum_{i=1}^{n}\sum_{j=1}^n A_{ij}x_iy_j.\]</span></p></li><li><p>利用下面结论（分别将<spanclass="math inline">\(x\)</span>取值为1）：</p><ul><li><p><span class="math display">\[\begin{vmatrix}a_{11}+x &amp; a_{12}+x &amp; \cdots &amp; a_{1n}+x \\a_{21}+x &amp; a_{22}+x &amp; \cdots &amp; a_{2n}+x \\\vdots &amp; \vdots &amp;       &amp; \vdots \\a_{n1}+x &amp; a_{n2}+x &amp; \cdots &amp; a_{nn}+x \\\end{vmatrix}=\begin{vmatrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\\vdots &amp; \vdots &amp;       &amp; \vdots \\a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn}\end{vmatrix}+x\sum_{i=1}^{n}\sum_{j=1}^n A_{ij}.\]</span></p></li><li><p><span class="math display">\[\begin{vmatrix}a_{11}-a_{12} &amp; a_{12}-a_{13} &amp; \cdots &amp; a_{1,n-1}-a_{1n}&amp; 1 \\a_{21}-a_{22} &amp; a_{22}-a_{23} &amp; \cdots &amp; a_{2,n-1}-a_{2n}&amp; 1 \\\vdots &amp; \vdots &amp;       &amp; \vdots &amp; \vdots \\a_{n1}-a_{n2} &amp; a_{n2}-a_{n3} &amp; \cdots &amp; a_{n,n-1}-a_{nn}&amp; 1\end{vmatrix}=\sum_{i=1}^{n}\sum_{j=1}^n A_{ij}x_iy_j.\]</span></p></li></ul></li></ol><h3 id="求某一行代数余子式之和">求某一行代数余子式之和</h3><ol type="1"><li><p>利用行列式按一行展开的性质：<spanclass="math inline">\(a_{i1}A_{i1}+a_{i2}A_{i2}+\cdots+a_{in}A_{in}=|A|\)</span>.</p><ul><li><p>计算<spanclass="math inline">\(A_{21}+A_{22}+A_{23}+A_{24}\)</span>，其中<spanclass="math inline">\(A_{ij}\)</span>是下面这个行列式<spanclass="math inline">\(a_{ij}\)</span>的代数余子式。 <spanclass="math display">\[D=\begin{vmatrix}2 &amp; -5 &amp; 3 &amp; 4 \\9 &amp; 8 &amp; 7 &amp; 6 \\1 &amp; 5 &amp; 7 &amp; 3 \\4 &amp; 7 &amp; 0 &amp; 3\end{vmatrix}\]</span></p></li><li><p>只需将<span class="math inline">\(D\)</span>的第二行元素换为<spanclass="math inline">\(1\)</span>，再计算行列式即可。</p></li></ul></li></ol><h2 id="用到的其他知识">用到的其他知识</h2><ol type="1"><li>设在区间<span class="math inline">\([a,b]\)</span>上给定<spanclass="math inline">\(n+1\)</span>个点 <span class="math display">\[a\leqslant x_0&lt;x_1&lt;\cdots&lt;x_n\leqslant b\]</span> 上的函数值<spanclass="math inline">\(y_i=f(x_i)(i=0,1,\cdots,n)\)</span>，则存在一个唯一的不超过<spanclass="math inline">\(n\)</span>次的多项式 <span class="math display">\[P(x)=a_0+a_1x+\cdots+a_nx^n\]</span> 使得 <span class="math display">\[P(x_i)=y_i,\quad i=0,1,\cdots,n.\]</span></li></ol><h2 id="一定要想到的点">一定要想到的点</h2><ol type="1"><li><span class="math inline">\(A\alpha=0\)</span>，一定要想到左乘<spanclass="math inline">\(\alpha&#39;\)</span>，或者<spanclass="math inline">\(\bar{\alpha&#39;}\)</span>.</li></ol>]]></content>
    
    
    <categories>
      
      <category>高等代数</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>重要数学公式、不等式、等式</title>
    <link href="/2021/08/17/%E9%87%8D%E8%A6%81%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E3%80%81%E4%B8%8D%E7%AD%89%E5%BC%8F%E3%80%81%E7%AD%89%E5%BC%8F/"/>
    <url>/2021/08/17/%E9%87%8D%E8%A6%81%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E3%80%81%E4%B8%8D%E7%AD%89%E5%BC%8F%E3%80%81%E7%AD%89%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="等式">等式</h2><ol type="1"><li><p>主要用于裂项求和： <span class="math display">\[\frac{1}{(k+1)(k+2)\cdots(k+m)}=\frac{1}{(k+1)\cdots(k+m-1)}-\frac{1}{(k+2)\cdots(k+m)}\]</span></p><p><span class="math display">\[\frac{a_n}{(1+a_1)(1+a_2)\cdots(1+a_n)}=\frac{1}{(1+a_1)(1+a_2)\cdots(1+a_{n-1})}-\frac{1}{(1+a_1)(1+a_2)\cdots(1+a_n)}\]</span></p></li><li><p>用于级数敛散性判断： <span class="math display">\[a^{\ln b}=e^{\ln b \ln a}=b^{\ln a}\]</span></p></li><li><p><span class="math inline">\(f(x)\in \C[a,b]\)</span>,<spanclass="math inline">\(f(x)\)</span>关于<spanclass="math inline">\(x=\frac{a+b}{2}\)</span>对称,则<spanclass="math inline">\(f(x)=f(a+b-x)\)</span></p><ul><li><spanclass="math inline">\(f(x)=f(\frac{a+b}{2}-(\frac{a+b}{2}-x))=f(\frac{a+b}{2}+(\frac{a+b}{2}-x))=f(a+b-x)\)</span>.</li></ul></li></ol><h2 id="不等式">不等式</h2><ol type="1"><li><p><strong>对数不等式（非常重要）</strong> <spanclass="math display">\[\frac{1}{1+n}\leqslant \text{ln}(1+\frac{1}{n}) \leqslant \frac{1}{n}\\\frac{x}{1+x}\leqslant \text{ln}(1+x) \leqslant x\qquad(x&gt;-1)\]</span></p><ul><li>证明<span class="math inline">\(\ln x\)</span>在<spanclass="math inline">\([1,+\infty]\)</span>上一致连续.</li></ul></li><li><p>当<span class="math inline">\(0\leqslant b\leqslanta\)</span>时有 <span class="math display">\[\sqrt{a}-\sqrt{b}\leqslant \sqrt{a-b}\]</span></p><ul><li>可用于证明函数<span class="math inline">\(\sqrt{x}\)</span>在<spanclass="math inline">\([0,+\infty]\)</span>上一致连续</li></ul></li><li><p>柯西不等式：</p><blockquote><p>设<span class="math inline">\(f(x)\)</span>与<spanclass="math inline">\(g(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上可积，则有 <spanclass="math display">\[\Bigl(\int_a^b f(x)g(x)\mathrm{d}x \Bigr)^2\leqslant\int_a^bf^2(x)\mathrm{d}x\cdot\int_a^bg^2(x)\mathrm{d}x\]</span></p></blockquote></li><li><p>用幂级数证之： <span class="math display">\[e^{t}+e^{-t}=2\sum_{n=0}^\infty \frac{t^{2n}}{(2n)!}\geqslant2+t^2\]</span></p></li></ol><h2 id="与三角函数相关">与三角函数相关</h2><ol type="1"><li><p>两个反正切相减：数项级数求和会用到 <span class="math display">\[\arctan x-\arctan y=\arctan\frac{x-y}{1+xy}\]</span></p></li><li><p>积分、级数中会用到： <span class="math display">\[\frac{\sin(n+\frac{1}{2})x}{2\sin\frac{x}{2}}=\frac{1}{2}+\sum_{k=1}^{n}\coskx\]</span></p><p><span class="math display">\[\frac{\cos\frac{x}{2}-\cos(n+\frac{1}{2})x}{2\sin\frac{x}{2}}=\sum_{k=1}^{n}\sinkx\]</span></p></li><li><p><span class="math display">\[\frac{\sin(2n+1)x}{\sin x}=1+2\sum_{k=1}^{n}\cos 2kx\\\sin(2n+1)x=\sin x+\sum_{k=1}^n2\sin x\cos2kx=\sinx+\sum_{k=1}^n\sin(2k+1)x-\sin(2k-1)x\]</span></p></li><li><p><span class="math display">\[\frac{\sin 2nx}{\sin x}=2\sum_{k=1}^n\cos(2n-1).\]</span></p></li><li><p>可以证明级数<span class="math inline">\(\sum\limits_{n=1}^{\infty}\arctan\frac{2x}{x^2+n^\alpha}\)</span>是否一致收敛：<span class="math display">\[\arctan \theta&gt; \frac{\theta}{2},\forall \theta \in(0,1)\]</span></p></li><li><p>余切与反正切的关系： <span class="math display">\[\cot (\arctan x)=\frac{1}{x}\]</span></p></li><li><p>正弦与反正切的关系： <span class="math display">\[\sin (\arctan z)=\frac{z}{\sqrt{z^2+1}}\]</span></p></li></ol><h2 id="积分">积分</h2><h3 id="变限积分">变限积分</h3><ol type="1"><li><p>涉及变限积分，若被积函数有参量，一定先换元.</p></li><li><p>涉及变限积分求极限，可考虑积分中值定理、洛必达法则，夹逼定理.</p></li><li><p>求极限： <span class="math display">\[\lim_{x\to0}\frac{\int_0^x[\int_0^{u^2}\arctan(1+t)\mathrm{d}t]\mathrm{d}u}{\sin x\int_0^1\tan(xt)^2\mathrm{d}t}\\\lim_{x\to +\infty}\frac{\int_0^x|\sin t|\mathrm{d}t}{x}\\\lim_{h\to0^+}\int_{-1}^1\frac{h}{h^2+x^2}f(x)\mathrm{d}x.\]</span></p></li><li><p>设<span class="math inline">\(f(x)\)</span>为正值连续函数, <spanclass="math display">\[g(x)=\begin{cases}\frac{\int_0^xtf(t)\mathrm{d}x}{\int_0^xf(t)\mathrm{d}x} &amp;x\not=0,\\0 &amp; x=0.\end{cases}\]</span> 问<spanclass="math inline">\(g&#39;(x)\)</span>连续性.</p></li></ol><h3 id="不定积分">不定积分</h3><ol type="1"><li>由隐函数确定的不定积分计算：引入参数<spanclass="math inline">\(t\)</span>,令<spanclass="math inline">\(y=tx\)</span>,先求关于<spanclass="math inline">\(t\)</span>的不定积分.<ul><li>设<span class="math inline">\(y=y(x)\)</span>是由方程<spanclass="math inline">\(y^2(x-y)=x^2\)</span>所确定的隐函数,求<spanclass="math inline">\(\int\frac{\mathrm{d}x}{y^2}\)</span>.</li><li>设<span class="math inline">\(y=y(x)\)</span>是由方程<spanclass="math inline">\((x^2+y^2)^2=2a^2(x^2-y^2)\)</span>所确定的隐函数,求<spanclass="math inline">\(\int\frac{\mathrm{d}x}{y(x^2+y^2+a^2)}\)</span>.</li></ul></li></ol><h3 id="常见变量替换">常见变量替换</h3><table><thead><tr class="header"><th style="text-align: center;">被积函数中含有的因式</th><th style="text-align: center;">变量替换形式</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><spanclass="math inline">\(\sqrt{a^2-x^2}\)</span></td><td style="text-align: center;"><span class="math inline">\(x=a\sint\)</span></td></tr><tr class="even"><td style="text-align: center;"><spanclass="math inline">\(\sqrt{a^2+x^2}\)</span></td><td style="text-align: center;"><span class="math inline">\(x=a\tant\)</span></td></tr><tr class="odd"><td style="text-align: center;"><spanclass="math inline">\(\sqrt{x^2-a^2}\)</span></td><td style="text-align: center;"><span class="math inline">\(x=a \sect\)</span></td></tr><tr class="even"><td style="text-align: center;"><span class="math inline">\(\sin x、\cosx\)</span></td><td style="text-align: center;"><span class="math inline">\(t=\tan\frac{x}{2}\)</span></td></tr><tr class="odd"><td style="text-align: center;"><span class="math inline">\(\sin^2x、\cos ^2x、\sin x\cos x\)</span></td><td style="text-align: center;"><span class="math inline">\(t=\tanx\)</span></td></tr><tr class="even"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><ol type="1"><li><p>含参量积分用到：</p><ul><li><p><span class="math display">\[\int \frac{dx}{1+a\cos x}=\begin{cases}\tan \frac{x}{2}+C &amp; a=1,\\-\cot\frac{x}{2}+C &amp; a=-1,\\\frac{2}{\sqrt{1-a^2}}\arctan(\sqrt{\frac{1-a}{1+a}}\tan\frac{x}{2})+C&amp; |a|&lt;1.\end{cases}\]</span></p></li><li><p><span class="math display">\[\int_0^{\frac{\pi}{2}} \ln(\sin x)dx=\int_0^{\frac{\pi}{2}} \ln(\cosx)dx=-\frac{\pi}{2}\ln 2.\]</span></p></li></ul></li><li><p>函数项级数：</p><ul><li><p><span class="math display">\[\int_0^1 x^{-x}dx=\sum_{n=1}^{\infty}n^{-n}\]</span></p></li><li><p><span class="math display">\[\int_0^1 x^m(\ln x)^ndx =(-1)^n\frac{n!}{(m+1)^{n+1}}\]</span></p></li></ul></li><li><p>Wallis公式： <span class="math display">\[\int_0^\frac{\pi}{2}\sin^n x dx =\int_0^\frac{\pi}{2}\cos^n x dx=\begin{cases}\frac{(n-1)!!}{n!!}\frac{\pi}{2} &amp;  n为偶数\\\frac{(n-1)!!}{n!!} &amp;  n为奇数\end{cases}\]</span></p></li></ol><h3 id="二重积分">二重积分</h3><ol type="1"><li><p>轮换对称性：</p><blockquote>设平面区域<span class="math inline">\(D\)</span>关于直线<spanclass="math inline">\(y=x\)</span>对称，<spanclass="math inline">\(D_1\)</span>是<spanclass="math inline">\(D\)</span>位于<spanclass="math inline">\(y=x\)</span>一侧的部分，则有 $$ _D f(x,y)=<span class="math display">\[\begin{cases}0, &amp; 若f(x,y)=-f(x,y)\\2\iint\limits_{D_1} f(x,y)\mathrm{d}\sigma, &amp;若f(x,y)=f(x,y)\end{cases}\]</span><p>$$</p></blockquote></li><li></li></ol><h2 id="taylor公式">Taylor公式</h2><ol type="1"><li><span class="math inline">\((1+x)^{\alpha}=1+\alphax+\frac{\alpha(\alpha-1)}{2!}x^2+\cdots+\frac{\alpha(\alpha-1)\cdots(\alpha-n+1)}{n!}x^n+o(x^n).\)</span></li><li><span class="math inline">\(\arctanx=x-\frac{1}{3}x^3+\frac{1}{5}x^5+o(x^5)\)</span>.</li><li><span class="math inline">\(\tanx=x+\frac{1}{3}x^3+\frac{2}{15}x^5+o(x^5)\)</span>.</li><li><spanclass="math inline">\((1+x)^{\frac{1}{x}}=e(1-\frac{1}{2}x+\frac{11}{24}x^2-\frac{7}{16}x^3)+o(x^3)\)</span>.</li><li><span class="math inline">\(a^x-1\sim x\ln a\)</span>.</li></ol><h2 id="重要极限">重要极限</h2><ol type="1"><li><p>欧拉常数<span class="math inline">\(C\)</span> <spanclass="math display">\[\lim_{n\to \infty}1+\frac{1}{2}+\cdots+\frac{1}{n}-\ln n=C\]</span></p></li><li><p>关于<span class="math inline">\(\ln n!\)</span>的： <spanclass="math display">\[\lim_{n \to \infty}\frac{\ln n!}{n^\alpha}=\begin{cases}\infty &amp; \alpha \leqslant1,\\0 &amp; \alpha &gt;1.\end{cases}\]</span></p><ul><li>可用于判段下面这个级数的敛散性： <span class="math display">\[\sum_{n=1}^\infty \frac{\ln n!}{n^\alpha}\]</span></li></ul></li><li><p>斯特林(Stirling)公式： <span class="math display">\[n! \sim \sqrt{2\pi}n^{n+\frac{1}{2}}e^{-n}\quad(n\to \infty)\]</span></p><ul><li>判断级数<span class="math inline">\(\sum\limits_{n=1}^{\infty}n!(\frac{a}{n})^n (a&gt;0)\)</span>的敛散性.</li><li>求幂级数<spanclass="math inline">\(\sum\limits_{n=0}^{\infty}\frac{n^n}{n!}x^n\)</span>的收敛域.</li><li></li></ul></li></ol><h2 id="其他公式">其他公式</h2><ol type="1"><li><p>海伦公式：已知三角形三边求面积。 <span class="math display">\[S=\sqrt{p(p-a)(p-b)(p-c)}\]</span> 其中<spanclass="math inline">\(a,b,c\)</span>为三角形的三条边，<spanclass="math inline">\(p=\frac{a+b+c}{2}\)</span>.</p></li><li></li></ol><h2 id="连续一致连续">连续、一致连续</h2><ol type="1"><li><p><strong>无限区间</strong>上一致连续不一定有界：</p><blockquote><p>函数<span class="math inline">\(\sqrt{x}\)</span>，<spanclass="math inline">\(x\)</span>在<spanclass="math inline">\([0,+\infty]\)</span>上一致连续，但是函数<spanclass="math inline">\(\sqrt{x}\)</span>，<spanclass="math inline">\(x\)</span>在<spanclass="math inline">\([0,+\infty]\)</span>上无界</p></blockquote></li><li><p>有界不一定一致连续：</p><blockquote><p>函数<spanclass="math inline">\(y=\sin{x^2}\)</span>有界，但不一致连续，其函数图像如下：</p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210829183809011.png" /></p></blockquote></li></ol><h2 id="函数项级数">函数项级数</h2><ol type="1"><li><p>设<span class="math inline">\(\{f_n(x)\}\)</span>是定义在<spanclass="math inline">\([a,b]\)</span>上的无穷次可微的函数序列且逐点收敛，并在<spanclass="math inline">\([a,b]\)</span>上满足 <spanclass="math inline">\(f_n(x)\leqslant M\)</span> .</p><ul><li><p>证明<span class="math inline">\(\{f_n(x)\}\)</span>在<spanclass="math inline">\([a,b]\)</span>上一致收敛；</p></li><li><p>设<span class="math inline">\(f(x)=\lim\limits_{n\to\infty}f_n(x)\)</span>，<spanclass="math inline">\(f(x)\)</span>是否一定在<spanclass="math inline">\([a,b]\)</span>上处处可导。</p><blockquote><p>不一定处处可导，<spanclass="math inline">\(f_n(x=\sqrt{x^2+\frac{1}{n}})\)</span>.</p></blockquote></li></ul></li></ol><h2 id="幂级数">幂级数</h2><ol type="1"><li><p>缺项幂级数的收敛半径，一般直接利用根式或比式判别法</p><ul><li><p><span class="math display">\[\sum_{n=0}^{\infty}\frac{x^{2n+1}}{(2n+1)!}.\]</span></p></li><li><p><span class="math display">\[\sum_{n=0}^{\infty}2^nx^{2n}\]</span></p></li></ul></li><li><p>幂级数展开方法：</p><ul><li><p>待定系数法：</p><blockquote><p>设函数<spanclass="math inline">\(f(x)=\frac{1}{1-2x-x^2}\)</span>,证明级数<spanclass="math inline">\(\sum\limits_{n=0}^{\infty}\frac{n!}{f^{(n)}(0)}\)</span>收敛.</p><p>设函数<spanclass="math inline">\(f(x)=\frac{1}{(2+x)(\frac{1}{2}-x)}\)</span>,证明级数<spanclass="math inline">\(\sum\limits_{n=0}^{\infty}\frac{n!}{f^{(n)}(0)}\)</span>收敛.</p><p>可以用两种方法求出<spanclass="math inline">\(f(x)=\sum\limits_{n=0}^{\infty}[\frac{4}{5}\cdot2^n+(-1)^n\frac{1}{5\cdot2^n}]x^n\)</span>,再用比值判别法证明收敛（正项级数）.</p></blockquote></li></ul></li></ol><h2 id="类题一">类题一</h2><ol type="1"><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([0,2]\)</span>上有连续导数，证明<spanclass="math inline">\(\int_0^1x^nf(x)\mathrm{d}x=\frac{f(1)}{n}+o(\frac{1}{n})\)</span>.</li><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([0,1]\)</span>上黎曼可积，在<spanclass="math inline">\(x=1\)</span>可导，<spanclass="math inline">\(f(1)=0,f&#39;(1)=a\)</span>，证明：<spanclass="math inline">\(\lim\limits_{n\to\infty}n^2\int_0^1x^nf(x)\mathrm{d}x=-a\)</span>.</li></ol>]]></content>
    
    
    <categories>
      
      <category>数学分析</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微分中值问题</title>
    <link href="/2021/08/11/%E5%BE%AE%E5%88%86%E4%B8%AD%E5%80%BC%E9%97%AE%E9%A2%98/"/>
    <url>/2021/08/11/%E5%BE%AE%E5%88%86%E4%B8%AD%E5%80%BC%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="类型一">类型一：</h2><p>题目中有这样的条件：若函数<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上连续，在<spanclass="math inline">\((a,b)\)</span>上可导，且<spanclass="math inline">\(f(a)=0\)</span>或<spanclass="math inline">\(f(b)=0\)</span>或<spanclass="math inline">\(f(a)=f(b)=0\)</span>，那么就先考虑用拉格朗日中值定理。</p><ul><li>设函数<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上有连续的导数，且<spanclass="math inline">\(f(a)=f(b)=0\)</span>，<spanclass="math inline">\(M=\max_{x\in[a,b]}\left|f&#39;(x)\right|\)</span>，求证：<spanclass="math inline">\(\frac{4}{(b-a)^2}\int_a^bf(x)dx\leqslantM\)</span>.</li><li><span class="math inline">\(f (x)\)</span>在<spanclass="math inline">\([ a,b ]\)</span>上连续在<spanclass="math inline">\(( a,b )\)</span>内可导且$ f (a) =f (b) = 0<spanclass="math inline">\(，求证：存在\)</span>(a,b)<spanclass="math inline">\(使得\)</span>f()+f '() =0<spanclass="math inline">\(. * 考虑函数\)</span>F(x)=e^{}f(x)$，罗尔定理</li></ul><h2 id="类型二">类型二：</h2><p>欲证结论：至少存在一点<spanclass="math inline">\(\eta,\xi\in[a,b]\)</span>且<spanclass="math inline">\(\eta\ne\xi\)</span>满足某种关系式的命题。思路：使用两次拉格朗日中值定理或者柯西中值定理，或者一次拉格朗日中值定理、一次柯西中值定理，然后再将它们做某种运算。</p><ul><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上连续，在<spanclass="math inline">\((a,b)\)</span>内可导，<spanclass="math inline">\(f(a)=f(b)=1\)</span>，试证存在<spanclass="math inline">\(\xi,\eta\in(0,1)\)</span>，使得<spanclass="math inline">\(e^{\eta-\xi}[f(\eta)+f&#39;(\eta)]=1\)</span>.<ul><li>把<spanclass="math inline">\(\xi\)</span>移到等号右边​，两次拉格朗日中值定理</li></ul></li><li>设<span class="math inline">\(f(x)\in\C[a,b]\cap\text{D}(a,b)\)</span>，且<spanclass="math inline">\(f&#39;(x)\ne0\)</span>，证明：<spanclass="math inline">\(\exist\xi,\eta\in(a,b)\)</span>使得<spanclass="math inline">\(\frac{f&#39;(\xi)}{f&#39;(\eta)}=\frac{e^b-e^a}{b-a}e^{-\eta}\)</span>.</li></ul><h2 id="类型三">类型三</h2><p>对于函数具有二阶或二阶以上连续导数，且最高阶导数的大小或上下界已知的命题可以考虑用泰勒公式</p><ul><li>如果<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上有二阶导数，<spanclass="math inline">\(f&#39;(a)=f&#39;(b)=0\)</span>，证明：<spanclass="math inline">\(\exist\xi\in(a,b)\)</span>使得<spanclass="math inline">\(\left|f&#39;&#39;(\xi) \right|\geqslant\frac{4}{(b-a)^2}\left| f(b)-f(a)\right|\)</span>.<ul><li>将<span class="math inline">\(f(\frac{a+b}{2})\)</span>分别在<spanclass="math inline">\(a,b\)</span>处展开</li></ul></li><li>设<span class="math inline">\(f(x)\)</span>二次可微，<spanclass="math inline">\(f(0)=f(1)=0\)</span>，<spanclass="math inline">\(\max_{0\leqslantx\leqslant1}f(x)=2\)</span>，证明：<spanclass="math inline">\(\min_{0\leqslantx\leqslant1}f&#39;&#39;(x)\leqslant-16\)</span>.<ul><li>有最大值必有极值点，极值点导数为0</li></ul></li><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([0,1]\)</span>上二次可微，<spanclass="math inline">\(f(0)=f(1)=0\)</span>，且当<spanclass="math inline">\(x\in(0,1)\)</span>时，<spanclass="math inline">\(\left|f&#39;&#39;(x)\right |\leqslantM\)</span>证明：<span class="math inline">\(\left|f&#39;(x)\right|\leqslant \frac{M}{2}\)</span>.<ul><li>有最大值必有极值点，极值点导数为0</li></ul></li><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上有二阶导数，<spanclass="math inline">\(f(a)=f(b)=0\)</span>，<spanclass="math inline">\(\left|f&#39;&#39;(x)\right|\leqslant8\)</span>，证明：<spanclass="math inline">\(\left|f(\frac{a+b}{2}\right|\leqslant(b-a)^2\)</span>.</li><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上有二阶导数，<spanclass="math inline">\(f(\frac{a+b}{2})=0\)</span>，<spanclass="math inline">\(\left| f&#39;&#39;(x)\right|\leqslantM\)</span>，<spanclass="math inline">\(b-a\leqslant1\)</span>证明：<spanclass="math inline">\(\left| f(a)+f(b)\right|\leqslant\frac{M}{4}\)</span>.</li></ul><h2 id="类型四">类型四</h2><p>先用积分中值定理</p><ul><li>设<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\([0,1]\)</span>上是非负单调递减得连续函数，且<spanclass="math inline">\(0&lt;a&lt;b&lt;1\)</span>，证明：<spanclass="math inline">\(\int_0^af(x)dx\geqslant\frac{a}{b-a}\int_a^bf(x)dx\)</span>.<ul><li>两个积分各用一次积分中值定理，然后利用单调性</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>数学分析</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一类可由chebyshev不等式解决的积分不等式</title>
    <link href="/2021/07/31/%E4%B8%80%E7%B1%BB%E5%8F%AF%E7%94%B1chebyshev%E4%B8%8D%E7%AD%89%E5%BC%8F%E8%A7%A3%E5%86%B3%E7%9A%84%E7%A7%AF%E5%88%86%E4%B8%8D%E7%AD%89%E5%BC%8F/"/>
    <url>/2021/07/31/%E4%B8%80%E7%B1%BB%E5%8F%AF%E7%94%B1chebyshev%E4%B8%8D%E7%AD%89%E5%BC%8F%E8%A7%A3%E5%86%B3%E7%9A%84%E7%A7%AF%E5%88%86%E4%B8%8D%E7%AD%89%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="定理">定理</h1><h2 id="一般形式">一般形式</h2><ul><li><p>若<spanclass="math inline">\(f(x),g(x),h(x)\in[a,b]\)</span>，且<spanclass="math inline">\(f(x),g(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上单调性一致，h(x)<spanclass="math inline">\(\geqslant0\)</span>，则有 <spanclass="math display">\[\int_{a}^{b}h(x)f(x)dx\int_{a}^{b}h(x)g(x)dx\leqslant \int_{a}^{b}h(x)dx\int_{a}^{b}h(x)f(x)g(x)dx.\]</span></p><ul><li><p>若单调性不一致，不等号变号。</p></li><li><p>证明：</p><blockquote><p>由已知可得，<span class="math inline">\(\forallx,y\in[a,b]\)</span>,有不等式 <span class="math display">\[h(x)h(y)[f(x)-f(y)][g(x)-g(y)]\geqslant0\]</span> 成立，展开即： <span class="math display">\[h(x)h(y)f(x)g(x)+h(x)h(y)f(y)g(y)\geqslanth(x)h(y)f(x)g(y)+h(x)h(y)f(y)g(x)\]</span> 对上式先对<span class="math inline">\(x\)</span>于<spanclass="math inline">\([a,b]\)</span>上取积分得， <spanclass="math display">\[h(y)\int_{a}^{b}h(x)f(x)g(x)dx+h(y)f(y)g(y)\int_{a}^{b}h(x)dx\geqslanth(y)g(y)\int_{a}^{b}f(x)h(x)dx+h(y)f(y)\int_{a}^{b}h(x)g(x)dx\]</span> 对上式再对<span class="math inline">\(y\)</span>于<spanclass="math inline">\([a,b]\)</span>上取积分得， <spanclass="math display">\[\int_{a}^{b}h(y)dy\int_{a}^{b}h(x)f(x)g(x)dx+\int_{a}^{b}h(y)f(y)g(y)dy\int_{a}^{b}h(x)dx\geqslant\int_{a}^{b}h(y)g(y)dy\int_{a}^{b}f(x)h(x)dx+\int_{a}^{b}h(y)f(y)dy\int_{a}^{b}h(x)g(x)dx\]</span> 将上式的<span class="math inline">\(y\)</span>改为<spanclass="math inline">\(x\)</span>，整理得， <span class="math display">\[\int_{a}^{b}h(x)f(x)dx\int_{a}^{b}h(x)g(x)dx\leqslant \int_{a}^{b}h(x)dx\int_{a}^{b}h(x)f(x)g(x)dx.\]</span></p></blockquote></li></ul></li></ul><h2 id="特殊形式">特殊形式</h2><ul><li>取<span class="math inline">\(p(x)=1\)</span>，若<spanclass="math inline">\(f(x),g(x)\in[a,b]\)</span>,且<spanclass="math inline">\(f(x),g(x)\)</span>在<spanclass="math inline">\([a,b]\)</span>上单调性一致，则有 <spanclass="math display">\[\int_{a}^{b}f(x)dx\int_{a}^{b}g(x)dx\leqslant(b-a)\int_{a}^{b}f(x)g(x)dx\]</span></li></ul><h2 id="求和形式">求和形式</h2><ul><li><p>若<span class="math inline">\(\forall i,j\)</span>有<spanclass="math inline">\((a_i-a_j)(b_i-b_j)\geqslant0\)</span>,则<spanclass="math inline">\(a_i,b_i\)</span>称为是似序的。若恒有相反的不等式，则称之为反序的。若<spanclass="math inline">\(a_i,b_i\)</span>似序，则有不等式 <spanclass="math display">\[(\sum_{i=1}^{n}a_i)(\sum_{i=1}^{n}b_i)\leqslant n\sum_{i=1}^{n}a_ib_i,\]</span> 成立，<spanclass="math inline">\(a_i,b_i\)</span>反序时此不等式反向。等号当且仅当<spanclass="math inline">\(a_1=a_2=\cdots=a_n\)</span>或<spanclass="math inline">\(b_1=b_2=\cdots=b_n\)</span>时成立。</p><ul><li><p>证明与上面类似，先关于一个下标<spanclass="math inline">\(i\)</span>求和，再关于<spanclass="math inline">\(j\)</span>求和，最后将<spanclass="math inline">\(j\)</span>改为<spanclass="math inline">\(i\)</span>。</p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210731114327820.png" /></p></li></ul></li></ul><h1 id="练习">练习</h1><ul><li><p>证明不等式： <span class="math display">\[\int_0^{\frac{\pi}{2}}\frac{\sin{x}}{1+x^2}dx\leqslant\int_0^{\frac{\pi}{2}}\frac{\cos{x}}{1+x^2}dx.\]</span></p><ul><li><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210731113753114.png" /></li></ul></li><li><p>设f(x)在<spanclass="math inline">\([a,b]\)</span>上连续且单调递增，试证： <spanclass="math display">\[\int_a^bxf(x)dx\geqslant\frac{a+b}{2}\int_a^bf(x)dx.\]</span></p><ul><li><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210731113458738.png" /></li></ul></li><li><p>设f(x)在区间<spanclass="math inline">\([0,1]\)</span>上连续且单调递增，试证： <spanclass="math display">\[\frac{\int_0^1xf^2(x)dx}{\int_0^1xf(x)dx}\geqslant\frac{\int_0^1f^2(x)dx}{\int_0^1f(x)dx}.\]</span></p><ul><li><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210731113705637.png" /></li></ul></li><li><p>证明不等式： <span class="math display">\[\int_0^1\frac{\sin{x}}{\sqrt{1-x^2}}dx&lt;\int_0^1\frac{\cos{x}}{\sqrt{1-x^2}}dx.\]</span></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>数学分析</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>秩（不）等式</title>
    <link href="/2021/07/31/%E7%A7%A9%EF%BC%88%E4%B8%8D%EF%BC%89%E7%AD%89%E5%BC%8F/"/>
    <url>/2021/07/31/%E7%A7%A9%EF%BC%88%E4%B8%8D%EF%BC%89%E7%AD%89%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="秩不等式">秩（不）等式</h1><h2 id="不等式">不等式</h2><ol type="1"><li><p>如果向量组<spanclass="math inline">\(\alpha_{1},\cdots,\alpha_{s}\)</span>可以由向量组<spanclass="math inline">\(\beta_{1},\cdots,\beta_{t}\)</span>，那么 <spanclass="math display">\[\mathrm{rank}\{\alpha_{1},\cdots,\alpha_{s}\}\leqslant \mathrm{rank}\{\beta_{1},\cdots,\beta_{t} \}.\]</span></p></li><li><p><spanclass="math inline">\(\mathrm{rank}\{\alpha_{1},\cdots,\alpha_{s},\beta_{1},\cdots,\beta_{t}\}\leqslant\mathrm{rank}\{\alpha_{1},\cdots,\alpha_{s}\}+\mathrm{rank}\{\beta_{1},\cdots,\beta_{t}\}\)</span></p><blockquote><p>矩阵表示形式，证明可以取两个向量组的极大无关组。 <spanclass="math display">\[\mathrm{rank}((A,B))\leqslant\mathrm{rank}(A)+\mathrm{rank}(B).\]</span></p><p><span class="math display">\[\mathrm{rank}\begin{pmatrix}B \\C \\\end{pmatrix}\leqslant\mathrm{rank}(B)+\mathrm{rank}(C).\]</span></p></blockquote></li><li><p><span class="math display">\[\mathrm{rank}\begin{pmatrix}A &amp; C \\0 &amp; B \\\end{pmatrix}\geqslant\mathrm{rank}(A)+\mathrm{rank}(B).\]</span></p><blockquote><p>可用子式不等于0证明</p></blockquote></li><li><p><span class="math inline">\(\mathrm{rank}((A,B))\geqslant\mathrm{max}\{\mathrm{rank}(A),\mathrm{rank}(B)\}\)</span>.</p><blockquote><p>证明左边同时大于右边括号内的两个即可，取极大无关组。</p></blockquote></li><li><p><span class="math inline">\(\mathrm{rank}(AB)\leqslant\mathrm{min}\{\mathrm{rank}(A),\mathrm{rank}(B)\}\)</span>.</p><blockquote><p>证明左边小于右边括号内的两个即可，将<spanclass="math inline">\(A\)</span>或<spanclass="math inline">\(B\)</span>写成列向量的形式。</p></blockquote></li><li><p><span class="math inline">\(\mathrm{rank}(A+B)\leqslant\mathrm{rank}(A)+\mathrm{rank}(B)\)</span>.</p><blockquote><p>将矩阵写成列向量的形式，取极大无关组。</p></blockquote></li><li><p>设<span class="math inline">\(A\)</span>、<spanclass="math inline">\(B\)</span>分别是<spanclass="math inline">\(s\times n\)</span>、<spanclass="math inline">\(n\times m\)</span>矩阵，若<spanclass="math inline">\(AB=0\)</span>，则 <span class="math display">\[\mathrm{rank}(A)+\mathrm{rank}(B)\leqslant n.\]</span></p><blockquote><p>利用线性方程组的知识可证。</p></blockquote></li><li><p>设<span class="math inline">\(A\)</span>、<spanclass="math inline">\(B\)</span>分别是<spanclass="math inline">\(s\times n\)</span>、<spanclass="math inline">\(n\times m\)</span>矩阵，则 <spanclass="math display">\[\mathrm{rank}(AB)\geqslant\mathrm{rank}(A)+\mathrm{rank}(B)-n.\]</span></p><blockquote><p>Sylvester秩不等式，利用分块矩阵的初等行（列）变换。</p></blockquote></li><li><p>设<span class="math inline">\(A\)</span>、<spanclass="math inline">\(B\)</span>分别是<spanclass="math inline">\(s\times n\)</span>、<spanclass="math inline">\(n\times m\)</span>、<spanclass="math inline">\(m\times t\)</span>矩阵，则 <spanclass="math display">\[\mathrm{rank}(ABC)\geqslant\mathrm{rank}(AB)+\mathrm{rank}(BC)-\mathrm{rank}(B).\]</span></p><blockquote><p>Frobenius秩不等式。利用分块矩阵的初等行（列）变换： <spanclass="math display">\[\begin{pmatrix}B &amp; 0\\0 &amp; ABC\\\end{pmatrix}\to\begin{pmatrix}BC &amp; B\\0 &amp; AB\\\end{pmatrix}\]</span></p></blockquote></li></ol><h2 id="等式">等式</h2><ol type="1"><li><p><span class="math display">\[\mathrm{rank}\begin{pmatrix}A &amp; 0 \\0 &amp; B \\\end{pmatrix}=\mathrm{rank}(A)+\mathrm{rank}(B).\]</span></p><blockquote><p>利用初等行（列）变换化为单位矩阵。</p></blockquote></li><li><p>设<span class="math inline">\(A\)</span>为<spanclass="math inline">\(n\times m\)</span>矩阵，若<spanclass="math inline">\(k\ne0\)</span>，则<spanclass="math inline">\(\mathrm{rank}(kA)=\mathrm{rank}(A)\)</span>.</p><blockquote><p>证一：利用不等式5。 证：<spanclass="math inline">\(\mathrm{rank}(kA)=\mathrm{rank}((kI)A)\leqslant\mathrm{rank}(A)\)</span>.由于<spanclass="math inline">\(k\ne0\)</span>，因此<spanclass="math inline">\(\mathrm{rank}(A)=\mathrm{rank}((k^{-1}I)(kA))\leqslant\mathrm{rank}(kA)\)</span>。从而<spanclass="math inline">\(\mathrm{rank}(kA)=\mathrm{rank}(A)\)</span>.</p><p>证二：利用初等变换不改变矩阵的秩</p><p><span class="math inline">\(kA=P_1(k)P_2(k)\cdotsP_n(k)A\)</span>.</p></blockquote></li><li><p><spanclass="math inline">\(\mathrm{rank}(A^{&#39;}A)=\mathrm{rank}(AA^{&#39;})=\mathrm{rank}(A)=\mathrm{rank}(AA^{&#39;}A)\)</span>.</p><blockquote><p><spanclass="math inline">\(A\)</span>为实数域上的矩阵。证明利用线性方程组同解。</p></blockquote></li><li><p><spanclass="math inline">\(\mathrm{rank}(\bar{A}^{&#39;}A)=\mathrm{rank}(A\bar{A}^{&#39;})=\mathrm{rank}(A)\)</span>.</p><blockquote><p><span class="math inline">\(A\)</span>为复数域上的矩阵,同时<spanclass="math inline">\(\mathrm{rank}(A^{&#39;}A)\ne\mathrm{rank}(A)\)</span>.证明利用线性方程组（复数域）同解。</p></blockquote></li><li><p>数域<span class="math inline">\(K\)</span>上<spanclass="math inline">\(n\)</span>级矩阵<spanclass="math inline">\(A\)</span>是幂等矩阵当且仅当 <spanclass="math display">\[\mathrm{rank}(A)+\mathrm{rank}(I-A)=n.      \]</span></p><blockquote><p>如果数域<span class="math inline">\(K\)</span>上<spanclass="math inline">\(n\)</span>级矩阵<spanclass="math inline">\(A\)</span>满足<spanclass="math inline">\(A^{2}=A\)</span>，那么称<spanclass="math inline">\(A\)</span>是幂等矩阵。证明可以利用不等式6、7或者分块矩阵的初等行（列变换）</p></blockquote></li><li><p>数域<span class="math inline">\(K\)</span>上<spanclass="math inline">\(n\)</span>级矩阵<spanclass="math inline">\(A\)</span>是对合矩阵当且仅当 <spanclass="math display">\[\mathrm{rank}(I+A)+\mathrm{rank}(I-A)=n.\]</span></p><blockquote><p>如果数域<span class="math inline">\(K\)</span>上<spanclass="math inline">\(n\)</span>级矩阵<spanclass="math inline">\(A\)</span>满足<spanclass="math inline">\(A^{2}=I\)</span>，那么称<spanclass="math inline">\(A\)</span>是对合矩阵。证明可以利用不等式6、7或者分块矩阵的初等行（列变换）。</p></blockquote></li></ol>]]></content>
    
    
    <categories>
      
      <category>高等代数</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>常用标签</title>
    <link href="/2021/07/04/%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/"/>
    <url>/2021/07/04/%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="常用网站">常用网站</h1><h2 id="电影电视">电影电视</h2><table><colgroup><col style="width: 50%" /><col style="width: 50%" /></colgroup><thead><tr class="header"><th style="text-align: center;"><ahref="https://www.1905.com/vod/">1905电影网</a></th><th style="text-align: center;"><ahref="https://www.imdb.com/">IMDb</a></th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong><ahref="http://www.qiduit.com/">80s电影网</a></strong></td><td style="text-align: center;"><strong><ahref="https://www.xltt.tv/">迅雷天堂</a></strong></td></tr><tr class="even"><td style="text-align: center;"><strong><ahref="http://www.cechi5.com/">策弛影院</a></strong></td><td style="text-align: center;"><strong><ahref="https://www.meijutt.tv/">美剧天堂</a></strong></td></tr><tr class="odd"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="编程">编程</h2><table><colgroup><col style="width: 50%" /><col style="width: 50%" /></colgroup><thead><tr class="header"><th style="text-align: center;"><strong><ahref="https://leetcode.com/problemset/all">leetcode</a></strong></th><th style="text-align: center;"><strong><ahref="https://www.luogu.com.cn/">洛谷</a></strong></th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong><ahref="https://www.lfd.uci.edu/~gohlke/pythonlibs/">Python第三方库</a></strong></td><td style="text-align: center;"><strong><ahref="https://pypi.org/">PyPI</a></strong></td></tr><tr class="even"><td style="text-align: center;"><strong><ahref="https://tool.oschina.net/hexconvert">进制转换</a></strong></td><td style="text-align: center;"><strong><ahref="https://tool.oschina.net/hexconvert">OsChina在线工具</a></strong></td></tr><tr class="odd"><td style="text-align: center;"><strong><ahref="https://www.runoob.com/">菜鸟教程</a></strong></td><td style="text-align: center;"><strong><ahref="https://algorithm-essentials.soulmachine.me/">算法珠玑</a></strong></td></tr><tr class="even"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="数学">数学</h2><table><colgroup><col style="width: 53%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;"><strong><ahref="https://zhuanlan.zhihu.com/p/56982388">latex安装</a></strong></th><th style="text-align: center;"><strong><ahref="https://www.wolframalpha.com/">mathematic</a></strong></th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong><ahref="https://www.geogebra.org/">GeoGebra</a></strong></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="电脑相关">电脑相关</h2><table><colgroup><col style="width: 59%" /><col style="width: 40%" /></colgroup><thead><tr class="header"><th style="text-align: center;"><ahref="http://www.win4000.com/">桌面壁纸</a></th><th style="text-align: center;"><ahref="http://www.win4000.com/">鼠标指针</a></th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong><ahref="https://d.serctl.com/?dl_start">GitHub快速下载</a></strong></td><td style="text-align: center;"><strong><ahref="https://zc17.xyz/">科学上网1</a></strong></td></tr><tr class="even"><td style="text-align: center;"><strong><ahref="https://ikuuu.co/auth/login">科学上网2</a></strong></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="数据分析与可视化">数据分析与可视化</h2><table><colgroup><col style="width: 50%" /><col style="width: 50%" /></colgroup><thead><tr class="header"><th style="text-align: center;"><ahref="https://echarts.apache.org/zh/index.html">可视化</a></th><th style="text-align: center;"><ahref="https://www.datavrap.com/html/1/">数据可视化仓库</a></th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong><ahref="https://flourish.studio/">Flourish</a></strong></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="高清美图">高清美图</h2><table><colgroup><col style="width: 46%" /><col style="width: 53%" /></colgroup><thead><tr class="header"><th style="text-align: center;"><ahref="https://unsplash.com/">Unsplash</a></th><th style="text-align: center;"><ahref="https://pixabay.com/">Pixabay</a></th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><strong><ahref="https://freephotos.cc/zh">免费库存图片</a></strong></td><td style="text-align: center;"><strong><ahref="https://www.hippopx.com/zh">Hippopx</a></strong></td></tr><tr class="even"><td style="text-align: center;"><strong><ahref="https://www.pexels.com/zh-cn/">Pexels</a></strong></td><td style="text-align: center;"><strong><ahref="https://www.iconfont.cn/">阿里巴巴矢量图标库</a></strong></td></tr><tr class="odd"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="电子书">电子书</h2><table><thead><tr class="header"><th style="text-align: center;"><ahref="https://1lib.domains/">Electronic library</a></th><th></th></tr></thead><tbody></tbody></table><h2 id="工具">工具</h2><table><thead><tr class="header"><th><a href="https://pdf.io/">PDF在线转换工具</a></th><th></th></tr></thead><tbody></tbody></table>]]></content>
    
    
    <categories>
      
      <category>电脑相关</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>R语言基础知识总结</title>
    <link href="/2021/06/20/R%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <url>/2021/06/20/R%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="r语言之数据挖掘">R语言之数据挖掘</h1><h2 id="一基本数据结构">一、基本数据结构</h2><h3 id="向量">向量</h3><ul><li><p>建立：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">a &lt;- <span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)    <span class="hljs-comment"># c:collection</span><br>a = <span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br><span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>) -&gt; a<br>assign(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>))<br>seq(<span class="hljs-number">1</span>,<span class="hljs-number">20</span>,<span class="hljs-built_in">length</span> = <span class="hljs-number">5</span>)<span class="hljs-comment"># 输出5个数成等差数列，与matlab的linspace相似</span><br>seq(<span class="hljs-number">1</span>,<span class="hljs-number">20</span>,by = <span class="hljs-number">8</span>) <span class="hljs-comment"># 步长为8,by=可省略</span><br><span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<span class="hljs-comment"># 1,2,3  这个序列重复三次，结果：1 2 3 1 2 3 1 2 3</span><br><span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,<span class="hljs-built_in">rep</span>(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>))<span class="hljs-comment"># rep(3,3)的结果为3，3，3结果：1 1 1 2 2 2 3 3 3，注：1：3的长度要与最后一个3对应</span><br><span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,each = <span class="hljs-number">3</span>)    <span class="hljs-comment"># 结果等于上一个</span><br>sequence(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<span class="hljs-comment"># 1：3 = 1，2，3第二个1是指从1开始，最后一个1是指步长，有多少个数是看第一个参数的，结果 1 1 2 1 2 3</span><br>   <span class="hljs-comment"># 1      上面这个1说明只有一个数</span><br>   <span class="hljs-comment"># 1 2   上面这个2说明有两个数</span><br>   <span class="hljs-comment"># 1 2 3        上面这个3说明有三个数</span><br>sequence(<span class="hljs-built_in">c</span>(<span class="hljs-number">9</span>,<span class="hljs-number">3</span>),from = <span class="hljs-built_in">c</span>(<span class="hljs-number">5</span>,<span class="hljs-number">2</span>),by = <span class="hljs-built_in">c</span>(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<span class="hljs-comment"># 首先开头的序列有9个数，起点为5，步长为3，第二个序列起点为2，步长为1</span><br><span class="hljs-comment"># 结果：5  8 11 14 17 20 23 26 29  2  3  4</span><br><span class="hljs-comment"># 第一个序列：5  8 11 14 17 20 23 26 29</span><br><span class="hljs-comment"># 第二个序列：2  3  4</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>运算：</p><blockquote><p>索引用 [ ]，用法跟matlab与python类似，可以在中括号内输入一个数组，取出多个值</p><p>加减运算</p><p>内积运算 %*%（矩阵乘法也用这个）</p><p>mean，sum，sqrt 等函数都支持向量</p></blockquote></li></ul><h3 id="矩阵">矩阵</h3><ul><li><p>建立</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">m = matrix(<span class="hljs-number">1</span>:<span class="hljs-number">9</span>,nrow = <span class="hljs-number">3</span>,ncol = <span class="hljs-number">3</span>,byrow = <span class="hljs-literal">TRUE</span>,<span class="hljs-built_in">dimnames</span> = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;r1&#x27;</span>,<span class="hljs-string">&#x27;r2&#x27;</span>,<span class="hljs-string">&#x27;r3&#x27;</span>),<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;c1&#x27;</span>,<span class="hljs-string">&#x27;c2&#x27;</span>,<span class="hljs-string">&#x27;c3&#x27;</span>)))<br><span class="hljs-comment"># R语言当中矩阵输入默认是按列的，可通过byrow参数修改，dimnames定义列名，行名，必须是一个列表类型</span><br></code></pre></div></td></tr></table></figure></li><li><p>运算</p><blockquote><p>索引与其他语言类似，如果定义了列（行）名，也可以通过列（行）名来索引</p><p>solver命令可以用来求逆矩阵</p><p>特征值和特征向量</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">eigen(m)<span class="hljs-comment"># 默认会同时输出特征值和特征向量</span><br>eigen(m)$values<span class="hljs-comment"># 加上$values只输出特征值，$:这个是别的编程语言没有接触过的</span><br></code></pre></div></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">t(m)<span class="hljs-comment"># 转置</span><br></code></pre></div></td></tr></table></figure><p>加减乘除都是对应元素位置相运算</p><p>合并和拼接操作：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">cbind(a,b)<span class="hljs-comment"># 列合并</span><br>rbind(a,b)<span class="hljs-comment"># 行合并</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="数组">数组</h3><ul><li><p>数组建立（三维）：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">array(<span class="hljs-number">1</span>:<span class="hljs-number">24</span>,<span class="hljs-built_in">c</span>(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<span class="hljs-comment"># 1:24为数据，2 为行数，3 为列数，4 为层数</span><br><span class="hljs-comment"># , , 1</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]    1    3    5</span><br><span class="hljs-comment"># [2,]    2    4    6</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># , , 2</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]    7    9   11</span><br><span class="hljs-comment"># [2,]    8   10   12</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># , , 3</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]   13   15   17</span><br><span class="hljs-comment"># [2,]   14   16   18</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># , , 4</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [,1] [,2] [,3]</span><br><span class="hljs-comment"># [1,]   19   21   23</span><br><span class="hljs-comment"># [2,]   20   22   24</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="数据框">数据框</h3><ul><li><p>通过转换列表的形式建立数据框</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">list_1&lt;-<span class="hljs-built_in">list</span>(name = <span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;y1&#x27;</span>,<span class="hljs-string">&#x27;y2&#x27;</span>,<span class="hljs-string">&#x27;y3&#x27;</span>),age = <span class="hljs-built_in">c</span>(<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>))<span class="hljs-comment"># name、age 即为列名，</span><br>data.frame(list_1)<br><span class="hljs-comment">#           name age</span><br><span class="hljs-comment">#        1   y1  11</span><br><span class="hljs-comment">#        2   y2  22</span><br><span class="hljs-comment">#        3   y3  33</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>数据框的建立</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">no&lt;-<span class="hljs-number">1</span>:<span class="hljs-number">3</span><br>name&lt;-<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;n1&#x27;</span>,<span class="hljs-string">&#x27;n2&#x27;</span>,<span class="hljs-string">&#x27;n3&#x27;</span>)<br>score&lt;-<span class="hljs-number">77</span>:<span class="hljs-number">79</span><br>df = data.frame(no,name,score,row.names = <span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>))<span class="hljs-comment"># 可以通过row.names设置行名</span><br><span class="hljs-comment">#      no name score</span><br><span class="hljs-comment">#    a  1   n1    77</span><br><span class="hljs-comment">#    b  2   n2    78</span><br><span class="hljs-comment">#    c  3   n3    79</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>索引</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-comment"># 选取行</span><br>df[<span class="hljs-string">&#x27;a&#x27;</span>,]<span class="hljs-comment"># 设置了行名，可以直接通过行名进行选取(列选取同理)，等价于df[1,]</span><br>df[<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>),<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;no&#x27;</span>,<span class="hljs-string">&#x27;score&#x27;</span>)]<br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="时间和日期">时间和日期</h3><ul><li><p>日期对象</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">now = as.Date(<span class="hljs-string">&quot;2021-03-19&quot;</span>)<span class="hljs-comment"># as.Date() 将其他对象转换为日期对象</span><br><span class="hljs-comment"># &gt; now</span><br><span class="hljs-comment"># [1] &quot;2021-03-19&quot;</span><br><span class="hljs-built_in">unclass</span>(now)<br><span class="hljs-comment"># [1] 18705# 计算now距离1970-01-01多少天</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>时间对象</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">now = Sys.time()<span class="hljs-comment"># 获取当前系统时间</span><br>t = as.POSIXlt(now)<span class="hljs-comment"># 将其转化为R中的时间格式</span><br><span class="hljs-comment">#    &gt; t</span><br><span class="hljs-comment">#    [1] &quot;2021-03-19 14:59:19 CST&quot;</span><br><span class="hljs-built_in">names</span>(<span class="hljs-built_in">unclass</span>(t))<span class="hljs-comment"># 输出R中的时间包含了哪些值，unclass(t) 输出的是什么呢？？？</span><br><span class="hljs-comment">#    [1] &quot;sec&quot;    &quot;min&quot;    &quot;hour&quot;   &quot;mday&quot;   &quot;mon&quot;    &quot;year&quot;   &quot;wday&quot;   &quot;yday&quot;  </span><br><span class="hljs-comment">#    [9] &quot;isdst&quot;  &quot;zone&quot;   &quot;gmtoff&quot;</span><br>t$<span class="hljs-string">&#x27;min&#x27;</span><span class="hljs-comment"># 取分钟的值</span><br><span class="hljs-comment"># [1] 59</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>日期转时间</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">date = as.Date(<span class="hljs-string">&#x27;2021-01-01&#x27;</span>)<span class="hljs-comment"># 创建一个日期</span><br>t = as.POSIXlt(date)<br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>时间格式化</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">y &lt;-strptime(<span class="hljs-string">&quot;2006-01-08 10:07:52&quot;</span>, <span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)<br><span class="hljs-comment">#    &gt; y</span><br><span class="hljs-comment">#    [1] &quot;2006-01-08 10:07:52 CST&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>时间计算</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">x = as.Date(<span class="hljs-string">&quot;2021-02-01&quot;</span>)<br>y = as.Date(<span class="hljs-string">&quot;2021-03-19&quot;</span>)<br>y-x<br><span class="hljs-comment"># Time difference of 46 days</span><br>y+<span class="hljs-number">1</span><br><span class="hljs-comment"># [1] &quot;2021-03-20&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h2 id="二数据输入输出">二、数据输入输出</h2><h3 id="读取数据">读取数据</h3><ul><li><p>读取excel数据</p><ul><li>可以使用 openxlsx包中的read.xlsx函数</li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">library(openxlsx)<span class="hljs-comment">#</span><br>read.xlsx(<span class="hljs-string">&quot;E:\\study\\office\\excel提高\\二级.xlsx&quot;</span>)<br><span class="hljs-comment"># \u65e5\u671f \u7535\u8111 \u624b\u673a      U\u76d8 \u76f8\u673a</span><br><span class="hljs-comment"># 1         43728         4500         1000           23          643</span><br><span class="hljs-comment"># 2         43729         4601         3000           45          242</span><br><span class="hljs-comment"># 3         43730         4702         2500           65          556</span><br><span class="hljs-comment"># 4         43731         5803         2200           42         1412</span><br><span class="hljs-comment"># 5         43732         4904         1200           77          225</span><br><span class="hljs-comment"># 6         43733         5505         1415           66          789</span><br><span class="hljs-comment"># 7  \u76f8\u673a         &lt;NA&gt;         &lt;NA&gt;         &lt;NA&gt;           NA</span><br><span class="hljs-comment"># 8  \u516c\u53f8 \u672c\u6708 \u4e0a\u6708 \u5347\u964d           NA</span><br><span class="hljs-comment"># 9             A          100           90           10           NA</span><br><span class="hljs-comment"># 10            B          150          180          -30           NA</span><br><span class="hljs-comment"># 11            C          250          200           50           NA</span><br><span class="hljs-comment"># 12            D          280          360          -80           NA</span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li>读取之后出现编码问题，如何解决？解决方法：设置Excel的编码格式（在另存为-&gt;工具），在函数中传入encoding=‘utf-8’。ps：文件路径不能有中文！！</li></ul></li><li><p>读取csv数据</p></li><li><p>与读取excel类似。</p></li></ul><h3 id="导出数据">导出数据</h3><ul><li><p>可以使用write.csv()函数，如我们要将R软件中的iris数据集保存到本地，可使用如下程序</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">write.csv(iris,<span class="hljs-string">&#x27;iris.csv&#x27;</span>) <span class="hljs-comment"># iris.csv 为文件名</span><br></code></pre></div></td></tr></table></figure></li></ul><h2 id="三程序控制">三、程序控制</h2><h3 id="选择结构">选择结构</h3><ul><li><p>与其他编程语言没有差别</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">x = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span>(x&gt;<span class="hljs-number">0</span>)&#123;<span class="hljs-comment"># 最好加上花括号，否则会出现：错误: 意外的&#x27;else&#x27; in &quot;else&quot;</span><br> print(<span class="hljs-string">&#x27;x&gt;0&#x27;</span>)<br>&#125;<span class="hljs-keyword">else</span> &#123;<br> print(<span class="hljs-string">&#x27;x&lt;0&#x27;</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="循环结构">循环结构</h3><ul><li><p>for：类似于java里面的增强for循环</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">set = <span class="hljs-number">1</span>:<span class="hljs-number">10</span><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> set) &#123;<br> print(i)<br>&#125;<br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>while：循环与其他的无差别</p></li></ul><h3 id="apply-函数族">apply 函数族</h3><ul><li><p>一些用于循环的函数，比普通的循环效率高</p></li><li><p>1、对列表的循环：lapply(列表名，函数名)，或者sapply</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">list_2 = <span class="hljs-built_in">list</span>(<span class="hljs-number">1</span>:<span class="hljs-number">10</span>)<br>lapply(list_2,<span class="hljs-built_in">sum</span>)<span class="hljs-comment"># sum为循环的函数，可以自定义</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>2、对数据框、矩阵、数组等的循环：apply(矩阵或数组或数据框，margin，函数名)。margin为一个数字，当对象是矩阵时，1表示行，2表示列，也可以时列名</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">m = matrix(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,nrow = <span class="hljs-number">4</span>)<br><span class="hljs-comment">#         [,1] [,2] [,3] [,4] [,5]</span><br><span class="hljs-comment">#    [1,]    1    5    9   13   17</span><br><span class="hljs-comment">#    [2,]    2    6   10   14   18</span><br><span class="hljs-comment">#    [3,]    3    7   11   15   19</span><br><span class="hljs-comment">#    [4,]    4    8   12   16   20</span><br>apply(m,<span class="hljs-number">2</span>,mean)<span class="hljs-comment"># 对矩阵 m 每列求均值</span><br><span class="hljs-comment">#   2.5  6.5 10.5 14.5 18.5</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>3、对向量的子集进行循环控制：tapply(x，index，fun)</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">data&lt;-data.frame(x=<span class="hljs-built_in">c</span>(-<span class="hljs-number">0.6234743</span>,-<span class="hljs-number">0.4719858</span>,-<span class="hljs-number">1.871619</span>,<span class="hljs-number">0.545811</span>,<span class="hljs-number">0.4839098</span>,<br>                  <span class="hljs-number">0.7882512</span>,<span class="hljs-number">0.4481959</span>,<span class="hljs-number">0.8458964</span>,<span class="hljs-number">0.8737372</span>,<span class="hljs-number">0.05652524</span>,<br>                  -<span class="hljs-number">0.3543139</span>,<span class="hljs-number">1.641247</span>,<span class="hljs-number">0.3337766</span>,<span class="hljs-number">1.425203</span>,<span class="hljs-number">0.1899111</span>),<br>              group=<span class="hljs-built_in">rep</span>(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,each=<span class="hljs-number">5</span>))<br><span class="hljs-comment">#            x        group</span><br><span class="hljs-comment">#    1  -0.62347430     1</span><br><span class="hljs-comment">#    2  -0.47198580     1</span><br><span class="hljs-comment">#    3  -1.87161900     1</span><br><span class="hljs-comment">#    4   0.54581100     1</span><br><span class="hljs-comment">#    5   0.48390980     1</span><br><span class="hljs-comment">#    6   0.78825120     2</span><br><span class="hljs-comment">#    7   0.44819590     2</span><br><span class="hljs-comment">#    8   0.84589640     2</span><br><span class="hljs-comment">#    9   0.87373720     2</span><br><span class="hljs-comment">#    10  0.05652524     2</span><br><span class="hljs-comment">#    11 -0.35431390     3</span><br><span class="hljs-comment">#    12  1.64124700     3</span><br><span class="hljs-comment">#    13  0.33377660     3</span><br><span class="hljs-comment">#    14  1.42520300     3</span><br><span class="hljs-comment">#    15  0.18991110     3</span><br></code></pre></div></td></tr></table></figure><ul><li><p>对每组求均值</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">tapply(data$x,data$group,mean)<span class="hljs-comment"># $ 符号用于取值</span><br><span class="hljs-comment">#         1          2          3 </span><br><span class="hljs-comment">#    -0.3874717  0.6025212  0.6471648 </span><br></code></pre></div></td></tr></table></figure></li><li><p>对每组求范围</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">tapply(data$x,data$group,<span class="hljs-built_in">range</span>)<br><span class="hljs-comment"># $`1`</span><br><span class="hljs-comment"># [1] -1.871619  0.545811</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`2`</span><br><span class="hljs-comment"># [1] 0.05652524 0.87373720</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`3`</span><br><span class="hljs-comment"># [1] -0.3543139  1.6412470</span><br></code></pre></div></td></tr></table></figure></li></ul></blockquote></li><li><p>4、split函数：分割集合</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">split(data$x,data$group)<br><span class="hljs-comment"># $`1`</span><br><span class="hljs-comment"># [1] -0.6234743 -0.4719858 -1.8716190  0.5458110  0.4839098</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`2`</span><br><span class="hljs-comment"># [1] 0.78825120 0.44819590 0.84589640 0.87373720 0.05652524</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $`3`</span><br><span class="hljs-comment"># [1] -0.3543139  1.6412470  0.3337766  1.4252030  0.1899111</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h2 id="三描述统计">三、描述统计</h2><h3 id="变量类型属性列表">变量类型、属性列表</h3><ul><li>str函数：查看数据内部结构</li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">str(accepts)<span class="hljs-comment"># 数据集来自accepts</span><br><span class="hljs-comment"># &#x27;data.frame&#x27;:5845 obs. of  24 variables:</span><br><span class="hljs-comment">#   $ application_id: int  2314049 63539 7328510 8725187 4275127 8712513 2063896 598458 1526052 8073975 ...</span><br><span class="hljs-comment"># $ account_number: int  11613 13449 14323 15359 15812 16979 17842 19715 23924 24866 ...</span><br><span class="hljs-comment"># $ bad_ind       : int  1 0 1 1 0 0 0 0 1 0 ...</span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li><p>attributes()函数：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">attributes</span>(Insurance)<br><span class="hljs-comment"># $names列名</span><br><span class="hljs-comment"># [1] &quot;District&quot; &quot;Group&quot;    &quot;Age&quot;      &quot;Holders&quot; </span><br><span class="hljs-comment"># [5] &quot;Claims&quot;  </span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $class 数据类型</span><br><span class="hljs-comment"># [1] &quot;data.frame&quot;</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># $row.names行名</span><br><span class="hljs-comment"># [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17</span><br><span class="hljs-comment"># [18] 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34</span><br><span class="hljs-comment"># [35] 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51</span><br><span class="hljs-comment"># [52] 52 53 54 55 56 57 58 59 60 61 62 63 64</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>summary()函数：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">summary(Insurance)<br><span class="hljs-comment"># District    Group       Age        Holders       </span><br><span class="hljs-comment"># 1:16     &lt;1l   :16   &lt;25  :16   Min.   :   3.00  </span><br><span class="hljs-comment"># 2:16     1-1.5l:16   25-29:16   1st Qu.:  46.75  </span><br><span class="hljs-comment"># 3:16     1.5-2l:16   30-35:16   Median : 136.00  </span><br><span class="hljs-comment"># 4:16     &gt;2l   :16   &gt;35  :16   Mean   : 364.98  </span><br><span class="hljs-comment"># 3rd Qu.: 327.50  </span><br><span class="hljs-comment"># Max.   :3582.00  </span><br><span class="hljs-comment"># Claims      </span><br><span class="hljs-comment"># Min.   :  0.00  </span><br><span class="hljs-comment"># 1st Qu.:  9.50  </span><br><span class="hljs-comment"># Median : 22.00  </span><br><span class="hljs-comment"># Mean   : 49.23  </span><br><span class="hljs-comment"># 3rd Qu.: 55.50  </span><br><span class="hljs-comment"># Max.   :400.00 </span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>其他</p><ul><li>获取更加详细的信息：Hmisc软件包中的describe()函数来获取</li><li>fBasics软件包中的basicStats()</li></ul></li></ul><h3 id="各种统计量">各种统计量</h3><ul><li><p>频数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">pinshu = table(accepts$vehicle_year)<br><span class="hljs-comment"># 0 1977 1982 1985 1986 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 9999 </span><br><span class="hljs-comment"># 298    1    1    1    2    1    3   12   19   32   79  170  272  454  713  653 1045 2083    1    4 </span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li><p>将上面的结果画成条形图</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">barplot(pinshu)<br></code></pre></div></td></tr></table></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620200135827.png"alt="image-20210620200135827" /><figcaption aria-hidden="true">image-20210620200135827</figcaption></figure></blockquote></li></ul></li><li><p>均值</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">mean(accepts$age_oldest_tr,na.rm = <span class="hljs-built_in">T</span>)<span class="hljs-comment"># na.rm = T 意思是去掉NA值</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>中位数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">median(accepts$purch_price,na.rm = <span class="hljs-built_in">T</span>)<br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>分位数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">quantile(accepts$purch_price,probs = <span class="hljs-built_in">c</span>(<span class="hljs-number">0.25</span>,<span class="hljs-number">0.5</span>,<span class="hljs-number">0.75</span>,<span class="hljs-number">0.9</span>),na.rm = <span class="hljs-built_in">T</span>)<span class="hljs-comment"># probs设置分位数</span><br><span class="hljs-comment">#     25%      50%      75%      90% </span><br><span class="hljs-comment">#  12684.00 18017.75 24500.00 30813.45 </span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>相关系数</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">cor(Insurance$Holders,Insurance$Claims)<br><span class="hljs-comment"># [1] 0.9857701</span><br></code></pre></div></td></tr></table></figure><p>可以通过Ellipse软件包中的plotcorr()函数来绘制相关系数图</p></blockquote></li><li><p>其他</p><blockquote><p>方差：var</p><p>标准差：sd</p><p>峰度系数：skewness（timeDate包中）</p><p>偏度系数：kurtosis（timeDate包中）</p></blockquote></li></ul><h3 id="画各种统计图">画各种统计图</h3><ul><li><p>直方图</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">hist(accepts$age_oldest_tr,nclass = <span class="hljs-number">5</span>)<span class="hljs-comment"># nclass = 5 说明只有5个区间，即5个条状</span><br></code></pre></div></td></tr></table></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620200159425.png"alt="image-20210620200159425" /><figcaption aria-hidden="true">image-20210620200159425</figcaption></figure></blockquote></li></ul><h2 id="四数据处理">四、数据处理</h2><h3 id="数据基本信息">数据基本信息</h3><ul><li><p>维度</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">dim</span>(Insurance)<span class="hljs-comment"># Insurance为MASS包中的数据，需要导入MASS包,下面的数据都是基于Insurance操作的结果</span><br><span class="hljs-comment"># [1] 64  5# 64行5列</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>标题</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">names</span>(Insurance)<span class="hljs-comment"># 获取表头</span><br><span class="hljs-comment"># [1] &quot;District&quot; &quot;Group&quot;    &quot;Age&quot;      &quot;Holders&quot;  &quot;Claims&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>变量类型</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">class</span>(Insurance)<br><span class="hljs-comment"># [1] &quot;data.frame&quot;</span><br><span class="hljs-built_in">class</span>(Insurance$Age)<br><span class="hljs-comment"># [1] &quot;ordered&quot; &quot;factor&quot; </span><br><span class="hljs-built_in">class</span>(Insurance$Group)<br><span class="hljs-comment"># [1] &quot;ordered&quot; &quot;factor&quot; </span><br><span class="hljs-built_in">class</span>(Insurance$Claims)<br><span class="hljs-comment"># [1] &quot;integer&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>查看因子类型的水平（即值域）</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">levels(Insurance$Group)<span class="hljs-comment"># 输入的参数必须为 &quot;factor&quot; 类型</span><br><span class="hljs-comment"># [1] &quot;&lt;1l&quot;    &quot;1-1.5l&quot; &quot;1.5-2l&quot; &quot;&gt;2l&quot; </span><br>levels(Insurance$Age)<br><span class="hljs-comment"># [1] &quot;&lt;25&quot;   &quot;25-29&quot; &quot;30-35&quot; &quot;&gt;35&quot;</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h3 id="数据预处理">数据预处理</h3><ul><li>数据类型的判断和转换</li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">a = <span class="hljs-number">2.0</span><br><span class="hljs-built_in">is.integer</span>(a)<span class="hljs-comment"># 数据类型判断</span><br><span class="hljs-comment"># [1] FALSE</span><br>a = <span class="hljs-built_in">as.integer</span>(a)<span class="hljs-comment"># 数据转换</span><br><span class="hljs-built_in">is.integer</span>(a)<br><span class="hljs-comment"># [1] TRUE</span><br></code></pre></div></td></tr></table></figure></blockquote><ul><li><p>缺失值查看</p><ol type="1"><li>缺失值可以用mice软件包中的md.pattern()函数来获取其中的缺失值分布状态</li></ol><p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">md.pattern(iris)<br> /\     /\<br>&#123;  `---&#x27;  &#125;<br>&#123;  O   O  &#125;<br>==&gt;  V &lt;==  No need for mice. This data set is completely observed.<br> \  \|/  /<br>  `-----<span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Sepal.Length Sepal.Width Petal.Length Petal.Width Species  </span><br><span class="hljs-string">150            1           1            1           1       1 0</span><br><span class="hljs-string">               0           0            0           0       0 0</span><br></code></pre></div></td></tr></table></figure></p><blockquote><p>最下面一行0可以看出iris数据集没有缺失值</p></blockquote><ol start="2" type="1"><li><p>再对mice包中的nhanes2数据集进行查看，有缺失值</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">md.pattern(nhanes2)<br>   age hyp bmi chl   <br><span class="hljs-number">13</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>  <span class="hljs-number">0</span><br><span class="hljs-number">3</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span>  <span class="hljs-number">1</span><br><span class="hljs-number">1</span>    <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span>  <span class="hljs-number">1</span><br><span class="hljs-number">1</span>    <span class="hljs-number">1</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">1</span>  <span class="hljs-number">2</span><br><span class="hljs-number">7</span>    <span class="hljs-number">1</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>  <span class="hljs-number">3</span><br>     <span class="hljs-number">0</span>   <span class="hljs-number">8</span>   <span class="hljs-number">9</span>  <span class="hljs-number">10</span> <span class="hljs-number">27</span><span class="hljs-comment"># 27为缺失值总数</span><br></code></pre></div></td></tr></table></figure><ul><li>用summary函数得到相同的结果</li></ul><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">summary(nhanes2)<br>    age          bmi          hyp          chl       <br> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>:<span class="hljs-number">12</span>   Min.   :<span class="hljs-number">20.40</span>   no  :<span class="hljs-number">13</span>   Min.   :<span class="hljs-number">113.0</span>  <br> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>: <span class="hljs-number">7</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">22.65</span>   yes : <span class="hljs-number">4</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">185.0</span>  <br> <span class="hljs-number">60</span>-<span class="hljs-number">99</span>: <span class="hljs-number">6</span>   Median :<span class="hljs-number">26.75</span>   <span class="hljs-literal">NA</span><span class="hljs-string">&#x27;s: 8   Median :187.0  </span><br><span class="hljs-string">            Mean   :26.56             Mean   :191.4  </span><br><span class="hljs-string">            3rd Qu.:28.93             3rd Qu.:212.0  </span><br><span class="hljs-string">            Max.   :35.30             Max.   :284.0  </span><br><span class="hljs-string">            NA&#x27;</span>s   :<span class="hljs-number">9</span>                 <span class="hljs-literal">NA</span><span class="hljs-string">&#x27;s   :10     </span><br></code></pre></div></td></tr></table></figure></li><li><p>其他查看是否有缺失值的方法：</p><ol type="1"><li>sum(is.na(nhanes2))</li><li>sum(complete.cases(nhanes2)) 计算完整样本的数量</li></ol></li></ol></li><li><p>缺失值处理</p><ol type="1"><li><p>当缺失数据的比例较少，可以直接删除相对应的行数据</p></li><li><p>插补法：均值插补、抽样填补、回归插补、二阶插补、热平台、冷平台</p><ol type="1"><li><p>抽样插补：对nhanes2数据集的第二列的缺失值采用抽样插补：</p><ul><li><p>插补前的前几行数据：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">head(nhanes2)<br>    age  bmi  hyp chl<br><span class="hljs-number">1</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">2</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span> <span class="hljs-number">22.7</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">3</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">4</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">5</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">20.4</span>   no <span class="hljs-number">113</span><br><span class="hljs-number">6</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">184</span><br></code></pre></div></td></tr></table></figure></li><li><p>插补程序</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub = which(<span class="hljs-built_in">is.na</span>(nhanes2[,<span class="hljs-number">2</span>])==<span class="hljs-literal">TRUE</span>)<span class="hljs-comment"># 得到那些行的第二列是缺失的</span><br>[<span class="hljs-number">1</span>]  <span class="hljs-number">1</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">6</span> <span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">16</span> <span class="hljs-number">21</span><br>data1 = nhanes2[-sub,]  <span class="hljs-comment"># 不存在缺失值的</span><br>data2 = nhanes2[sub,]  <span class="hljs-comment"># 存在缺失值的</span><br>data2<br>     age bmi  hyp chl<br><span class="hljs-number">1</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">3</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">4</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">6</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">184</span><br><span class="hljs-number">10</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">11</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">12</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">16</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">21</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>  <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br>data2[,<span class="hljs-number">2</span>] = sample(data1[,<span class="hljs-number">2</span>],<span class="hljs-built_in">length</span>(data2[,<span class="hljs-number">2</span>]),replace = <span class="hljs-literal">TRUE</span>)   <span class="hljs-comment"># 从不存在缺失值的data1的第二列简单抽样，抽取的样本数为length(data2[,2]),replace = TRUE设置为放回抽样</span><br>data2<br>     age  bmi  hyp chl<br><span class="hljs-number">1</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">24.9</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">3</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">21.7</span>   no <span class="hljs-number">187</span><br><span class="hljs-number">4</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">24.9</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">6</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">29.6</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">184</span><br><span class="hljs-number">10</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span> <span class="hljs-number">27.4</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">11</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">35.3</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">12</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span> <span class="hljs-number">28.7</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">16</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">27.5</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br><span class="hljs-number">21</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">25.5</span> &lt;<span class="hljs-literal">NA</span>&gt;  <span class="hljs-literal">NA</span><br></code></pre></div></td></tr></table></figure></li></ul></li><li><p>均值插补：对nhanes2数据集的第四列的缺失值采用抽样插补：</p><ul><li><p>找到第四列存在缺失值的行标</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub = which(<span class="hljs-built_in">is.na</span>(nhanes2[,<span class="hljs-number">4</span>])==<span class="hljs-literal">TRUE</span>)<br>&gt; sub<br> [<span class="hljs-number">1</span>]  <span class="hljs-number">1</span>  <span class="hljs-number">4</span> <span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">15</span> <span class="hljs-number">16</span> <span class="hljs-number">20</span> <span class="hljs-number">21</span> <span class="hljs-number">24</span><br></code></pre></div></td></tr></table></figure></li><li><p>进行插补</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub = which(<span class="hljs-built_in">is.na</span>(nhanes2[,<span class="hljs-number">4</span>])==<span class="hljs-literal">TRUE</span>)<br>&gt; data1 = nhanes2[-sub,]  <span class="hljs-comment"># 不存在缺失值的</span><br>&gt; data2 = nhanes2[sub,]  <span class="hljs-comment"># 存在缺失值的</span><br>&gt; data2[,<span class="hljs-number">4</span>] = sample(data1[,<span class="hljs-number">4</span>],<span class="hljs-built_in">length</span>(data2[,<span class="hljs-number">4</span>]),replace = <span class="hljs-literal">TRUE</span>)<br>&gt; data2<br>     age  bmi  hyp chl<br><span class="hljs-number">1</span>  <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">284</span><br><span class="hljs-number">4</span>  <span class="hljs-number">60</span>-<span class="hljs-number">99</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">187</span><br><span class="hljs-number">10</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">238</span><br><span class="hljs-number">11</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">229</span><br><span class="hljs-number">12</span> <span class="hljs-number">40</span>-<span class="hljs-number">59</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">229</span><br><span class="hljs-number">15</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span> <span class="hljs-number">29.6</span>   no <span class="hljs-number">284</span><br><span class="hljs-number">16</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">284</span><br><span class="hljs-number">20</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">25.5</span>  yes <span class="hljs-number">218</span><br><span class="hljs-number">21</span> <span class="hljs-number">20</span>-<span class="hljs-number">39</span>   <span class="hljs-literal">NA</span> &lt;<span class="hljs-literal">NA</span>&gt; <span class="hljs-number">206</span><br><span class="hljs-number">24</span> <span class="hljs-number">60</span>-<span class="hljs-number">99</span> <span class="hljs-number">24.9</span>   no <span class="hljs-number">131</span><br></code></pre></div></td></tr></table></figure></li></ul></li></ol><ul><li><p>噪声数据处理（异常值处理）</p><blockquote><p>测量过程中的随机错误或偏差，包括错误值或偏离期望的孤立点值</p></blockquote><ul><li>利用outliers软件包的outlier函数可寻找噪声数据</li></ul></li><li><p>数据不一致处理：如日期的表示不一致</p></li></ul></li></ol></li></ul><h3 id="数据抽样">数据抽样</h3><ul><li><p>随机抽样</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">50</span>,replace = <span class="hljs-literal">TRUE</span>)<span class="hljs-comment"># replace = TRUE 表示放回抽样，在1:20这20个数据中可放回抽样50个数据</span><br> <span class="hljs-comment">#  当replace = FALSE(默认) ，抽样个数不能多于样本个数</span><br><span class="hljs-comment"># [1] 10  4 19 20 10 12 10 10  9  9 11 18 20 16 13  5 11 18 18</span><br><span class="hljs-comment"># [20]  4 19 17 15 11  9  6 12  3 15  3 17 15  1  4  8 17  2 18</span><br><span class="hljs-comment"># [39] 15  9  6 10 10 10  1  8  4  7 20  6</span><br><br><span class="hljs-comment"># 设置样本抽到的概率值</span><br>sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">50</span>,replace = <span class="hljs-literal">TRUE</span>,prob = <span class="hljs-built_in">rep</span>(seq(<span class="hljs-number">0</span>,<span class="hljs-number">0.9</span>,<span class="hljs-number">0.1</span>),each = <span class="hljs-number">2</span>)) <span class="hljs-comment"># 样本所能被抽到的概率值如下</span><br><span class="hljs-comment"># 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20</span><br><span class="hljs-comment"># 0.0 0.0 0.1 0.1 0.2 0.2 0.3 0.3 0.4 0.4 0.5 0.5 0.6 0.6 0.7 0.7 0.8 0.8 0.9 0.9</span><br><span class="hljs-comment"># [1] 14 11 16 17 17 16 13 20 13 17 18 16 20 14  8 20 10 20 20</span><br><span class="hljs-comment"># [20]  9 17  9 12 19 19 20 19 16 16 14 19 13 12 19  6 20 12 11</span><br><span class="hljs-comment"># [39]  8  5 14 11 17 18 20 15 19 16 17 10</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>分层抽样</p><blockquote><p>分层抽样所用的函数在sampling包中，使用前应导包</p><p>分层抽样函数为：</p><p>strata(data,stratanames=NULL,size,method=c(“srswor”,”srswr”,”poisson”,”systematic”),pik,description=F)</p><p>data即为数据，stratanames中放置进行分层的变量名称；size用于设置抽样的样本数，一般按升序排。而method为选取抽样方法，分别•为无放回抽样、有放回抽样、泊松、系统抽样，默认去srswor,pik设置各层抽样概率，description为选择是否输出各层基本信息。</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">strata(Insurance,stratanames=<span class="hljs-string">&quot;District&quot;</span>,size=<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>),method=<span class="hljs-string">&quot;srswor&quot;</span>)<br><span class="hljs-comment"># 在Insurance数据集中，以&quot;District&quot;列进行分层抽样，第一、二层抽1个数据，第三、四层抽2个数据</span><br><span class="hljs-comment"># District ID_unit   Prob Stratum</span><br><span class="hljs-comment"># 3         1       3 0.0625       1</span><br><span class="hljs-comment"># 26        2      26 0.0625       2</span><br><span class="hljs-comment"># 46        3      46 0.1250       3</span><br><span class="hljs-comment"># 48        3      48 0.1250       3</span><br><span class="hljs-comment"># 51        4      51 0.1250       4</span><br><span class="hljs-comment"># 52        4      52 0.1250       4</span><br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>利用随机抽样生成稀疏矩阵</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">i = sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">10</span>);<br>j = sample(<span class="hljs-number">1</span>:<span class="hljs-number">20</span>,<span class="hljs-number">10</span>);<br>m = sparseMatrix(i,j,x=<span class="hljs-number">8</span>,dims=<span class="hljs-built_in">c</span>(<span class="hljs-number">20</span>,<span class="hljs-number">20</span>))<br><span class="hljs-comment"># m</span><br><span class="hljs-comment"># 20 x 20 sparse Matrix of class &quot;dgCMatrix&quot;</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># [1,] . . . . . . 8 . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [2,] . . . . . . . . . . 8 . . . . . . . . .</span><br><span class="hljs-comment"># [3,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [4,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [5,] . . . . . 8 . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [6,] . . . . . . . . . . . 8 . . . . . . . .</span><br><span class="hljs-comment"># [7,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [8,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [9,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [10,] . . . . . . . . . . . . 8 . . . . . . .</span><br><span class="hljs-comment"># [11,] . . . . . . . . . . . . . . . . . . . 8</span><br><span class="hljs-comment"># [12,] . . . . . . . . 8 . . . . . . . . . . .</span><br><span class="hljs-comment"># [13,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [14,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [15,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [16,] . . . . . . . . . . . . . . . . . 8 . .</span><br><span class="hljs-comment"># [17,] . . . . . . . . . . . . . . . . 8 . . .</span><br><span class="hljs-comment"># [18,] . . . . . . . . . . . . . . . . . . 8 .</span><br><span class="hljs-comment"># [19,] . . . . . . . . . . . . . . . . . . . .</span><br><span class="hljs-comment"># [20,] . . . . . . . . . . . . . . . . . . . .</span><br></code></pre></div></td></tr></table></figure></blockquote></li></ul>]]></content>
    
    
    <categories>
      
      <category>数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鸢尾花品种分类</title>
    <link href="/2021/06/20/%E9%B8%A2%E5%B0%BE%E8%8A%B1%E5%93%81%E7%A7%8D%E5%88%86%E7%B1%BB/"/>
    <url>/2021/06/20/%E9%B8%A2%E5%B0%BE%E8%8A%B1%E5%93%81%E7%A7%8D%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="鸢尾花品种分类">鸢尾花品种分类</h1><h2 id="基本信息">基本信息</h2><ul><li><p>维度</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-built_in">dim</span>(iris)<br>[<span class="hljs-number">1</span>] <span class="hljs-number">150</span>   <span class="hljs-number">5</span><br></code></pre></div></td></tr></table></figure></li><li><p>各字段值（变量）概况</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">summary(iris)<br>  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width          Species  <br> Min.   :<span class="hljs-number">4.300</span>   Min.   :<span class="hljs-number">2.000</span>   Min.   :<span class="hljs-number">1.000</span>   Min.   :<span class="hljs-number">0.100</span>   setosa    :<span class="hljs-number">50</span>  <br> <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">5.100</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">2.800</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">1.600</span>   <span class="hljs-number">1</span>st Qu.:<span class="hljs-number">0.300</span>   versicolor:<span class="hljs-number">50</span>  <br> Median :<span class="hljs-number">5.800</span>   Median :<span class="hljs-number">3.000</span>   Median :<span class="hljs-number">4.350</span>   Median :<span class="hljs-number">1.300</span>   virginica :<span class="hljs-number">50</span>  <br> Mean   :<span class="hljs-number">5.843</span>   Mean   :<span class="hljs-number">3.057</span>   Mean   :<span class="hljs-number">3.758</span>   Mean   :<span class="hljs-number">1.199</span>                  <br> <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">6.400</span>   <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">3.300</span>   <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">5.100</span>   <span class="hljs-number">3</span>rd Qu.:<span class="hljs-number">1.800</span>                  <br> Max.   :<span class="hljs-number">7.900</span>   Max.   :<span class="hljs-number">4.400</span>   Max.   :<span class="hljs-number">6.900</span>   Max.   :<span class="hljs-number">2.500</span><br></code></pre></div></td></tr></table></figure><ul><li>注：Sepal为萼片，Petal为花瓣，1st Qu.四分之一分位数，3rdQu四分之三分位数</li><li>可以通过均值和中位数这两个指标值得差异程度来判断数据得偏倚程度，当两者相差过大，往往说明数据具有明显的右偏或左偏情况。</li></ul></li><li><p>缺失值查看</p><ol type="1"><li><p>通过mice软件包的md.pattern()函数发现不存在缺失值</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">md.pattern(iris)<br> /\     /\<br>&#123;  `---&#x27;  &#125;<br>&#123;  O   O  &#125;<br>==&gt;  V &lt;==  No need for mice. This data set is completely observed.<br> \  \|/  /<br>  `-----<span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Sepal.Length Sepal.Width Petal.Length Petal.Width Species  </span><br><span class="hljs-string">150            1           1            1           1       1 0</span><br><span class="hljs-string">               0           0            0           0       0 0</span><br></code></pre></div></td></tr></table></figure></li><li><p>通过Hmisc软件包的describe函数也得到相同的结果</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">describe(iris)<br>iris <br><br> <span class="hljs-number">5</span>  Variables      <span class="hljs-number">150</span>  Observations<br>----------------------------------------------------------------------------------------------------<br>Sepal.Length <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">35</span>    <span class="hljs-number">0.998</span>    <span class="hljs-number">5.843</span>   <span class="hljs-number">0.9462</span>    <span class="hljs-number">4.600</span>    <span class="hljs-number">4.800</span>    <span class="hljs-number">5.100</span>    <span class="hljs-number">5.800</span>    <span class="hljs-number">6.400</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>   <span class="hljs-number">6.900</span>    <span class="hljs-number">7.255</span> <br><br>lowest : <span class="hljs-number">4.3</span> <span class="hljs-number">4.4</span> <span class="hljs-number">4.5</span> <span class="hljs-number">4.6</span> <span class="hljs-number">4.7</span>, highest: <span class="hljs-number">7.3</span> <span class="hljs-number">7.4</span> <span class="hljs-number">7.6</span> <span class="hljs-number">7.7</span> <span class="hljs-number">7.9</span><br>----------------------------------------------------------------------------------------------------<br>Sepal.Width <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">23</span>    <span class="hljs-number">0.992</span>    <span class="hljs-number">3.057</span>   <span class="hljs-number">0.4872</span>    <span class="hljs-number">2.345</span>    <span class="hljs-number">2.500</span>    <span class="hljs-number">2.800</span>    <span class="hljs-number">3.000</span>    <span class="hljs-number">3.300</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>   <span class="hljs-number">3.610</span>    <span class="hljs-number">3.800</span> <br><br>lowest : <span class="hljs-number">2.0</span> <span class="hljs-number">2.2</span> <span class="hljs-number">2.3</span> <span class="hljs-number">2.4</span> <span class="hljs-number">2.5</span>, highest: <span class="hljs-number">3.9</span> <span class="hljs-number">4.0</span> <span class="hljs-number">4.1</span> <span class="hljs-number">4.2</span> <span class="hljs-number">4.4</span><br>----------------------------------------------------------------------------------------------------<br>Petal.Length <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">43</span>    <span class="hljs-number">0.998</span>    <span class="hljs-number">3.758</span>    <span class="hljs-number">1.979</span>     <span class="hljs-number">1.30</span>     <span class="hljs-number">1.40</span>     <span class="hljs-number">1.60</span>     <span class="hljs-number">4.35</span>     <span class="hljs-number">5.10</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>    <span class="hljs-number">5.80</span>     <span class="hljs-number">6.10</span> <br><br>lowest : <span class="hljs-number">1.0</span> <span class="hljs-number">1.1</span> <span class="hljs-number">1.2</span> <span class="hljs-number">1.3</span> <span class="hljs-number">1.4</span>, highest: <span class="hljs-number">6.3</span> <span class="hljs-number">6.4</span> <span class="hljs-number">6.6</span> <span class="hljs-number">6.7</span> <span class="hljs-number">6.9</span><br>----------------------------------------------------------------------------------------------------<br>Petal.Width <br>       n  <span class="hljs-built_in">missing</span> distinct     Info     Mean      Gmd      <span class="hljs-number">.05</span>      <span class="hljs-number">.10</span>      <span class="hljs-number">.25</span>      <span class="hljs-number">.50</span>      <span class="hljs-number">.75</span> <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>       <span class="hljs-number">22</span>     <span class="hljs-number">0.99</span>    <span class="hljs-number">1.199</span>   <span class="hljs-number">0.8676</span>      <span class="hljs-number">0.2</span>      <span class="hljs-number">0.2</span>      <span class="hljs-number">0.3</span>      <span class="hljs-number">1.3</span>      <span class="hljs-number">1.8</span> <br>     <span class="hljs-number">.90</span>      <span class="hljs-number">.95</span> <br>     <span class="hljs-number">2.2</span>      <span class="hljs-number">2.3</span> <br><br>lowest : <span class="hljs-number">0.1</span> <span class="hljs-number">0.2</span> <span class="hljs-number">0.3</span> <span class="hljs-number">0.4</span> <span class="hljs-number">0.5</span>, highest: <span class="hljs-number">2.1</span> <span class="hljs-number">2.2</span> <span class="hljs-number">2.3</span> <span class="hljs-number">2.4</span> <span class="hljs-number">2.5</span><br>----------------------------------------------------------------------------------------------------<br>Species <br>       n  <span class="hljs-built_in">missing</span> distinct <br>     <span class="hljs-number">150</span>        <span class="hljs-number">0</span>        <span class="hljs-number">3</span> <br>                                           <br>Value          setosa versicolor  virginica<br>Frequency          <span class="hljs-number">50</span>         <span class="hljs-number">50</span>         <span class="hljs-number">50</span><br>Proportion      <span class="hljs-number">0.333</span>      <span class="hljs-number">0.333</span>      <span class="hljs-number">0.333</span><br>----------------------------------------------------------------------------------------------------<br></code></pre></div></td></tr></table></figure></li></ol></li></ul><h2 id="鸢尾花各属性相关性分析">鸢尾花各属性相关性分析</h2><ul><li><p>通过cor()函数得到萼片长度、萼片宽度、花瓣长度、花瓣宽度的相关系数矩阵</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">cor(iris[<span class="hljs-number">1</span>:<span class="hljs-number">4</span>])<br>             Sepal.Length Sepal.Width Petal.Length Petal.Width<br>Sepal.Length    <span class="hljs-number">1.0000000</span>  -<span class="hljs-number">0.1175698</span>    <span class="hljs-number">0.8717538</span>   <span class="hljs-number">0.8179411</span><br>Sepal.Width    -<span class="hljs-number">0.1175698</span>   <span class="hljs-number">1.0000000</span>   -<span class="hljs-number">0.4284401</span>  -<span class="hljs-number">0.3661259</span><br>Petal.Length    <span class="hljs-number">0.8717538</span>  -<span class="hljs-number">0.4284401</span>    <span class="hljs-number">1.0000000</span>   <span class="hljs-number">0.9628654</span><br>Petal.Width     <span class="hljs-number">0.8179411</span>  -<span class="hljs-number">0.3661259</span>    <span class="hljs-number">0.9628654</span>   <span class="hljs-number">1.0000000</span><br></code></pre></div></td></tr></table></figure></li><li><p>通过corrplot包中的corrplot()函数进行相关系数的可视化，得到相关系数图</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">corrplot(corr,method = <span class="hljs-string">&quot;circle&quot;</span>,addCoef.col = <span class="hljs-string">&quot;red&quot;</span>)<br></code></pre></div></td></tr></table></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620190150156.png"alt="相关系数图" /><figcaption aria-hidden="true">相关系数图</figcaption></figure><ul><li>从上图可以看出花瓣宽度与花瓣长度有很强的相关性（相关系数为0.96），萼片长度与花瓣长度、花瓣宽度有较强的相关性（相关系数分别为0.87，0.82）</li></ul></li></ul><h2 id="聚类分析">聚类分析</h2><h3 id="kmeans聚类">kmeans聚类</h3><ul><li><p>目的：对鸢尾花数据集的前四列进行聚类，通过第五列的品种看聚类是否对相同品种的花聚到了一起</p></li><li><p>移除第五列（将第五取出起名为species）</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">species = iris[,<span class="hljs-number">5</span>]<br>iris_1 = iris[,<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br>iris_1 = iris[,<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br></code></pre></div></td></tr></table></figure></li><li><p>通过k均值聚类</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">km1 = kmeans(iris_1,centers = <span class="hljs-number">3</span>)<span class="hljs-comment"># 聚三类</span><br></code></pre></div></td></tr></table></figure><blockquote><p>结果：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">K-means clustering with <span class="hljs-number">3</span> clusters of sizes <span class="hljs-number">50</span>, <span class="hljs-number">38</span>, <span class="hljs-number">62</span><br><br>Cluster means:<br>  Sepal.Length Sepal.Width Petal.Length Petal.Width<br><span class="hljs-number">1</span>     <span class="hljs-number">5.006000</span>    <span class="hljs-number">3.428000</span>     <span class="hljs-number">1.462000</span>    <span class="hljs-number">0.246000</span><br><span class="hljs-number">2</span>     <span class="hljs-number">6.850000</span>    <span class="hljs-number">3.073684</span>     <span class="hljs-number">5.742105</span>    <span class="hljs-number">2.071053</span><br><span class="hljs-number">3</span>     <span class="hljs-number">5.901613</span>    <span class="hljs-number">2.748387</span>     <span class="hljs-number">4.393548</span>    <span class="hljs-number">1.433871</span><br><br>Clustering vector:<br>  <span class="hljs-number">1</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">4</span>   <span class="hljs-number">5</span>   <span class="hljs-number">6</span>   <span class="hljs-number">7</span>   <span class="hljs-number">8</span>   <span class="hljs-number">9</span>  <span class="hljs-number">10</span>  <span class="hljs-number">11</span>  <span class="hljs-number">12</span>  <span class="hljs-number">13</span>  <span class="hljs-number">14</span>  <span class="hljs-number">15</span>  <span class="hljs-number">16</span>  <span class="hljs-number">17</span>  <span class="hljs-number">18</span>  <span class="hljs-number">19</span>  <span class="hljs-number">20</span>  <span class="hljs-number">21</span>  <span class="hljs-number">22</span> <br>  <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span> <br> <span class="hljs-number">23</span>  <span class="hljs-number">24</span>  <span class="hljs-number">25</span>  <span class="hljs-number">26</span>  <span class="hljs-number">27</span>  <span class="hljs-number">28</span>  <span class="hljs-number">29</span>  <span class="hljs-number">30</span>  <span class="hljs-number">31</span>  <span class="hljs-number">32</span>  <span class="hljs-number">33</span>  <span class="hljs-number">34</span>  <span class="hljs-number">35</span>  <span class="hljs-number">36</span>  <span class="hljs-number">37</span>  <span class="hljs-number">38</span>  <span class="hljs-number">39</span>  <span class="hljs-number">40</span>  <span class="hljs-number">41</span>  <span class="hljs-number">42</span>  <span class="hljs-number">43</span>  <span class="hljs-number">44</span> <br>  <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span> <br> <span class="hljs-number">45</span>  <span class="hljs-number">46</span>  <span class="hljs-number">47</span>  <span class="hljs-number">48</span>  <span class="hljs-number">49</span>  <span class="hljs-number">50</span>  <span class="hljs-number">51</span>  <span class="hljs-number">52</span>  <span class="hljs-number">53</span>  <span class="hljs-number">54</span>  <span class="hljs-number">55</span>  <span class="hljs-number">56</span>  <span class="hljs-number">57</span>  <span class="hljs-number">58</span>  <span class="hljs-number">59</span>  <span class="hljs-number">60</span>  <span class="hljs-number">61</span>  <span class="hljs-number">62</span>  <span class="hljs-number">63</span>  <span class="hljs-number">64</span>  <span class="hljs-number">65</span>  <span class="hljs-number">66</span> <br>  <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span> <br> <span class="hljs-number">67</span>  <span class="hljs-number">68</span>  <span class="hljs-number">69</span>  <span class="hljs-number">70</span>  <span class="hljs-number">71</span>  <span class="hljs-number">72</span>  <span class="hljs-number">73</span>  <span class="hljs-number">74</span>  <span class="hljs-number">75</span>  <span class="hljs-number">76</span>  <span class="hljs-number">77</span>  <span class="hljs-number">78</span>  <span class="hljs-number">79</span>  <span class="hljs-number">80</span>  <span class="hljs-number">81</span>  <span class="hljs-number">82</span>  <span class="hljs-number">83</span>  <span class="hljs-number">84</span>  <span class="hljs-number">85</span>  <span class="hljs-number">86</span>  <span class="hljs-number">87</span>  <span class="hljs-number">88</span> <br>  <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span> <br> <span class="hljs-number">89</span>  <span class="hljs-number">90</span>  <span class="hljs-number">91</span>  <span class="hljs-number">92</span>  <span class="hljs-number">93</span>  <span class="hljs-number">94</span>  <span class="hljs-number">95</span>  <span class="hljs-number">96</span>  <span class="hljs-number">97</span>  <span class="hljs-number">98</span>  <span class="hljs-number">99</span> <span class="hljs-number">100</span> <span class="hljs-number">101</span> <span class="hljs-number">102</span> <span class="hljs-number">103</span> <span class="hljs-number">104</span> <span class="hljs-number">105</span> <span class="hljs-number">106</span> <span class="hljs-number">107</span> <span class="hljs-number">108</span> <span class="hljs-number">109</span> <span class="hljs-number">110</span> <br>  <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span> <br><span class="hljs-number">111</span> <span class="hljs-number">112</span> <span class="hljs-number">113</span> <span class="hljs-number">114</span> <span class="hljs-number">115</span> <span class="hljs-number">116</span> <span class="hljs-number">117</span> <span class="hljs-number">118</span> <span class="hljs-number">119</span> <span class="hljs-number">120</span> <span class="hljs-number">121</span> <span class="hljs-number">122</span> <span class="hljs-number">123</span> <span class="hljs-number">124</span> <span class="hljs-number">125</span> <span class="hljs-number">126</span> <span class="hljs-number">127</span> <span class="hljs-number">128</span> <span class="hljs-number">129</span> <span class="hljs-number">130</span> <span class="hljs-number">131</span> <span class="hljs-number">132</span> <br>  <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span> <br><span class="hljs-number">133</span> <span class="hljs-number">134</span> <span class="hljs-number">135</span> <span class="hljs-number">136</span> <span class="hljs-number">137</span> <span class="hljs-number">138</span> <span class="hljs-number">139</span> <span class="hljs-number">140</span> <span class="hljs-number">141</span> <span class="hljs-number">142</span> <span class="hljs-number">143</span> <span class="hljs-number">144</span> <span class="hljs-number">145</span> <span class="hljs-number">146</span> <span class="hljs-number">147</span> <span class="hljs-number">148</span> <span class="hljs-number">149</span> <span class="hljs-number">150</span> <br>  <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span> <br><br>Within cluster <span class="hljs-built_in">sum</span> of squares by cluster:<br>[<span class="hljs-number">1</span>] <span class="hljs-number">15.15100</span> <span class="hljs-number">23.87947</span> <span class="hljs-number">39.82097</span><br> (between_SS / total_SS =  <span class="hljs-number">88.4</span> %)<br><br>Available components:<br><br>[1] &quot;cluster&quot;      &quot;centers&quot;      &quot;totss&quot;        &quot;withinss&quot;     &quot;tot.withinss&quot;<br>[6] &quot;betweenss&quot;    &quot;size&quot;         &quot;iter&quot;         &quot;ifault&quot; <br></code></pre></div></td></tr></table></figure></blockquote></li><li><p>输出聚类结果与原始品种的对比表</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">table(species,km1$cluster)<br>            <br>species       <span class="hljs-number">1</span>  <span class="hljs-number">2</span>  <span class="hljs-number">3</span><br>  setosa      <span class="hljs-number">0</span>  <span class="hljs-number">0</span> <span class="hljs-number">50</span><br>  versicolor  <span class="hljs-number">2</span> <span class="hljs-number">48</span>  <span class="hljs-number">0</span><br>  virginica  <span class="hljs-number">36</span> <span class="hljs-number">14</span>  <span class="hljs-number">0</span><br></code></pre></div></td></tr></table></figure><blockquote><p>从表中可以看出setosa与另外两种花能够很好的区分开，而virginica这个品种的花则较难区分，有36个数据被分到第一类，有14个被分到第二类。</p></blockquote></li><li><p>画出聚类图</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">sub=which(km1$cluster==<span class="hljs-number">1</span>)<br>color = km1$cluster<br>color[sub] = <span class="hljs-string">&#x27;red&#x27;</span><br>sub=which(km1$cluster==<span class="hljs-number">2</span>)<br>color[sub] = <span class="hljs-string">&#x27;yellow&#x27;</span><br>sub=which(km1$cluster==<span class="hljs-number">3</span>)<br>color[sub] = <span class="hljs-string">&#x27;black&#x27;</span><br><span class="hljs-comment"># 以上代码只是修改数据点的颜色</span><br>plot(iris_1[<span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;Sepal.Length&quot;</span>, <span class="hljs-string">&quot;Sepal.Width&quot;</span>)],col = color)<br>points(km1$centers[,<span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;Sepal.Length&quot;</span>, <span class="hljs-string">&quot;Sepal.Width&quot;</span>)], col = <span class="hljs-number">1</span>:<span class="hljs-number">3</span>, pch = <span class="hljs-number">8</span>, cex=<span class="hljs-number">4</span>) <span class="hljs-comment"># 标出中心点</span><br></code></pre></div></td></tr></table></figure></li><li><p>结果图</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210620214452613.png"alt="聚类结果图" /><figcaption aria-hidden="true">聚类结果图</figcaption></figure></li><li><p>结果分析</p><blockquote><p>从图中可以看出，黑色的点与黄色和红色没有什么交集，而红色与黄色有相交的部分，与上面的分析一致</p></blockquote></li></ul><h3 id="系统聚类">系统聚类</h3><ul><li><p>系统聚类法（hierarchical clustermethod）一译“分层聚类法”。聚类分析的一种方法。其做法是开始时把每个样品作为一类，然后把最靠近的样品（即距离最小的群品）首先聚为小类，再将已聚合的小类按其类间距离再合并，不断继续下去，最后把一切子类都聚合到一个大类。</p></li><li><p>系统聚类的一般步骤：</p><ol type="1"><li>定义以变量或指标的个数为维度的空间里的一种距离；</li><li>计算n个样本两两之间的距离；</li><li>将每个样本归为一类，根据计算出的样本间的距离合并距离最近的两类为一个新类；</li><li>再计算新类与其他各类的距离，同样再根据计算出的距离合并距离最近的两类为一个新类；</li><li>循环以上过程直至类别个数为1；</li><li>画出各阶段的聚类图并决定类别的个数。</li><li>对于变量聚类分析，只需要将距离替换为相似系数，然后将相似系数较大的变量分别聚类即可。</li><li>常用的空间距离有：绝对值距离、<ahref="https://baike.baidu.com/item/欧氏距离/1798948">欧氏距离</a>、<ahref="https://baike.baidu.com/item/切比雪夫距离/8955729">切比雪夫距离</a>、<ahref="https://baike.baidu.com/item/马氏距离/8927833">马氏距离</a>和兰氏距离等。</li></ol></li><li><p>对鸢尾花进行系统聚类：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">iris_1 = iris[,<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br>iris_1 &lt;- na.omit(iris_1) <span class="hljs-comment"># 删除缺失值</span><br>iris_1 &lt;- scale(iris_1) <span class="hljs-comment"># 数据标准化</span><br>dis &lt;- dist(iris_1) <span class="hljs-comment"># 计算距离</span><br>clust &lt;- hclust(dis, method=<span class="hljs-string">&quot;ward.D&quot;</span>) <span class="hljs-comment">#进行Ward层次聚类</span><br>plot(clust) <span class="hljs-comment"># 绘制树状图展示聚类结果</span><br>groups &lt;- cutree(clust, k=<span class="hljs-number">3</span>) <span class="hljs-comment"># 设定聚类个数为3</span><br>rect.hclust(clust, k=<span class="hljs-number">3</span>, border=<span class="hljs-string">&quot;blue&quot;</span>) <span class="hljs-comment"># 给聚成的3个类别加上蓝色边框</span><br>groups<br></code></pre></div></td></tr></table></figure></li><li><p>得到聚类结果：</p><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">  <span class="hljs-number">1</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">4</span>   <span class="hljs-number">5</span>   <span class="hljs-number">6</span>   <span class="hljs-number">7</span>   <span class="hljs-number">8</span>   <span class="hljs-number">9</span>  <span class="hljs-number">10</span>  <span class="hljs-number">11</span>  <span class="hljs-number">12</span>  <span class="hljs-number">13</span>  <span class="hljs-number">14</span>  <span class="hljs-number">15</span>  <span class="hljs-number">16</span>  <span class="hljs-number">17</span>  <span class="hljs-number">18</span>  <span class="hljs-number">19</span>  <span class="hljs-number">20</span>  <span class="hljs-number">21</span>  <span class="hljs-number">22</span> <br>  <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span> <br> <span class="hljs-number">23</span>  <span class="hljs-number">24</span>  <span class="hljs-number">25</span>  <span class="hljs-number">26</span>  <span class="hljs-number">27</span>  <span class="hljs-number">28</span>  <span class="hljs-number">29</span>  <span class="hljs-number">30</span>  <span class="hljs-number">31</span>  <span class="hljs-number">32</span>  <span class="hljs-number">33</span>  <span class="hljs-number">34</span>  <span class="hljs-number">35</span>  <span class="hljs-number">36</span>  <span class="hljs-number">37</span>  <span class="hljs-number">38</span>  <span class="hljs-number">39</span>  <span class="hljs-number">40</span>  <span class="hljs-number">41</span>  <span class="hljs-number">42</span>  <span class="hljs-number">43</span>  <span class="hljs-number">44</span> <br>  <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">2</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span> <br> <span class="hljs-number">45</span>  <span class="hljs-number">46</span>  <span class="hljs-number">47</span>  <span class="hljs-number">48</span>  <span class="hljs-number">49</span>  <span class="hljs-number">50</span>  <span class="hljs-number">51</span>  <span class="hljs-number">52</span>  <span class="hljs-number">53</span>  <span class="hljs-number">54</span>  <span class="hljs-number">55</span>  <span class="hljs-number">56</span>  <span class="hljs-number">57</span>  <span class="hljs-number">58</span>  <span class="hljs-number">59</span>  <span class="hljs-number">60</span>  <span class="hljs-number">61</span>  <span class="hljs-number">62</span>  <span class="hljs-number">63</span>  <span class="hljs-number">64</span>  <span class="hljs-number">65</span>  <span class="hljs-number">66</span> <br>  <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span> <br> <span class="hljs-number">67</span>  <span class="hljs-number">68</span>  <span class="hljs-number">69</span>  <span class="hljs-number">70</span>  <span class="hljs-number">71</span>  <span class="hljs-number">72</span>  <span class="hljs-number">73</span>  <span class="hljs-number">74</span>  <span class="hljs-number">75</span>  <span class="hljs-number">76</span>  <span class="hljs-number">77</span>  <span class="hljs-number">78</span>  <span class="hljs-number">79</span>  <span class="hljs-number">80</span>  <span class="hljs-number">81</span>  <span class="hljs-number">82</span>  <span class="hljs-number">83</span>  <span class="hljs-number">84</span>  <span class="hljs-number">85</span>  <span class="hljs-number">86</span>  <span class="hljs-number">87</span>  <span class="hljs-number">88</span> <br>  <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span> <br> <span class="hljs-number">89</span>  <span class="hljs-number">90</span>  <span class="hljs-number">91</span>  <span class="hljs-number">92</span>  <span class="hljs-number">93</span>  <span class="hljs-number">94</span>  <span class="hljs-number">95</span>  <span class="hljs-number">96</span>  <span class="hljs-number">97</span>  <span class="hljs-number">98</span>  <span class="hljs-number">99</span> <span class="hljs-number">100</span> <span class="hljs-number">101</span> <span class="hljs-number">102</span> <span class="hljs-number">103</span> <span class="hljs-number">104</span> <span class="hljs-number">105</span> <span class="hljs-number">106</span> <span class="hljs-number">107</span> <span class="hljs-number">108</span> <span class="hljs-number">109</span> <span class="hljs-number">110</span> <br>  <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span> <br><span class="hljs-number">111</span> <span class="hljs-number">112</span> <span class="hljs-number">113</span> <span class="hljs-number">114</span> <span class="hljs-number">115</span> <span class="hljs-number">116</span> <span class="hljs-number">117</span> <span class="hljs-number">118</span> <span class="hljs-number">119</span> <span class="hljs-number">120</span> <span class="hljs-number">121</span> <span class="hljs-number">122</span> <span class="hljs-number">123</span> <span class="hljs-number">124</span> <span class="hljs-number">125</span> <span class="hljs-number">126</span> <span class="hljs-number">127</span> <span class="hljs-number">128</span> <span class="hljs-number">129</span> <span class="hljs-number">130</span> <span class="hljs-number">131</span> <span class="hljs-number">132</span> <br>  <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span> <br><span class="hljs-number">133</span> <span class="hljs-number">134</span> <span class="hljs-number">135</span> <span class="hljs-number">136</span> <span class="hljs-number">137</span> <span class="hljs-number">138</span> <span class="hljs-number">139</span> <span class="hljs-number">140</span> <span class="hljs-number">141</span> <span class="hljs-number">142</span> <span class="hljs-number">143</span> <span class="hljs-number">144</span> <span class="hljs-number">145</span> <span class="hljs-number">146</span> <span class="hljs-number">147</span> <span class="hljs-number">148</span> <span class="hljs-number">149</span> <span class="hljs-number">150</span> <br>  <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span>   <span class="hljs-number">2</span>   <span class="hljs-number">3</span>   <span class="hljs-number">2</span> <br></code></pre></div></td></tr></table></figure></li><li><p>画出系谱图：</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210624203844565.png"alt="系谱图" /><figcaption aria-hidden="true">系谱图</figcaption></figure></li><li><p>结果分析：</p><blockquote><p>从聚类结果可以看出，其中setosa与另外两种花能够很好的区分开，而virginica这个品种的花则较难区分，有36个数据被分到第一类，有14个被分到第二类。</p></blockquote></li></ul><h2 id="iris数据集">iris数据集</h2><table style="width:100%;"><colgroup><col style="width: 6%" /><col style="width: 20%" /><col style="width: 18%" /><col style="width: 20%" /><col style="width: 18%" /><col style="width: 16%" /></colgroup><thead><tr class="header"><th></th><th>Sepal.Length</th><th>Sepal.Width</th><th>Petal.Length</th><th>Petal.Width</th><th style="text-align: center;">Species</th></tr></thead><tbody><tr class="odd"><td>1</td><td>5.1</td><td>3.5</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>2</td><td>4.9</td><td>3</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>3</td><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>4</td><td>4.6</td><td>3.1</td><td>1.5</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>5</td><td>5</td><td>3.6</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>6</td><td>5.4</td><td>3.9</td><td>1.7</td><td>0.4</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>7</td><td>4.6</td><td>3.4</td><td>1.4</td><td>0.3</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>8</td><td>5</td><td>3.4</td><td>1.5</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>9</td><td>4.4</td><td>2.9</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>10</td><td>4.9</td><td>3.1</td><td>1.5</td><td>0.1</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>11</td><td>5.4</td><td>3.7</td><td>1.5</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>12</td><td>4.8</td><td>3.4</td><td>1.6</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>13</td><td>4.8</td><td>3</td><td>1.4</td><td>0.1</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>14</td><td>4.3</td><td>3</td><td>1.1</td><td>0.1</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>15</td><td>5.8</td><td>4</td><td>1.2</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>16</td><td>5.7</td><td>4.4</td><td>1.5</td><td>0.4</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>17</td><td>5.4</td><td>3.9</td><td>1.3</td><td>0.4</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>18</td><td>5.1</td><td>3.5</td><td>1.4</td><td>0.3</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>19</td><td>5.7</td><td>3.8</td><td>1.7</td><td>0.3</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>20</td><td>5.1</td><td>3.8</td><td>1.5</td><td>0.3</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>21</td><td>5.4</td><td>3.4</td><td>1.7</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>22</td><td>5.1</td><td>3.7</td><td>1.5</td><td>0.4</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>23</td><td>4.6</td><td>3.6</td><td>1</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>24</td><td>5.1</td><td>3.3</td><td>1.7</td><td>0.5</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>25</td><td>4.8</td><td>3.4</td><td>1.9</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>26</td><td>5</td><td>3</td><td>1.6</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>27</td><td>5</td><td>3.4</td><td>1.6</td><td>0.4</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>28</td><td>5.2</td><td>3.5</td><td>1.5</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>29</td><td>5.2</td><td>3.4</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>30</td><td>4.7</td><td>3.2</td><td>1.6</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>31</td><td>4.8</td><td>3.1</td><td>1.6</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>32</td><td>5.4</td><td>3.4</td><td>1.5</td><td>0.4</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>33</td><td>5.2</td><td>4.1</td><td>1.5</td><td>0.1</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>34</td><td>5.5</td><td>4.2</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>35</td><td>4.9</td><td>3.1</td><td>1.5</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>36</td><td>5</td><td>3.2</td><td>1.2</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>37</td><td>5.5</td><td>3.5</td><td>1.3</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>38</td><td>4.9</td><td>3.6</td><td>1.4</td><td>0.1</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>39</td><td>4.4</td><td>3</td><td>1.3</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>40</td><td>5.1</td><td>3.4</td><td>1.5</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>41</td><td>5</td><td>3.5</td><td>1.3</td><td>0.3</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>42</td><td>4.5</td><td>2.3</td><td>1.3</td><td>0.3</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>43</td><td>4.4</td><td>3.2</td><td>1.3</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>44</td><td>5</td><td>3.5</td><td>1.6</td><td>0.6</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>45</td><td>5.1</td><td>3.8</td><td>1.9</td><td>0.4</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>46</td><td>4.8</td><td>3</td><td>1.4</td><td>0.3</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>47</td><td>5.1</td><td>3.8</td><td>1.6</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>48</td><td>4.6</td><td>3.2</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>49</td><td>5.3</td><td>3.7</td><td>1.5</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="even"><td>50</td><td>5</td><td>3.3</td><td>1.4</td><td>0.2</td><td style="text-align: center;">setosa</td></tr><tr class="odd"><td>51</td><td>7</td><td>3.2</td><td>4.7</td><td>1.4</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>52</td><td>6.4</td><td>3.2</td><td>4.5</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>53</td><td>6.9</td><td>3.1</td><td>4.9</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>54</td><td>5.5</td><td>2.3</td><td>4</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>55</td><td>6.5</td><td>2.8</td><td>4.6</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>56</td><td>5.7</td><td>2.8</td><td>4.5</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>57</td><td>6.3</td><td>3.3</td><td>4.7</td><td>1.6</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>58</td><td>4.9</td><td>2.4</td><td>3.3</td><td>1</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>59</td><td>6.6</td><td>2.9</td><td>4.6</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>60</td><td>5.2</td><td>2.7</td><td>3.9</td><td>1.4</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>61</td><td>5</td><td>2</td><td>3.5</td><td>1</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>62</td><td>5.9</td><td>3</td><td>4.2</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>63</td><td>6</td><td>2.2</td><td>4</td><td>1</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>64</td><td>6.1</td><td>2.9</td><td>4.7</td><td>1.4</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>65</td><td>5.6</td><td>2.9</td><td>3.6</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>66</td><td>6.7</td><td>3.1</td><td>4.4</td><td>1.4</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>67</td><td>5.6</td><td>3</td><td>4.5</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>68</td><td>5.8</td><td>2.7</td><td>4.1</td><td>1</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>69</td><td>6.2</td><td>2.2</td><td>4.5</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>70</td><td>5.6</td><td>2.5</td><td>3.9</td><td>1.1</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>71</td><td>5.9</td><td>3.2</td><td>4.8</td><td>1.8</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>72</td><td>6.1</td><td>2.8</td><td>4</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>73</td><td>6.3</td><td>2.5</td><td>4.9</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>74</td><td>6.1</td><td>2.8</td><td>4.7</td><td>1.2</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>75</td><td>6.4</td><td>2.9</td><td>4.3</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>76</td><td>6.6</td><td>3</td><td>4.4</td><td>1.4</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>77</td><td>6.8</td><td>2.8</td><td>4.8</td><td>1.4</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>78</td><td>6.7</td><td>3</td><td>5</td><td>1.7</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>79</td><td>6</td><td>2.9</td><td>4.5</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>80</td><td>5.7</td><td>2.6</td><td>3.5</td><td>1</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>81</td><td>5.5</td><td>2.4</td><td>3.8</td><td>1.1</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>82</td><td>5.5</td><td>2.4</td><td>3.7</td><td>1</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>83</td><td>5.8</td><td>2.7</td><td>3.9</td><td>1.2</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>84</td><td>6</td><td>2.7</td><td>5.1</td><td>1.6</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>85</td><td>5.4</td><td>3</td><td>4.5</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>86</td><td>6</td><td>3.4</td><td>4.5</td><td>1.6</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>87</td><td>6.7</td><td>3.1</td><td>4.7</td><td>1.5</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>88</td><td>6.3</td><td>2.3</td><td>4.4</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>89</td><td>5.6</td><td>3</td><td>4.1</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>90</td><td>5.5</td><td>2.5</td><td>4</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>91</td><td>5.5</td><td>2.6</td><td>4.4</td><td>1.2</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>92</td><td>6.1</td><td>3</td><td>4.6</td><td>1.4</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>93</td><td>5.8</td><td>2.6</td><td>4</td><td>1.2</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>94</td><td>5</td><td>2.3</td><td>3.3</td><td>1</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>95</td><td>5.6</td><td>2.7</td><td>4.2</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>96</td><td>5.7</td><td>3</td><td>4.2</td><td>1.2</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>97</td><td>5.7</td><td>2.9</td><td>4.2</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>98</td><td>6.2</td><td>2.9</td><td>4.3</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>99</td><td>5.1</td><td>2.5</td><td>3</td><td>1.1</td><td style="text-align: center;">versicolor</td></tr><tr class="even"><td>100</td><td>5.7</td><td>2.8</td><td>4.1</td><td>1.3</td><td style="text-align: center;">versicolor</td></tr><tr class="odd"><td>101</td><td>6.3</td><td>3.3</td><td>6</td><td>2.5</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>102</td><td>5.8</td><td>2.7</td><td>5.1</td><td>1.9</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>103</td><td>7.1</td><td>3</td><td>5.9</td><td>2.1</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>104</td><td>6.3</td><td>2.9</td><td>5.6</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>105</td><td>6.5</td><td>3</td><td>5.8</td><td>2.2</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>106</td><td>7.6</td><td>3</td><td>6.6</td><td>2.1</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>107</td><td>4.9</td><td>2.5</td><td>4.5</td><td>1.7</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>108</td><td>7.3</td><td>2.9</td><td>6.3</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>109</td><td>6.7</td><td>2.5</td><td>5.8</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>110</td><td>7.2</td><td>3.6</td><td>6.1</td><td>2.5</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>111</td><td>6.5</td><td>3.2</td><td>5.1</td><td>2</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>112</td><td>6.4</td><td>2.7</td><td>5.3</td><td>1.9</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>113</td><td>6.8</td><td>3</td><td>5.5</td><td>2.1</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>114</td><td>5.7</td><td>2.5</td><td>5</td><td>2</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>115</td><td>5.8</td><td>2.8</td><td>5.1</td><td>2.4</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>116</td><td>6.4</td><td>3.2</td><td>5.3</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>117</td><td>6.5</td><td>3</td><td>5.5</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>118</td><td>7.7</td><td>3.8</td><td>6.7</td><td>2.2</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>119</td><td>7.7</td><td>2.6</td><td>6.9</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>120</td><td>6</td><td>2.2</td><td>5</td><td>1.5</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>121</td><td>6.9</td><td>3.2</td><td>5.7</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>122</td><td>5.6</td><td>2.8</td><td>4.9</td><td>2</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>123</td><td>7.7</td><td>2.8</td><td>6.7</td><td>2</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>124</td><td>6.3</td><td>2.7</td><td>4.9</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>125</td><td>6.7</td><td>3.3</td><td>5.7</td><td>2.1</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>126</td><td>7.2</td><td>3.2</td><td>6</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>127</td><td>6.2</td><td>2.8</td><td>4.8</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>128</td><td>6.1</td><td>3</td><td>4.9</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>129</td><td>6.4</td><td>2.8</td><td>5.6</td><td>2.1</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>130</td><td>7.2</td><td>3</td><td>5.8</td><td>1.6</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>131</td><td>7.4</td><td>2.8</td><td>6.1</td><td>1.9</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>132</td><td>7.9</td><td>3.8</td><td>6.4</td><td>2</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>133</td><td>6.4</td><td>2.8</td><td>5.6</td><td>2.2</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>134</td><td>6.3</td><td>2.8</td><td>5.1</td><td>1.5</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>135</td><td>6.1</td><td>2.6</td><td>5.6</td><td>1.4</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>136</td><td>7.7</td><td>3</td><td>6.1</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>137</td><td>6.3</td><td>3.4</td><td>5.6</td><td>2.4</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>138</td><td>6.4</td><td>3.1</td><td>5.5</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>139</td><td>6</td><td>3</td><td>4.8</td><td>1.8</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>140</td><td>6.9</td><td>3.1</td><td>5.4</td><td>2.1</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>141</td><td>6.7</td><td>3.1</td><td>5.6</td><td>2.4</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>142</td><td>6.9</td><td>3.1</td><td>5.1</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>143</td><td>5.8</td><td>2.7</td><td>5.1</td><td>1.9</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>144</td><td>6.8</td><td>3.2</td><td>5.9</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>145</td><td>6.7</td><td>3.3</td><td>5.7</td><td>2.5</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>146</td><td>6.7</td><td>3</td><td>5.2</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>147</td><td>6.3</td><td>2.5</td><td>5</td><td>1.9</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>148</td><td>6.5</td><td>3</td><td>5.2</td><td>2</td><td style="text-align: center;">virginica</td></tr><tr class="odd"><td>149</td><td>6.2</td><td>3.4</td><td>5.4</td><td>2.3</td><td style="text-align: center;">virginica</td></tr><tr class="even"><td>150</td><td>5.9</td><td>3</td><td>5.1</td><td>1.8</td><td style="text-align: center;">virginica</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库概述</title>
    <link href="/2021/06/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/"/>
    <url>/2021/06/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库系统概述">数据库系统概述</h1><h2 id="四个基本概念">四个基本概念：</h2><ul><li><p>数据（Data）：描述事物的符号记录</p></li><li><p>数据库（Database）：数据的集合</p><blockquote><p>数据按一定的数据模型组织、描述和出错</p><p>可为各种用户共享</p><p>冗余度较小，什么是冗余？</p><p>数据独立性较高</p><p>易扩展</p></blockquote></li><li><p>数据库管理系统（DBMS）：一个图形化界面，一个方便用户管理数据库的软件</p><blockquote><p>数据定义功能</p><p>数据组织、存储和管理</p><p>数据操纵功能</p><p>数据库的事务管理和运行管理</p><p>数据库的建立和维护功能</p><p>其他</p></blockquote></li><li><p>数据库系统(DBS)：由数据库、数据库管理系统、应用程序和数据库管理员组成的存储、管理、处理和维护数据的系统</p></li></ul><h2 id="三个发展阶段">三个发展阶段</h2><ul><li><p>人工管理阶段：20世纪50年代中期以前</p></li><li><p>文件系统阶段：20世纪50年代后期到60年代中期</p></li><li><p>数据库系统阶段：20世纪60年代后期到现在</p><blockquote><p>主要特征：</p><blockquote><p>数据结构化</p><p>数据的共享性高、冗余度低且易扩充</p><p>数据独立性高</p><p>数据由数据库管理系统统一管理和控制</p><blockquote><p>安全性保护</p><p>完整性检查</p><p>并发控制</p><p>数据库恢复</p></blockquote></blockquote></blockquote></li></ul><h2id="数据模型对现实世界数据特征的抽象">数据模型：对现实世界数据特征的抽象</h2><h3 id="数据模型组成要素">数据模型组成要素</h3><ul><li>数据结构：描述数据库的组成对象以及对象之间的练习</li><li>数据操作：增删改查</li><li>数据的完整性约束条件</li></ul><h3id="第一类概念模型将现实世界抽象为信息世界">第一类、概念模型：将现实世界抽象为信息世界</h3><ul><li><p>一些重要概念：</p><blockquote><p>实体：如人，事，物</p><p>属性：实体所具有的特性，如人的姓名，年龄等</p><p>码：唯一标识实体的属性，即主键，如人的身份证号码</p><p>实体性：用实体名及其属性名集合来抽象和刻画同类实体，如，人（姓名，年龄，性别，出生年月）</p><p>实体集：同一类型实体的集合</p><p>联系：通常指不同实体集之间的联系</p><blockquote><p>一对一</p><p>一对多</p><p>多对多</p></blockquote></blockquote></li><li><p>概念模型的表示方法（表现形式）：E-R图</p></li></ul><h3 id="第二类逻辑模型和物理模型">第二类、逻辑模型和物理模型</h3><h4 id="逻辑模型指关系">逻辑模型：指关系</h4><ul><li><p>层次模型：类似一棵倒立的树</p></li><li><p>网状模型：类似一张图</p></li><li><p>关系模型：类似一张二维表格，由行和列组成</p><blockquote><p>关系模型的数据结构</p><blockquote><p>关系</p><p>元祖</p><p>属性</p><p>码</p><p>域：取值范围</p><p><strong>分量</strong> ：元祖中的一个属性值，它是不能再分的</p><p>关系模式：关系名（属性1，属性2，属性3，·····），如：人（姓名，年龄，性别，出生年月）</p></blockquote></blockquote></li><li><p>面向对象数据模型</p></li><li><p>对象关系数据模型</p></li><li><p>半结构化数据模型</p></li></ul><h2 id="数据库系统的结构">数据库系统的结构</h2><h3 id="数据库系统模式的概念">数据库系统模式的概念</h3><ul><li><p>型：对一类数据和属性的说明</p></li><li><p>值：是型的一个具体赋值</p></li></ul><h3id="模式schema是型的描述不涉及具体值反应的是数据的结构及其联系">模式（Schema）：是型的描述，不涉及具体值，反应的是数据的结构及其联系</h3><h3id="实例instance模式的一个具体值x">实例（Instance）：模式的一个具体值x</h3><h3 id="三级模式结构">三级模式结构：</h3><ul><li><p>模式（Schema）：数据库中全体数据的逻辑结构和特征的描述，一个数据库只有一个</p></li><li><p>外模式（ExternalSchema）：数据库用户的数据视图，与某一应用有关的数据的逻辑表示</p><p>每个用户只能看见和访问所对应的外模式中的数据</p></li><li><p>内模式（InternalSchema）：数据存储的物理结构，一个数据库只有一个</p></li></ul><h3id="二级映像功能与数据独立性实现三级模式的联系和转换">二级映像功能与数据独立性：实现三级模式的联系和转换</h3><blockquote><p>保证了数据库外模式的稳定性，从底层保证了应用程序的稳定性，除非应用需求本身发生变化，否则应用程序一般不需要修改</p></blockquote><ul><li><p>外模式 / 模式映像：定义外模式与模式之间的对应关系</p><blockquote><p>保证数据的逻辑独立性当模式改变时，数据库管理员对外模式／模式映象作相应改变，使外模式保持不变应用程序是依据数据的外模式编写的，应用程序不必修改，保证了数据与程序的逻辑独立性，简称数据的逻辑独立性</p></blockquote></li><li><p>模式 / 内模式映像：定义内模式与模式之间的对应关系</p><blockquote><p>保证数据的物理独立性当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，使模式保持不变。应用程序不受影响。保证了数据与程序的物理独立性，简称数据的物理独立性。</p></blockquote></li></ul><h2 id="数据库系统的组成">数据库系统的组成</h2><ul><li>数据库</li><li>数据库管理系统（及其开发工具）</li><li>应用程序</li><li>数据库管理员</li><li>硬件平台及数据库</li><li>软件</li><li>人员</li></ul>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL练习</title>
    <link href="/2021/06/19/SQL%E7%BB%83%E4%B9%A0/"/>
    <url>/2021/06/19/SQL%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="sql练习题">SQL练习题</h1><p>现有一数据库，包括以下4个表：学生表（student）、课程表（course）、成绩表（score）、教师信息表（teacher）。4个表的结构如下所示：</p><center>表4-1 student（学生表）</center><table><thead><tr class="header"><th style="text-align: center;">属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">Sno</td><td>Char(3)</td><td>否</td><td>学号（主键）</td></tr><tr class="even"><td style="text-align: center;">Sname</td><td>Char(8)</td><td>否</td><td>姓名</td></tr><tr class="odd"><td style="text-align: center;">Ssex</td><td>Char(2)</td><td>否</td><td>性别</td></tr><tr class="even"><td style="text-align: center;">Sbirthday</td><td>Datetime</td><td>是</td><td>出生日期</td></tr><tr class="odd"><td style="text-align: center;">class</td><td>Char(5)</td><td>是</td><td>所在班级</td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">table</span> student(<br>    <br>sno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">primary</span> key,<br>    <br>sname <span class="hljs-type">char</span>(<span class="hljs-number">8</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    <br>ssex <span class="hljs-type">char</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    <br>birthday datetime,<br>    <br>class <span class="hljs-type">char</span>(<span class="hljs-number">5</span>)<br>);<br></code></pre></div></td></tr></table></figure><center>表4-2 course（课程表）</center><table><thead><tr class="header"><th>属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr class="odd"><td>Cno</td><td>Char(5)</td><td>否</td><td>课程号（主键）</td></tr><tr class="even"><td>Cname</td><td>Varchar(10)</td><td>否</td><td>课程名</td></tr><tr class="odd"><td>tno</td><td>Char(3)</td><td>否</td><td>教师编号（外键）</td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">table</span> course(<br><br>cno <span class="hljs-type">char</span>(<span class="hljs-number">5</span>) <span class="hljs-keyword">primary</span> key,<br><br>cname <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),<br><br>tno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>),<br><br><span class="hljs-keyword">foreign</span> key(tno) <span class="hljs-keyword">references</span> teacher(tno)<br><br>)<br></code></pre></div></td></tr></table></figure><center>表4-3 score（成绩表）</center><table><thead><tr class="header"><th>属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr class="odd"><td>Sno</td><td>Char(3)</td><td>否</td><td>学号（外键）</td></tr><tr class="even"><td>Cno</td><td>Char(5)</td><td>否</td><td>课程号（外键）</td></tr><tr class="odd"><td>Degree</td><td>Decimal(4,1)</td><td>是</td><td>成绩</td></tr><tr class="even"><td>主键：sno+cno</td><td></td><td></td><td></td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> score(<br><br>sno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>),<br><br>cno <span class="hljs-type">char</span>(<span class="hljs-number">5</span>),<br><br>degree <span class="hljs-type">decimal</span>(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>),<br><br><span class="hljs-keyword">primary</span> key(sno,cno),<br><br><span class="hljs-keyword">foreign</span> key(sno) <span class="hljs-keyword">references</span> student(sno) <br><br><span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> cascade<br><br><span class="hljs-keyword">on</span> update cascade,<br><br><span class="hljs-keyword">foreign</span> key(cno) <span class="hljs-keyword">references</span> course(cno) <br><br><span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> <span class="hljs-keyword">no</span> action<br><br><span class="hljs-keyword">on</span> update cascade,<br><br>)<br></code></pre></div></td></tr></table></figure><center>表4-4 teacher（教师信息表）</center><table><thead><tr class="header"><th>属性名</th><th>数据类型</th><th>是否为空</th><th>含义</th></tr></thead><tbody><tr class="odd"><td>Tno</td><td>Char(3)</td><td>否</td><td>教工编号（主键）</td></tr><tr class="even"><td>Tname</td><td>Char(4)</td><td>否</td><td>教工姓名</td></tr><tr class="odd"><td>Tsex</td><td>Char(2)</td><td>否</td><td>教工性别</td></tr><tr class="even"><td>Tbirthday</td><td>Datetime</td><td>是</td><td>教工出生日期</td></tr><tr class="odd"><td>prof</td><td>Char(6)</td><td>是</td><td>职称</td></tr><tr class="even"><td>depart</td><td>Varchar(10)</td><td>否</td><td>教工所在部门</td></tr></tbody></table><ul><li>此表的创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> teacher(<br><br>tno <span class="hljs-type">char</span>(<span class="hljs-number">3</span>) <span class="hljs-keyword">primary</span> key,<br><br>tname <span class="hljs-type">char</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br><br>tsex <span class="hljs-type">char</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br><br>tbirthday datetime,<br><br>prof <span class="hljs-type">char</span>(<span class="hljs-number">6</span>),<br><br>depart <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>)<br><br>)<br></code></pre></div></td></tr></table></figure><h2 id="查询">查询</h2><ul><li>请用sql语句完成以下题目：</li></ul><p>（1） 查询student表中的所有sname、ssex和class列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,ssex,class <span class="hljs-keyword">from</span> student<br></code></pre></div></td></tr></table></figure><p>（2） 查询教师所在的部门，要求不能有重复值出现。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> depart <span class="hljs-keyword">from</span> teacher<br></code></pre></div></td></tr></table></figure><p>（3） 查询student表的所有记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br></code></pre></div></td></tr></table></figure><p>（4） 查询score表中成绩在60到90之间的记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree <span class="hljs-keyword">between</span> <span class="hljs-number">60</span> <span class="hljs-keyword">and</span> <span class="hljs-number">90</span><br></code></pre></div></td></tr></table></figure><p>（5） 查询score表中成绩为85、86或88的记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree <span class="hljs-keyword">in</span>(<span class="hljs-number">85</span>,<span class="hljs-number">86</span>,<span class="hljs-number">88</span>)<br></code></pre></div></td></tr></table></figure><p>（6） 查询student表中“95031”班或女生的记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;5&#x27;</span> <span class="hljs-keyword">or</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（7） 以class降序查询student表的所有记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> class <span class="hljs-keyword">desc</span><br></code></pre></div></td></tr></table></figure><p>（8） 以cno升序、degree降序查询score表的所有记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cno ,degree <span class="hljs-keyword">desc</span><br></code></pre></div></td></tr></table></figure><p>（9） 查询“95031”班的学生人数。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（10） 查询每门课程的平均分。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> cno,<span class="hljs-built_in">AVG</span>(degree) <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> cno<br></code></pre></div></td></tr></table></figure><p>（11） 查询score表中的最高分的学生学号和课程号。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sno,cno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(degree) <span class="hljs-keyword">from</span> score)<br></code></pre></div></td></tr></table></figure><p><em>（12）查询score表中至少有5名学生选修的并以3开头的课程的平均分。</em></p><p>（13） 查询分数大于70且小于90的sno列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><span class="hljs-number">70</span> <span class="hljs-keyword">and</span> degree<span class="hljs-operator">&lt;</span><span class="hljs-number">90</span><br></code></pre></div></td></tr></table></figure><p>（14） 查询所有学生的sname、cno和degree列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,cno,degree <span class="hljs-keyword">from</span><br><br>student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno<br></code></pre></div></td></tr></table></figure><p>（15） 查询所有学生的sno、cname和degree列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> student.sno,cname,degree <span class="hljs-keyword">from</span><br><br>(student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br></code></pre></div></td></tr></table></figure><p>（16） 查询所有学生的sname、cname和degree列。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,cname,degree <span class="hljs-keyword">from</span><br><br>(student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br></code></pre></div></td></tr></table></figure><p>（17） 查询95033班学生的平均分。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">AVG</span>(degree)<br><br><span class="hljs-keyword">from</span> (student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span><br></code></pre></div></td></tr></table></figure><p><strong><em>（18）查询选修3-105课程的成绩高于109号同学成绩的所有同学的选课记录。</em></strong></p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span>(<span class="hljs-keyword">select</span> degree <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00001&#x27;</span> <span class="hljs-keyword">and</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;001&#x27;</span>)<br><br><span class="hljs-keyword">and</span> sno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00001&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p><strong><em>（19）查询score中选修多门课程的同学且成绩非最高分的学生选课记录。</em></strong></p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <br><br>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <br><br><span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> <br><br>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(degree) <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> cno)) t1<br><br><span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sno <span class="hljs-keyword">having</span> <span class="hljs-built_in">COUNT</span>(sno)<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span>)<br></code></pre></div></td></tr></table></figure><p>（20） 查询成绩高于004号学生所选修的00003课程成绩的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><br><br>(<span class="hljs-keyword">select</span> degree<br><br><span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;004&#x27;</span> <span class="hljs-keyword">and</span> cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00003&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>（21） 查询与003号学生同年出生的所有学生的sno、sname和sbirthday。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> s1.sno,s1.sname,s1.sbirthday<br><br><span class="hljs-keyword">from</span> student s1,student s2<br><br><span class="hljs-keyword">where</span> <span class="hljs-keyword">YEAR</span>(s1.sbirthday)<span class="hljs-operator">=</span><span class="hljs-keyword">YEAR</span>(s2.sbirthday) <span class="hljs-keyword">and</span> s2.sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;003&#x27;</span> <span class="hljs-keyword">and</span> s1.sno<span class="hljs-operator">&lt;&gt;</span>s2.sno<br></code></pre></div></td></tr></table></figure><p>（22） 查询ooo老师所上课程的学生的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span><br><br>(<span class="hljs-keyword">select</span> score.sno <span class="hljs-keyword">from</span> score,teacher,course <span class="hljs-keyword">where</span> tname <span class="hljs-operator">=</span><span class="hljs-string">&#x27;ooo&#x27;</span> <span class="hljs-keyword">and</span> course.tno<span class="hljs-operator">=</span>teacher.tno <span class="hljs-keyword">and</span> score.cno<span class="hljs-operator">=</span>course.cno)<br></code></pre></div></td></tr></table></figure><p><strong><em>（23）查询选修人数超过2人的课程的任课教师。</em></strong></p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> tname <span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> tno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> tno <span class="hljs-keyword">from</span> course <span class="hljs-keyword">where</span> cno <span class="hljs-keyword">in</span> (<br><br><span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> cno <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(sno)<span class="hljs-operator">&gt;</span><span class="hljs-number">2</span>));<br></code></pre></div></td></tr></table></figure><p>（24） 查询1班和4班全体学生的信息。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> class<span class="hljs-operator">=</span><span class="hljs-string">&#x27;4&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（25） 查询成绩在85分以上的课程号cno。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> score <span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><span class="hljs-number">85</span><br></code></pre></div></td></tr></table></figure><p>（26） 查询数学系教师所教课程的成绩信息表。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> cno <span class="hljs-keyword">in</span><br><br>(<span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> course <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> teacher <span class="hljs-keyword">on</span> course.tno<span class="hljs-operator">=</span>teacher.tno<br><br><span class="hljs-keyword">where</span> depart<span class="hljs-operator">=</span><span class="hljs-string">&#x27;数学&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>（27） 查询计算机系和数学系不同职称的教师人数。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> depart,<span class="hljs-built_in">COUNT</span>(<span class="hljs-keyword">distinct</span> prof)<br><br><span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> depart<span class="hljs-operator">=</span><span class="hljs-string">&#x27;数学&#x27;</span> <span class="hljs-keyword">or</span> depart<span class="hljs-operator">=</span><span class="hljs-string">&#x27;计算机&#x27;</span><br><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> depart<br></code></pre></div></td></tr></table></figure><p><em>（28）查询选修了3-105课程且成绩至少高于3-245课程的同学的cno、sno和degree，并按degree的降序显示。</em></p><p>（29） 查询所有教师和学生的name、sex和birthday。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,ssex,sbirthday<br><br><span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">union</span><br><br><span class="hljs-keyword">select</span> tname,tsex,tbirthday<br><br><span class="hljs-keyword">from</span> teacher<br></code></pre></div></td></tr></table></figure><p>（30） 查询所有女教师和女学生的name、sex和birthday。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,ssex,sbirthday<br><br><span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br><br><span class="hljs-keyword">union</span><br><br><span class="hljs-keyword">select</span> tname,tsex,tbirthday<br><br><span class="hljs-keyword">from</span> teacher <span class="hljs-keyword">where</span> tsex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（31） 查询成绩比该课程平均成绩低的学生的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score s1<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&lt;</span><br><br>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(degree)<br><br><span class="hljs-keyword">from</span> score s2 <br><br><span class="hljs-keyword">where</span> s1.cno<span class="hljs-operator">=</span>s2.cno)<br></code></pre></div></td></tr></table></figure><p>（32） 查询所有任课教师的tname和depart。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> tname,depart <span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> tno <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> tno <span class="hljs-keyword">from</span> course)<br></code></pre></div></td></tr></table></figure><p>（33） 查询所有未任课教师的tname和depart。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> tname,depart <span class="hljs-keyword">from</span> teacher<br><br><span class="hljs-keyword">where</span> tno <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> tno <span class="hljs-keyword">from</span> course)<br></code></pre></div></td></tr></table></figure><p>（34） 查询至少有1名女生的班号。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> class <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> class <span class="hljs-keyword">having</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><p>（35） 查询student表中不姓王的学生记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> student<br><br><span class="hljs-keyword">where</span> sname <span class="hljs-keyword">not</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;王%&#x27;</span><br></code></pre></div></td></tr></table></figure><p>（36） 查询student表中最大和最小的学生出生日期。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(sbirthday),<span class="hljs-built_in">MIN</span>(sbirthday) <span class="hljs-keyword">from</span> student<br></code></pre></div></td></tr></table></figure><p>（37） 查询男教师及其所上课程的信息。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> course <span class="hljs-keyword">where</span> tno <span class="hljs-keyword">in</span>(<br><br><span class="hljs-keyword">select</span> tno <span class="hljs-keyword">from</span> teacher <span class="hljs-keyword">where</span> tsex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>（38） 查询成绩为最高的学生的选课记录。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> sname,cname <span class="hljs-keyword">from</span> <br><br>(student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno)<br><br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br><br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">MAX</span>(degree) <span class="hljs-keyword">from</span> score)<br></code></pre></div></td></tr></table></figure><p>（39） 查询和李军同性别且同班级的学生sname。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> s1.sname <span class="hljs-keyword">from</span> student s1,student s2<br><br><span class="hljs-keyword">where</span> s1.ssex<span class="hljs-operator">=</span>s2.ssex <span class="hljs-keyword">and</span> s1.class<span class="hljs-operator">=</span>s2.class <span class="hljs-keyword">and</span> s2.sname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;yyy&#x27;</span> <span class="hljs-keyword">and</span>     s1.sno<span class="hljs-operator">&lt;&gt;</span>s2.sno<br></code></pre></div></td></tr></table></figure><p>（40） 查询所有选修数据库课程的男同学的成绩表。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> score<br><br><span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> sno <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span>)<br><br><span class="hljs-keyword">and</span> cno<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> cno <span class="hljs-keyword">from</span> course <span class="hljs-keyword">where</span> cname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;数据库&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="数据更新">数据更新</h2><ol type="1"><li><p>插入数据</p><ol type="1"><li><p>全部字段</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> teacher<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;122&#x27;</span>,<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-string">&#x27;女&#x27;</span>,<span class="hljs-string">&#x27;2001/9/1&#x27;</span>,<span class="hljs-string">&#x27;讲师&#x27;</span>,<span class="hljs-string">&#x27;数学&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li><li><p>部分字段</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> teacher(tno,tname,tsex)<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;123&#x27;</span>,<span class="hljs-string">&#x27;acd&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li><li><p>插入子查询</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> student(sno,sname,ssex)<br><span class="hljs-keyword">select</span> tno,tname,tsex<br><span class="hljs-keyword">from</span> teacher<br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>更新数据</p><ol type="1"><li><p>更新单条数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql">update student<br><span class="hljs-keyword">set</span> class<span class="hljs-operator">=</span><span class="hljs-number">2</span><br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;111&#x27;</span><br></code></pre></div></td></tr></table></figure></li><li><p>更新多条数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql">update score<br><span class="hljs-keyword">set</span> degree<span class="hljs-operator">=</span>degree<span class="hljs-operator">+</span><span class="hljs-number">10</span><br><span class="hljs-keyword">where</span> sno <span class="hljs-keyword">in</span>(<br><span class="hljs-keyword">select</span> sno<br><span class="hljs-keyword">from</span> student <br><span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>删除数据</p><ol type="1"><li><p>把班级号为空的学生信息删除</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> student<br><span class="hljs-keyword">where</span> class <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span><br></code></pre></div></td></tr></table></figure></li></ol></li></ol><h2 id="视图">视图</h2><ol type="1"><li><p>建立视图</p><ol type="1"><li><p>通过表建立，并设置对视图进行操作时要检查where条件</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> nv_Student<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> sno,sname,ssex<br><span class="hljs-keyword">from</span> student<br><span class="hljs-keyword">where</span> ssex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> option<br></code></pre></div></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> stu_score<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> student.sno,sname,course.cno,cname,degree<br><span class="hljs-keyword">from</span> (student <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> score <span class="hljs-keyword">on</span> student.sno<span class="hljs-operator">=</span>score.sno) <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> course <span class="hljs-keyword">on</span> score.cno<span class="hljs-operator">=</span>course.cno<br></code></pre></div></td></tr></table></figure></li><li><p>通过已有视图建立视图</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> stu_score_2<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> stu_score<br><span class="hljs-keyword">where</span> degree<span class="hljs-operator">&gt;</span><span class="hljs-number">88</span><br></code></pre></div></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> s_g(sno,gavg)<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> sno,<span class="hljs-built_in">AVG</span>(degree)<br><span class="hljs-keyword">from</span> stu_score_2<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sno<br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>查询视图</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> stu_score<br></code></pre></div></td></tr></table></figure></li><li><p>更新视图，通过视图更新基本表数据</p><ol type="1"><li><p>通过stu_score视图设置学生001的00001课程的成绩为100</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql">update stu_score<br><span class="hljs-keyword">set</span> degree<span class="hljs-operator">=</span><span class="hljs-number">100</span><br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;001&#x27;</span> <span class="hljs-keyword">and</span> cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00001&#x27;</span><br></code></pre></div></td></tr></table></figure></li><li><p>通过视图插入数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> nv_Student<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;008&#x27;</span>,<span class="hljs-string">&#x27;lpl&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>)  # 不能男，因为此视图设置了<span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> option<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> nv_Student<br><span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;008&#x27;</span>,<span class="hljs-string">&#x27;lpl&#x27;</span>,<span class="hljs-string">&#x27;女&#x27;</span>)<br></code></pre></div></td></tr></table></figure></li><li><p>通过视图删除数据</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> nv_Student<br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;008&#x27;</span><br></code></pre></div></td></tr></table></figure></li></ol></li><li><p>删除视图</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">view</span> nv_Student<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">view</span> stu_score_2<br></code></pre></div></td></tr></table></figure></li></ol><h2 id="数据完整性">数据完整性</h2><ul><li><p>之前创建score表的时候设置了级联删除，因此执行下面的语句后，score表中关于111号学生的成绩也会被删除。</p><figure class="highlight sql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> student <br><span class="hljs-keyword">where</span> sno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;111&#x27;</span><br></code></pre></div></td></tr></table></figure></li></ul><h2 id="注">注</h2><p><strong><em>加粗且斜体要特别注意</em></strong></p><h2 id="sql文件链接">sql文件链接</h2><p><a href="https://pan.baidu.com/s/1QIiZTo6V03Cyi37Y4txubQ">链接:</a>提取码:vb2y</p>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>聚类分析</title>
    <link href="/2021/06/16/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    <url>/2021/06/16/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="聚类分析">聚类分析</h1><h2 id="层次聚类">层次聚类</h2><ul><li><p>基本概念：形成类相似度层次图谱，便于直观的确定类之间的划分。该方法可以得到较理想的分类，但是难以处理大量样本。通过层次树决定聚类个数和聚类方式。</p></li><li><p>基本步骤：</p><ol type="1"><li><p>计算每两个观测之间的距离</p></li><li><p>.将最近的两个观测聚为一类，将其看作一个整体计算与其它观测（类）之间的距离</p></li><li><p>一直重复上述过程，直至所有的观测被聚为一类</p></li><li><p><strong>距离的测量涉及两个层面的问题：一个是观测之间的距离，另一个是类与观测或观测与观测之间的距离</strong></p><p>观测之间的距离：欧氏距离</p><p>类之间的距离：平均法、重心法、Ward最小方差法。</p></li></ol></li><li><p>案例：对中国十个城市经济数据进行聚类分析:</p></li></ul><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R"><span class="hljs-comment">##读取数据集</span><br>Data&lt;-read.csv(<span class="hljs-string">&quot;cities_10.csv&quot;</span>)<br><span class="hljs-comment">##2到10列为各个城市的经济数据</span><br>CluData&lt;-Data[,<span class="hljs-number">2</span>:<span class="hljs-number">10</span>]<br><span class="hljs-comment">##生成距离矩阵，方法使用欧氏距离</span><br>DisMatrix&lt;-dist(CluData,method = <span class="hljs-string">&quot;euclidean&quot;</span>)<br><span class="hljs-comment">##进行层次聚类，method参数选择瓦德法</span><br>CluR&lt;-hclust(d=DisMatrix,method=<span class="hljs-string">&quot;ward.D&quot;</span>)<br><span class="hljs-comment">##使用plot函数绘制聚类结果的树形图</span><br>plot(CluR,labels=Data[,<span class="hljs-number">1</span>])<br></code></pre></div></td></tr></table></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210616200209582.png"alt="聚类结果树形图" /><figcaption aria-hidden="true">聚类结果树形图</figcaption></figure></blockquote><ul><li>结果分析：样本之间的水平线越短，说明两者越相似。比如福建和辽宁的水平线最短，说明两者的消费形式最接近，其次是江苏和山东。</li><li>从树形图中可以获得分类和分为几类的启示。如果想分为四类，可以像上图所示的那样，这样把上海、天津分别归为一类，把广西、河北、福建和辽宁归为一类，把山东、江苏、广东和浙江归为一类。</li></ul><h2 id="k-means聚类">k-means聚类</h2><ul><li><p>基本概念：可以处理样本量大的数据，但是不能提供类相似度信息，需要事先决定聚类个数。</p></li><li><p>基本步骤：</p><ol type="1"><li>设定k值，确定聚类数（软件随机分配聚类中心所需的种子）；</li><li>计算每个记录到类中心的距离（欧式），并分成k类。</li><li>然后把k类中心（均值），作为新的中心，重新计算距离；</li><li>重复第2步直到聚类的中心不再移动。</li></ol></li><li><p>应用场景：</p><ol type="1"><li>将个案数据做划分</li><li>异常值检测</li></ol></li><li><p>案例：对上述案例采用k-means聚类方法：</p><blockquote><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">k4&lt;-kmeans(DisMatrix,centers = <span class="hljs-number">4</span>,trace = <span class="hljs-literal">TRUE</span>) <span class="hljs-comment">## DisMatrix为距离矩阵，centers为分成几类 </span><br></code></pre></div></td></tr></table></figure><ul><li>结果：</li></ul><figure class="highlight r"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs R">K-means clustering with <span class="hljs-number">4</span> clusters of sizes <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span><br><br>Cluster means:<br>          <span class="hljs-number">1</span>         <span class="hljs-number">2</span>         <span class="hljs-number">3</span>        <span class="hljs-number">4</span>         <span class="hljs-number">5</span>        <span class="hljs-number">6</span>         <span class="hljs-number">7</span>         <span class="hljs-number">8</span>         <span class="hljs-number">9</span>        <span class="hljs-number">10</span><br><span class="hljs-number">1</span>  <span class="hljs-number">9910.261</span> <span class="hljs-number">14323.813</span> <span class="hljs-number">13745.781</span>     <span class="hljs-number">0.00</span> <span class="hljs-number">12575.144</span> <span class="hljs-number">19087.15</span>  <span class="hljs-number">8720.576</span>  <span class="hljs-number">9042.916</span> <span class="hljs-number">14058.833</span> <span class="hljs-number">17018.930</span><br><span class="hljs-number">2</span> <span class="hljs-number">27655.892</span> <span class="hljs-number">29511.575</span> <span class="hljs-number">31618.631</span> <span class="hljs-number">19087.15</span> <span class="hljs-number">26837.634</span>     <span class="hljs-number">0.00</span> <span class="hljs-number">24186.184</span> <span class="hljs-number">27193.594</span> <span class="hljs-number">26771.674</span> <span class="hljs-number">35827.956</span><br><span class="hljs-number">3</span>  <span class="hljs-number">6362.906</span>  <span class="hljs-number">3316.446</span>  <span class="hljs-number">7979.897</span> <span class="hljs-number">12419.59</span>  <span class="hljs-number">2437.858</span> <span class="hljs-number">26826.77</span>  <span class="hljs-number">3914.664</span>  <span class="hljs-number">7259.760</span>  <span class="hljs-number">3353.722</span> <span class="hljs-number">13483.506</span><br><span class="hljs-number">4</span>  <span class="hljs-number">3517.258</span>  <span class="hljs-number">7767.016</span>  <span class="hljs-number">3611.960</span> <span class="hljs-number">12429.47</span>  <span class="hljs-number">8679.445</span> <span class="hljs-number">30574.02</span>  <span class="hljs-number">7711.334</span>  <span class="hljs-number">3709.521</span> <span class="hljs-number">10928.274</span>  <span class="hljs-number">5829.637</span><br><br>Clustering vector:<br> <span class="hljs-number">1</span>  <span class="hljs-number">2</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">5</span>  <span class="hljs-number">6</span>  <span class="hljs-number">7</span>  <span class="hljs-number">8</span>  <span class="hljs-number">9</span> <span class="hljs-number">10</span> <br> <span class="hljs-number">4</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">1</span>  <span class="hljs-number">3</span>  <span class="hljs-number">2</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span> <span class="hljs-comment"># 分类结果</span><br><br>Within cluster <span class="hljs-built_in">sum</span> of squares by cluster:<br>[<span class="hljs-number">1</span>]         <span class="hljs-number">0</span>         <span class="hljs-number">0</span> <span class="hljs-number">138020724</span> <span class="hljs-number">382259532</span><br> (between_SS / total_SS =  <span class="hljs-number">90.9</span> %)<br><br>Available components:<br><br>[1] &quot;cluster&quot;      &quot;centers&quot;      &quot;totss&quot;        &quot;withinss&quot;     &quot;tot.withinss&quot; &quot;betweenss&quot;   <br>[7] &quot;size&quot;         &quot;iter&quot;         &quot;ifault&quot; <br></code></pre></div></td></tr></table></figure></blockquote></li></ul><h2 id="数据集">数据集</h2><table style="width:100%;"><colgroup><col style="width: 6%" /><col style="width: 12%" /><col style="width: 8%" /><col style="width: 10%" /><col style="width: 10%" /><col style="width: 10%" /><col style="width: 10%" /><col style="width: 10%" /><col style="width: 10%" /><col style="width: 10%" /></colgroup><thead><tr class="header"><th>AREA</th><th>X1</th><th>X2</th><th>X3</th><th>X4</th><th>X5</th><th>X6</th><th>X7</th><th>X8</th><th>X9</th></tr></thead><tbody><tr class="odd"><td>辽宁</td><td>5458.2</td><td>13000</td><td>1376.2</td><td>2258.4</td><td>1315.9</td><td>529</td><td>2258.4</td><td>123.7</td><td>399.7</td></tr><tr class="even"><td>山东</td><td>10550</td><td>11643</td><td>3502.5</td><td>3851</td><td>2288.7</td><td>1070.7</td><td>3181.9</td><td>211.1</td><td>610.2</td></tr><tr class="odd"><td>河北</td><td>6076.6</td><td>9047</td><td>1406.7</td><td>2092.6</td><td>1161.6</td><td>597.1</td><td>1968.3</td><td>45.9</td><td>302.3</td></tr><tr class="even"><td>天津</td><td>2022.6</td><td>22068</td><td>822.8</td><td>960</td><td>703.7</td><td>361.9</td><td>941.4</td><td>115.7</td><td>171.8</td></tr><tr class="odd"><td>江苏</td><td>10636.3</td><td>14397</td><td>3536.3</td><td>3967.2</td><td>2320</td><td>1141.3</td><td>3215.8</td><td>384.7</td><td>643.7</td></tr><tr class="even"><td>上海</td><td>5408.8</td><td>40627</td><td>2196.2</td><td>2755.8</td><td>1970.2</td><td>779.3</td><td>2035.2</td><td>320.5</td><td>709</td></tr><tr class="odd"><td>浙江</td><td>7670</td><td>16570</td><td>2356.5</td><td>3065</td><td>2296.6</td><td>1180.6</td><td>2877.5</td><td>294.2</td><td>566.9</td></tr><tr class="even"><td>福建</td><td>4682</td><td>13510</td><td>1047.1</td><td>1859</td><td>964.5</td><td>397.9</td><td>1663.3</td><td>173.7</td><td>272.9</td></tr><tr class="odd"><td>广东</td><td>11769.7</td><td>15030</td><td>4224.6</td><td>4793.6</td><td>3022.9</td><td>1275.5</td><td>5013.6</td><td>1843.7</td><td>1201.6</td></tr><tr class="even"><td>广西</td><td>2455.4</td><td>5062</td><td>367</td><td>995.7</td><td>542.2</td><td>352.7</td><td>1025.5</td><td>15.1</td><td>186.7</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>科学上网</title>
    <link href="/2021/06/13/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <url>/2021/06/13/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<h1id="本文教你在国内如何访问外国网站">本文教你在国内如何访问外国网站</h1><h2 id="step-1-注册">Step 1 注册</h2><p>打开<ahref="https://ikuuu.co/auth/login">此链接</a>，点击马上注册</p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613204208418.png" /></p><h2 id="step-2-登录">Step 2 登录</h2><p>注册完成之后登录，会跳转到如下的页面，我们每个月都会有大约50GB的流量用于上外网，当然每天登录点击右上角的每日签到会额外赠送流量，一般情况下2GB左右</p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613204442085.png" /></p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613204703027.png" /></p><h2 id="step-3-安装软件">Step 3 安装软件</h2><p>点击左侧的下载和教程：这里以Windows为例（手机只要按照教程也是可以科学上网的），下载Clash for Windows客户端，并安装。安装完毕之后，打开软件，然后打开刚才那个网页，点击一键托管配置到Clashfor Windows。</p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613205326920.png" /></p><h2 id="step-4-配置">Step 4 配置</h2><p>配置成功之后，点击常规，打开系统代理，或者在任务栏右击这个软件的图标打开系统代理，即可科学上网。</p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210613205938211.png" /></p>]]></content>
    
    
    <categories>
      
      <category>电脑相关</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo--d失败的解决方法</title>
    <link href="/2021/06/05/hexo-d%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2021/06/05/hexo-d%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-d出现如下错误">hexo d出现如下错误</h2><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205423425.png" /></p><h2 id="解决方法">解决方法</h2><p>删除博客目录下的.deploy_git文件夹</p><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205439634.png" /></p><p>接着依次执行如下命令</p><figure class="highlight haxe"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs haxe">git config --global core.autocrlf <span class="hljs-literal">false</span><br>hexo clean<br>hexo g<br>hexo d<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows彻底关闭自动更新</title>
    <link href="/2021/06/05/Windows%E5%BD%BB%E5%BA%95%E5%85%B3%E9%97%AD%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    <url>/2021/06/05/Windows%E5%BD%BB%E5%BA%95%E5%85%B3%E9%97%AD%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="step1">Step1</h2><p>win+r打开运行窗口</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606204709326.png"alt="image-20210606204709326" /><figcaption aria-hidden="true">image-20210606204709326</figcaption></figure><h2 id="step2">Step2</h2><p>输入gpedit.msc,点击确定</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606204925978.png"alt="image-20210606204925978" /><figcaption aria-hidden="true">image-20210606204925978</figcaption></figure><h2 id="step3">Step3</h2><p>在出现的界面中依次点击计算机配置---管理模板---Windows组件---Windows更新</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205101137.png"alt="image-20210606205101137" /><figcaption aria-hidden="true">image-20210606205101137</figcaption></figure><h2 id="step4">Step4</h2><p>在右侧双击配置自动更新 <imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205224408.png"alt="image-20210606205224408" /></p><h2 id="step5">Step5</h2><p>在弹出的界面依次点击已禁用---应用---确定 <imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606205350866.png"alt="image-20210606205350866" /></p><h2 id="step7">Step7</h2><p>finish！</p><p><a href="https://www.bilibili.com/read/cv8837270">原文链接</a></p>]]></content>
    
    
    <categories>
      
      <category>电脑相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>凑算式</title>
    <link href="/2021/06/05/%E5%87%91%E7%AE%97%E5%BC%8F/"/>
    <url>/2021/06/05/%E5%87%91%E7%AE%97%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p><imgsrc="https://cdn.jsdelivr.net/gh/handong991201/picture/img/image-20210606204825132.png" /></p><p>这个算式中A-I代表1~9的数字，不同的字母代表不同的数字。 比如：6+8/3+952/714 就是一种解法， 5+3/1+972/486 是另一种解法。这个算式一共有多少种解法？</p><h2 id="算法">算法</h2><p>利用回溯算法枚举所有组合，对每一组合判断是否满足等式。</p><h2 id="code">code</h2><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ArrayList&lt;Integer&gt; path = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> num;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr,<span class="hljs-keyword">boolean</span>[] used)</span> </span>&#123;<br><span class="hljs-keyword">if</span>(path.size()==<span class="hljs-number">3</span>) &#123;<br><span class="hljs-keyword">if</span>(path.get(<span class="hljs-number">0</span>)+(path.get(<span class="hljs-number">1</span>)/path.get(<span class="hljs-number">2</span>))&gt;=<span class="hljs-number">10</span>)<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(path.size()==arr.length) &#123;<br>test(path);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br><span class="hljs-keyword">if</span>(used[i]) <span class="hljs-keyword">continue</span>;<br>used[i] = <span class="hljs-keyword">true</span>;<br>path.add(arr[i]);<br>backtracking(arr, used);<br>path.remove(Integer.valueOf(arr[i]));<br>used[i] = <span class="hljs-keyword">false</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">(ArrayList&lt;Integer&gt; p)</span> </span>&#123;<br><span class="hljs-keyword">double</span> t1 = p.get(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">double</span> t2 = p.get(<span class="hljs-number">1</span>)/(<span class="hljs-keyword">double</span>)p.get(<span class="hljs-number">2</span>);<br><span class="hljs-keyword">int</span> a1 = <span class="hljs-number">100</span>*p.get(<span class="hljs-number">3</span>)+<span class="hljs-number">10</span>*p.get(<span class="hljs-number">4</span>)+p.get(<span class="hljs-number">5</span>);<br><span class="hljs-keyword">int</span> a2 = <span class="hljs-number">100</span>*p.get(<span class="hljs-number">6</span>)+<span class="hljs-number">10</span>*p.get(<span class="hljs-number">7</span>)+p.get(<span class="hljs-number">8</span>);<br><span class="hljs-keyword">double</span> t3 = a1/(<span class="hljs-keyword">double</span>)a2;<br><span class="hljs-keyword">if</span>(t1+t2+t3==<span class="hljs-number">10</span>) &#123;<br>num++;<br>System.out.println(p);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-keyword">int</span>[] a = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>&#125;;<br><span class="hljs-keyword">boolean</span>[] used = &#123;<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>,<span class="hljs-keyword">false</span>&#125;;<br>backtracking(a, used);<br>System.out.println(num);<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>蓝桥杯</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java实现行列式的计算</title>
    <link href="/2021/06/05/Java%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
    <url>/2021/06/05/Java%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<h2 id="定义">定义</h2><p>简单地说，从一个$ n n $ 的方阵中选取不同行不同列的$ n $个数，加上符号（由逆序数确定），把所有的取法加到一起即为行列式的值。</p><h2 id="按一行展开">按一行展开</h2><p>按照一行展开，这一行的每个元素乘以对应元素的代数余子式，最终求和，即为行列式的计算结果。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">det</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d,<span class="hljs-keyword">int</span> n)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(n == <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">return</span> d[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]*d[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]-d[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]*d[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>];<br>    &#125;<br>    <span class="hljs-keyword">double</span>[][] d1 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[n-<span class="hljs-number">1</span>][n-<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;j&lt;n;j++) &#123;<span class="hljs-comment">//按照第一行的第j个元素展开计算</span><br>        subDet(d,d1,j);<br>        res += java.lang.Math.pow(-<span class="hljs-number">1</span>, j)*d[<span class="hljs-number">0</span>][j]*det(d1,n-<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 算余子式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d 原先的行列式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d1 余子式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> j 不选择j列</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">subDet</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d, <span class="hljs-keyword">double</span>[][] d1, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>;i&lt;d.length;i++) &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>,l = <span class="hljs-number">0</span>;l&lt;d[i].length;l++) &#123;<br>            <span class="hljs-keyword">if</span>(l!=j)<span class="hljs-comment">//不能选择第j列</span><br>                d1[i-<span class="hljs-number">1</span>][k++] = d[i][l];<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="化为上三角形">化为上三角形</h2><p>利用行列式的性质，可以将行列式化为上三角形，最终只计算对角线上元素即可。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">// 下面是把行列式化为上三角形再进行计算的程序</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> c = <span class="hljs-number">1</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 从第i行开始将d化为上三角形</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d 行列式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> i 行指标</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">upDiag</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d, <span class="hljs-keyword">int</span> i)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(i==d.length-<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-keyword">if</span>(d[i][i]==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i+<span class="hljs-number">1</span>; j &lt; d.length; j++) &#123;<br>            <span class="hljs-keyword">if</span>(d[j][i]!=<span class="hljs-number">0</span>) &#123;<br>                swap(d,i,j);<span class="hljs-comment">//交换d的第i行和第j行</span><br>                c = -<span class="hljs-number">1</span>*c;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br><span class="hljs-comment">//if(d[i][i] != 1.0) &#123;//将首行第一个元素变为1</span><br><span class="hljs-comment">//double t = d[i][i];</span><br><span class="hljs-comment">//c = c*t;</span><br><span class="hljs-comment">//for(int j = i;j&lt;d[i].length;j++) &#123;</span><br><span class="hljs-comment">//d[i][j] = d[i][j]/t;</span><br><span class="hljs-comment">//&#125;</span><br><span class="hljs-comment">//&#125;</span><br>    <span class="hljs-keyword">double</span> t;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = i+<span class="hljs-number">1</span>;j&lt;d.length;j++) &#123;<span class="hljs-comment">//把第j行的首个元素变为0</span><br>        <span class="hljs-keyword">if</span> (d[j][i] != <span class="hljs-number">0</span>)&#123;<br>            t = -d[j][i] / d[i][i];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = i; k &lt; d[j].length; k++) &#123;<span class="hljs-comment">//同时本行的其他元素也要加上相应的倍数</span><br>                d[j][k] = d[j][k] + t * d[i][k];<br>            &#125;<br>        &#125;<br>    &#125;<br>    upDiag(d, i+<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 交换i行和j行</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> d 行列式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> i 交换的行</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> j 与i进行交换的行</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">double</span>[][] d, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<br>    <span class="hljs-keyword">double</span> t;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = i; k &lt; d[i].length; k++) &#123;<br>        t = d[i][k];<br>        d[i][k] = d[j][k];<br>        d[j][k] = t;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021年蓝桥杯国赛经历</title>
    <link href="/2021/06/05/2021%E5%B9%B4%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%9B%BD%E8%B5%9B%E7%BB%8F%E5%8E%86/"/>
    <url>/2021/06/05/2021%E5%B9%B4%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%9B%BD%E8%B5%9B%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<h2 id="出发">出发</h2><p>​ 今天参加了蓝桥杯2021年国赛，早上去比赛是过A05的，之后就奔向赛场。放下手机，立地成佛。</p><h2 id="赛前">赛前</h2><p>​比赛地点在A09-511的机房，去到那里，老师和另一个选手已经在那里了，我们聊着这比赛以及一些事情。我学的这些算法都是自己自学的，没有老师教，那位嵌入式的也应该跟我是一样的。我们聊到了专业的课程设置，听那老师说物电的学生兼顾软硬件结合，确实如此，威就是这样的一个人，既能懂底层的原理，又会通过软件来实现，这样子挺好。不像我学的这个专业，一些底层是如何实现的都没有教，数学系的学生不应该更加注重数学的知识吗，大三开的课几乎都是计算机的，而且。。。等到实习的时候，建议我们报个班，交个两万块钱，培训一下，给你找一个工作，完事，然后在院系里写着某某某在哪个互联网公司，月薪多少k。唉。</p><h2 id="赛中">赛中</h2><p>​9点钟的时候，开始比赛，看到第一题，这么简单的吗？？接着做，第二、三题，都写出来了，第四题看到是二叉树的就直接跳过了。第五题是程序题，给你一个字符串（包含小写大写字母），让你转化为大写的，属于签到题。第六题123，也可以做，但是我写了一个半小时。最后总共写了7个题目吧，3个填空，4个程序设计（两个暴力，估计得不了几分）。</p><h2 id="赛后">赛后</h2><p>​这是第一次参加国家级的比赛，收获还是比较多的，每当自己想不出来怎么做或者怎么实现算法的效率更高，看了别人的算法就觉得这想法真神奇啊。</p>]]></content>
    
    
    <categories>
      
      <category>蓝桥杯</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
